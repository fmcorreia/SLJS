/* Generated by JSIL v0.2 build 16343. See http://jsil.org/ for more information. */ 
var $asm05 = JSIL.DeclareAssembly("System.Windows.Browser, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e");
JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Windows");
JSIL.DeclareNamespace("System.Windows.Browser");
JSIL.MakeClass("System.ComponentModel.DescriptionAttribute", "System.Windows.Browser.ResxDescriptionAttribute", false);

JSIL.MakeClass("System.ComponentModel.CategoryAttribute", "System.Windows.Browser.ResxCategoryAttribute", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.Resx", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.BrowserInformation", true);

JSIL.MakeClass("System.Object", "System.Windows.Browser.BrowserMatch", false);

JSIL.MakeDelegate("System.Windows.Browser.ScriptEventHandler");

JSIL.MakeClass("System.Windows.Hosting.DelegateWrapper", "System.Windows.Browser.EventCookie", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ScriptObject", true);

JSIL.MakeClass("System.Windows.Browser.ScriptObject", "System.Windows.Browser.HtmlObject", true);

JSIL.MakeClass("System.Windows.Browser.HtmlObject", "System.Windows.Browser.HtmlDocument", true);

JSIL.MakeClass("System.Windows.Browser.HtmlObject", "System.Windows.Browser.HtmlElement", true);

JSIL.MakeClass("System.EventArgs", "System.Windows.Browser.HtmlEventArgs", true);

JSIL.MakeStaticClass("System.Windows.Browser.HtmlPage", true);

JSIL.MakeClass("System.Object", "System.Windows.Browser.HtmlPopupWindowOptions", true);

JSIL.MakeClass("System.Windows.Browser.HtmlObject", "System.Windows.Browser.HtmlWindow", true);

JSIL.MakeStaticClass("System.Windows.Browser.HttpUtility", true);
JSIL.MakeClass("System.Object", "System.Windows.Browser.HttpUtility/UrlDecoder", false);


JSIL.MakeStaticClass("System.Windows.Browser.HtmlEntities", false);

JSIL.MakeClass("System.Windows.Browser.ScriptObject", "System.Windows.Browser.ManagedObject", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo", false);
JSIL.MakeInterface(
	"System.Windows.Browser.ManagedObjectInfo/IScriptMember", [], {
		"get_MemberType": Function, 
		"Invoke": Function, 
		"MemberType": Property
	});

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ScriptProperty", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ScriptMethod", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ScriptDelegate", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ScriptMemberGroup", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ScriptEvent", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/CreateObjectMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/AddRemoveEventListenerMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/DictionaryGetSetMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ListIndexerMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ListPopOrShiftMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ListPushOrUnshiftMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ListIndexOfMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ListReverseMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ListSpliceMember", false);

JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedObjectInfo/ApplyMember", false);


JSIL.MakeClass("System.Object", "System.Windows.Browser.ManagedServices", false);

JSIL.MakeClass("System.Dynamic.DynamicMetaObject", "System.Windows.Browser.MetaScriptObject", false);

JSIL.MakeEnum(
	"System.Windows.Browser.MouseButtons", {
		None: 0, 
		Left: 1, 
		Right: 2, 
		Middle: 4
	}, true
);

JSIL.MakeClass("System.Attribute", "System.Windows.Browser.ScriptableMemberAttribute", true);

JSIL.MakeClass("System.Attribute", "System.Windows.Browser.ScriptableTypeAttribute", true);

JSIL.MakeClass("System.Windows.Browser.ScriptObject", "System.Windows.Browser.ScriptObjectCollection", true);
JSIL.MakeClass("System.Object", "System.Windows.Browser.ScriptObjectCollection/ScriptObjectEnumerator", false);


JSIL.DeclareNamespace("System.Windows.Hosting");
JSIL.MakeClass("System.Object", "System.Windows.Hosting.BrowserService", false);

JSIL.MakeStaticClass("System.Windows.Hosting.IsolatedStorageGroupComparison", false);

JSIL.MakeClass("System.AppDomainManager", "System.Windows.Hosting.HostAppDomainManager", false);

JSIL.MakeStaticClass("System.Windows.Hosting.ManagedHost", false);

JSIL.MakeClass("System.Object", "System.Windows.Hosting.ManagedRuntimeHost", false);

JSIL.MakeStaticClass("System.Windows.Hosting.ScriptingInterface", false);

JSIL.MakeStaticClass("System.Windows.Hosting.UnsafeNativeMethods", false);

$asm05.System.Windows.Browser.ResxDescriptionAttribute.prototype._ctor = function (description) {
	System.ComponentModel.DescriptionAttribute.prototype._ctor$1.call(this, description);
};
$asm05.System.Windows.Browser.ResxDescriptionAttribute.prototype.get_Description = function () {
	if (!this.replaced) {
		this.replaced = true;
		System.ComponentModel.DescriptionAttribute.prototype.set_DescriptionValue.call(this, $asm05.System.Windows.Browser.Resx.GetString$2(System.ComponentModel.DescriptionAttribute.prototype.get_Description.call(this)));
	}
	return System.ComponentModel.DescriptionAttribute.prototype.get_Description.call(this);
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ResxDescriptionAttribute.prototype, "Description", 
	$asm05.System.Windows.Browser.ResxDescriptionAttribute.prototype.get_Description, null);
$asm05.System.Windows.Browser.ResxDescriptionAttribute.prototype.replaced = false;

$asm05.System.Windows.Browser.ResxCategoryAttribute.prototype._ctor = function (category) {
	System.ComponentModel.CategoryAttribute.prototype._ctor$1.call(this, category);
};
$asm05.System.Windows.Browser.ResxCategoryAttribute.prototype.GetLocalizedString = function (value) {
	return $asm05.System.Windows.Browser.Resx.GetString$2(value);
};

$asm05.System.Windows.Browser.Resx.get_InternalSyncObject = function () {
	if ($asm05.System.Windows.Browser.Resx.s_InternalSyncObject === null) {
		var value = new System.Object();
		System.Threading.Interlocked.CompareExchange$b1(System.Object)(/* ref */ new JSIL.MemberReference($asm05.System.Windows.Browser.Resx, "s_InternalSyncObject"), value, null);
	}
	return $asm05.System.Windows.Browser.Resx.s_InternalSyncObject;
};
$asm05.System.Windows.Browser.Resx.prototype._ctor = function () {
	System.Object.prototype._ctor.call(this);
	var assembly = JSIL.GetType(this).Assembly;
	this.resources = JSIL.New(System.Resources.ResourceManager, "_ctor$1", ["System.Windows.Browser", assembly]);
	try {
		var assembly2 = System.Reflection.Assembly.Load$0("System.Windows.Browser.debug.resources, Version=2.0.5.0, Culture=en-US, PublicKeyToken=7cec85d7bea7798e");
		this.debugResources = JSIL.New(System.Resources.ResourceManager, "_ctor$1", ["System.Windows.Browser.debug", assembly2]);
	} catch ($exception) {
		if (JSIL.CheckType($exception, System.IO.FileNotFoundException)) {
		} else {
			throw $exception;
		}
	}
	this.fallbackResources = JSIL.New(System.Resources.ResourceManager, "_ctor$1", ["mscorlib", System.Object.Assembly]);
};
$asm05.System.Windows.Browser.Resx.GetLoader = function () {
	var internalSyncObject = null;
	if ($asm05.System.Windows.Browser.Resx.loader === null) {
		System.Threading.Monitor.Enter((internalSyncObject = $asm05.System.Windows.Browser.Resx.InternalSyncObject));
		try {
			if ($asm05.System.Windows.Browser.Resx.loader === null) {
				$asm05.System.Windows.Browser.Resx.loader = new $asm05.System.Windows.Browser.Resx();
			}
		} finally {
			System.Threading.Monitor.Exit(internalSyncObject);
		}
	}
	return $asm05.System.Windows.Browser.Resx.loader;
};
$asm05.System.Windows.Browser.Resx.get_Culture = function () {
	return null;
};
$asm05.System.Windows.Browser.Resx.GetString$0 = function (name, args) {
	var flag = new JSIL.Variable(false);
	return $asm05.System.Windows.Browser.Resx.GetString$1(name, /* ref */ flag, args);
};
$asm05.System.Windows.Browser.Resx.GetString$1 = function (name, /* ref */ fallbackUsed, args) {
	var resx = $asm05.System.Windows.Browser.Resx.GetLoader();
	var text = null;
	fallbackUsed.value = false;
	if (resx !== null) {
		text = resx.resources.GetString$1(name, $asm05.System.Windows.Browser.Resx.Culture);
		if (!(text || (resx.debugResources === null))) {
			text = resx.debugResources.GetString$1(name, $asm05.System.Windows.Browser.Resx.Culture);
		}
		if (text !== null) {
			if (!((args === null) || (args.length <= 0))) {
			__loop0__: 
				for (var i = 0; i < args.length; ++i) {
					if (args[i]) {
						var text2 = args[i].toString();
						if (!((text2 === null) || (text2.length <= 1024))) {
							args[i] = ((text2.Substring$1(0, 1021) + "..."));
						}
					}
				}
				return System.String.Format(System.Globalization.CultureInfo.CurrentCulture, text, args);
			}
			return text;
		}
	}
	fallbackUsed.value = true;
	text = $asm05.System.Windows.Browser.Resx.GetFallbackMessage(name, args);
	return text;
};
$asm05.System.Windows.Browser.Resx.GetString$2 = function (name) {
	var text = $asm05.System.Windows.Browser.Resx.GetStringHelper(name);
	if (text === null) {
		text = $asm05.System.Windows.Browser.Resx.GetFallbackMessage(name, null);
	}
	return text;
};
$asm05.System.Windows.Browser.Resx.GetString$3 = function (name, /* ref */ usedFallback) {
	var text = $asm05.System.Windows.Browser.Resx.GetStringHelper(name);
	if (text === null) {
		text = $asm05.System.Windows.Browser.Resx.GetFallbackMessage(name, null);
		usedFallback.value = true;
	} else {
		usedFallback.value = false;
	}
	return text;
};
$asm05.System.Windows.Browser.Resx.GetObject = function (name) {
	var resx = $asm05.System.Windows.Browser.Resx.GetLoader();
	var obj = null;
	if (resx !== null) {
		obj = resx.resources.GetObject$1(name, $asm05.System.Windows.Browser.Resx.Culture);
		if (!(obj || (resx.debugResources === null))) {
			obj = resx.debugResources.GetObject$1(name, $asm05.System.Windows.Browser.Resx.Culture);
		}
	}
	if (obj === null) {
		obj = $asm05.System.Windows.Browser.Resx.GetFallbackMessage(name, null);
	}
	return obj;
};
$asm05.System.Windows.Browser.Resx.GetStringHelper = function (name) {
	var resx = $asm05.System.Windows.Browser.Resx.GetLoader();
	var text = null;
	if (resx !== null) {
		text = resx.resources.GetString$1(name, $asm05.System.Windows.Browser.Resx.Culture);
		if (!(text || (resx.debugResources === null))) {
			text = resx.debugResources.GetString$1(name, $asm05.System.Windows.Browser.Resx.Culture);
		}
	}
	return text;
};
$asm05.System.Windows.Browser.Resx.GetFallbackMessage = function (name, args) {
	var resx = $asm05.System.Windows.Browser.Resx.GetLoader();
	var text = null;
	if (!((resx === null) || (resx.fallbackResources === null))) {
		var string = resx.fallbackResources.GetString$1("NoDebugResources", $asm05.System.Windows.Browser.Resx.Culture);
		if (string !== null) {
			var stringBuilder = JSIL.New(System.Text.StringBuilder, "_ctor$0", []);
			if (args !== null) {
			__loop0__: 
				for (var i = 0; i < args.length; ++i) {
					if (args[i]) {
						var text2 = args[i].toString();
						if (text2 !== null) {
							if (text2.length <= 1024) {
								stringBuilder.Append$2(text2);
							} else {
								stringBuilder.Append$2((text2.Substring$1(0, 1021) + "..."));
							}
							if (i < (args.length - 1)) {
								stringBuilder.Append$2(System.Globalization.CultureInfo.CurrentCulture.TextInfo.ListSeparator);
							}
						}
					}
				}
			}
			var text3 = stringBuilder.toString();
			if (text3 === null) {
				text3 = "";
			}
			text = System.String.Format(System.Globalization.CultureInfo.CurrentCulture, string, [name, text3, "8.0.60310.0", "System.Windows.Browser.dll", $asm05.System.Windows.Browser.Resx.UriEncode(name)]);
		}
	}
	if (text === null) {
		text = name;
	}
	return text;
};
$asm05.System.Windows.Browser.Resx.UriEncode = function (url) {
	if (url === null) {
		return null;
	}
	var array = System.Text.Encoding.UTF8.GetBytes$3(url);
	var num = 0;
	var num2 = 0;
	var num3 = array.length;
__loop0__: 
	for (var i = 0; i < num3; ++i) {
		var c = array[i];
		if (c === " ") {
			++num;
		} else if (!$asm05.System.Windows.Browser.Resx.IsSafe(c)) {
			++num2;
		}
	}
	if (!((num === 0) && (num2 === 0))) {
		var array2 = JSIL.Array.New(System.Byte, (num3 + (num2 * 2)));
		var num4 = 0;
	__loop1__: 
		for (var j = 0; j < num3; ++j) {
			var b = array[j];
			var c2 = String.fromCharCode(b);
			if ($asm05.System.Windows.Browser.Resx.IsSafe(c2)) {
				array2[num4++] = b;
			} else if (c2 === " ") {
				array2[num4++] = 43;
			} else {
				array2[num4++] = 37;
				array2[num4++] = ($asm05.System.Windows.Browser.Resx.IntToHex(((b >> 4) & 15))).charCodeAt(0);
				array2[num4++] = ($asm05.System.Windows.Browser.Resx.IntToHex((b & 15))).charCodeAt(0);
			}
		}
		array = array2;
	}
	return System.Text.Encoding.UTF8.GetString$1(array, 0, array.length);
};
$asm05.System.Windows.Browser.Resx.IntToHex = function (n) {
	if (n <= 9) {
		return (n + 48);
	}
	return ((n - 10) + 97);
};
$asm05.System.Windows.Browser.Resx.IsSafe = function (ch) {
	if (!(!((ch >= "a") && 
				(ch <= "z")) && 
			!((ch >= "A") && 
				(ch <= "Z")) && ((ch < "0") || 
				(ch > "9")))) {
		return true;
	}
	if (ch !== "!") {
		switch (ch) {
			case "'": 
			case "(": 
			case ")": 
			case "*": 
			case "-": 
			case ".": 
				return true;
			case "+": 
			case ",": 
				break;
			default: 
				if (ch === "_") {
					return true;
				}
				break;
		}
		return false;
	}
	return true;
};
JSIL.OverloadedMethod($asm05.System.Windows.Browser.Resx, "GetString", [
		["GetString$0", [System.String, System.Array.Of(System.Object)]], 
		["GetString$1", [System.String, JSIL.Reference.Of(System.Boolean), System.Array.Of(System.Object)]], 
		["GetString$2", [System.String]], 
		["GetString$3", [System.String, JSIL.Reference.Of(System.Boolean)]]
	]);
JSIL.MakeProperty($asm05.System.Windows.Browser.Resx, "InternalSyncObject", 
	$asm05.System.Windows.Browser.Resx.get_InternalSyncObject, null);
JSIL.MakeProperty($asm05.System.Windows.Browser.Resx, "Culture", 
	$asm05.System.Windows.Browser.Resx.get_Culture, null);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "Common_NullOrEmpty", {
		"value": "Common_NullOrEmpty"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "Common_MethodFailed", {
		"value": "Common_MethodFailed"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "HtmlElement_CannotAppendChildToSelf", {
		"value": "HtmlElement_CannotAppendChildToSelf"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "HtmlElementCollection_Disposed", {
		"value": "HtmlElementCollection_Disposed"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "HtmlElementCollectionEnumerator_Disposed", {
		"value": "HtmlElementCollectionEnumerator_Disposed"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "HtmlPage_ScriptableObjectDoesNotExist", {
		"value": "HtmlPage_ScriptableObjectDoesNotExist"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "HtmlPage_NotEnabled", {
		"value": "HtmlPage_NotEnabled"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedHost_ScriptableNotEnabled", {
		"value": "ManagedHost_ScriptableNotEnabled"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedObjectInfo_ReservedMemberName", {
		"value": "ManagedObjectInfo_ReservedMemberName"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedObjectInfo_InvalidInvokeType", {
		"value": "ManagedObjectInfo_InvalidInvokeType"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedObjectInfo_InvalidArgument", {
		"value": "ManagedObjectInfo_InvalidArgument"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedObjectInfo_NoMethodFound", {
		"value": "ManagedObjectInfo_NoMethodFound"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedServices_NoSuchAlias", {
		"value": "ManagedServices_NoSuchAlias"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedServices_ExpectedArrayType", {
		"value": "ManagedServices_ExpectedArrayType"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ManagedServices_IllegalTypeForRegisterCreateableType", {
		"value": "ManagedServices_IllegalTypeForRegisterCreateableType"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "SafeNativeMethods_DateNotSupported", {
		"value": "SafeNativeMethods_DateNotSupported"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptingInterface_NonPublicType", {
		"value": "ScriptingInterface_NonPublicType"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptingInterface_NoScriptableMembers", {
		"value": "ScriptingInterface_NoScriptableMembers"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptingInterface_InvalidArgs", {
		"value": "ScriptingInterface_InvalidArgs"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptObject_TypeDoesNotExist", {
		"value": "ScriptObject_TypeDoesNotExist"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptObject_Disposed", {
		"value": "ScriptObject_Disposed"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptObject_InvalidIdentifier", {
		"value": "ScriptObject_InvalidIdentifier"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptObject_InvokeFailed", {
		"value": "ScriptObject_InvokeFailed"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptObject_InvokeSelfFailed", {
		"value": "ScriptObject_InvokeSelfFailed"}
);
Object.defineProperty($asm05.System.Windows.Browser.Resx, "ScriptObject_ConvertToFailed", {
		"value": "ScriptObject_ConvertToFailed"}
);
$asm05.System.Windows.Browser.Resx.loader = null;
$asm05.System.Windows.Browser.Resx.prototype.resources = null;
$asm05.System.Windows.Browser.Resx.prototype.debugResources = null;
$asm05.System.Windows.Browser.Resx.prototype.fallbackResources = null;
$asm05.System.Windows.Browser.Resx.s_InternalSyncObject = null;
$asm05.System.Windows.Browser.Resx._cctor = function () {
	$asm05.System.Windows.Browser.Resx.loader = null;
};

System.Windows.Browser.BrowserInformation.prototype.get_ProductName = function () {
	return this._productName;
};
System.Windows.Browser.BrowserInformation.prototype.get_ProductVersion = function () {
	return this._productVersion;
};
System.Windows.Browser.BrowserInformation.prototype.get_Name = function () {
	return this._name;
};
System.Windows.Browser.BrowserInformation.prototype.get_BrowserVersion = function () {
	return this._version;
};
System.Windows.Browser.BrowserInformation.prototype.get_CookiesEnabled = function () {
	if (!this._cookieEnabled.HasValue) {
		var value = new JSIL.Variable(false);
		if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetCookiesEnabled(/* ref */ value) === 0) {
			this._cookieEnabled = new (System.Nullable$b1.Of(System.Boolean)) (value.value);
		}
	}
	var cookieEnabled = this._cookieEnabled.MemberwiseClone();
	return (cookieEnabled.GetValueOrDefault$0() && cookieEnabled.HasValue);
};
System.Windows.Browser.BrowserInformation.prototype.get_Platform = function () {
	return this._platform;
};
System.Windows.Browser.BrowserInformation.prototype.get_UserAgent = function () {
	return this._userAgent;
};
System.Windows.Browser.BrowserInformation.prototype._ctor = function (name, version, platform, userAgent) {
	System.Object.prototype._ctor.call(this);
	System.Windows.Browser.BrowserInformation.ParseBrowserNameAndVersion(userAgent, /* ref */ new JSIL.MemberReference(this, "_productName"), /* ref */ new JSIL.MemberReference(this, "_productVersion"));
	this._version = System.Windows.Browser.BrowserInformation.ParseVersion(version);
	this._name = name;
	this._platform = platform;
	this._userAgent = userAgent;
	this._cookieEnabled = new (System.Nullable$b1.Of(System.Boolean)) ();
};
System.Windows.Browser.BrowserInformation.ParseVersion = function (version) {
	var num = version.IndexOf$0(" ");
	if (num === -1) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), "version"]);
	}
	return JSIL.New(System.Version, "_ctor$3", [version.Substring$1(0, num)]);
};
System.Windows.Browser.BrowserInformation.ParseBrowserNameAndVersion = function (userAgent, /* ref */ browserName, /* ref */ browserVersion) {
	var list = new (System.Collections.Generic.List$b1.Of($asm05.System.Windows.Browser.BrowserMatch)) ();
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["MSIE", "MSIE ([0-9\\.]+)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["Firefox", "Firefox[/ ]([0-9\\.]+)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["Chrome"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["Safari"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["Netscape"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["Opera"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["SeaMonkey"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["Konqueror"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["VCSoapClient", "VCSoapClient()"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["Phonosynth", "Phonosynth/([0-9\\.]+)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["Google Desktop", "Google Desktop()"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["HTTrack", "HTTrack ([0-9\\.x]+)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["Feedfetcher-Google", "Feedfetcher-Google()"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["Googlebot-Image"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$1", ["Googlebot"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["Yahoo! Slurp", "Yahoo! Slurp/?([0-9\\.]*)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["msnbot-media", "msnbot-media/([0-9\\.]+)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["msnbot", "msnbot/([0-9\\.b]+)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["YandexSomething", "YandexSomething/([0-9\\.]+)"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["Baiduspider", "Baiduspider()"]));
	list.Add(JSIL.New($asm05.System.Windows.Browser.BrowserMatch, "_ctor$0", ["Twiceler", "Twiceler-([0-9\\.]+)"]));
	var text = System.String.Empty;
	var text2 = System.String.Empty;
	var enumerator = (list.GetEnumerator());
	try {
	__loop0__: 
		while (enumerator.MoveNext()) {
			var current = enumerator.Current;
			var num = userAgent.IndexOf$3(current.Name);
			if (num >= 0) {
				var match = current.VersionRegex.Match$1(userAgent, num);
				if (match.Index === num) {
					text = current.Name;
					text2 = (match.Groups.get_Item$0(1)).toString();
					break __loop0__;
				}
			}
		}
	} finally {
		enumerator.IDisposable_Dispose();
	}
	browserName.value = text;
	browserVersion.value = text2;
};
JSIL.MakeProperty(System.Windows.Browser.BrowserInformation.prototype, "ProductName", 
	System.Windows.Browser.BrowserInformation.prototype.get_ProductName, null);
JSIL.MakeProperty(System.Windows.Browser.BrowserInformation.prototype, "ProductVersion", 
	System.Windows.Browser.BrowserInformation.prototype.get_ProductVersion, null);
JSIL.MakeProperty(System.Windows.Browser.BrowserInformation.prototype, "Name", 
	System.Windows.Browser.BrowserInformation.prototype.get_Name, null);
JSIL.MakeProperty(System.Windows.Browser.BrowserInformation.prototype, "BrowserVersion", 
	System.Windows.Browser.BrowserInformation.prototype.get_BrowserVersion, null);
JSIL.MakeProperty(System.Windows.Browser.BrowserInformation.prototype, "CookiesEnabled", 
	System.Windows.Browser.BrowserInformation.prototype.get_CookiesEnabled, null);
JSIL.MakeProperty(System.Windows.Browser.BrowserInformation.prototype, "Platform", 
	System.Windows.Browser.BrowserInformation.prototype.get_Platform, null);
JSIL.MakeProperty(System.Windows.Browser.BrowserInformation.prototype, "UserAgent", 
	System.Windows.Browser.BrowserInformation.prototype.get_UserAgent, null);
System.Windows.Browser.BrowserInformation.prototype._productName = null;
System.Windows.Browser.BrowserInformation.prototype._productVersion = null;
System.Windows.Browser.BrowserInformation.prototype._name = null;
System.Windows.Browser.BrowserInformation.prototype._version = null;
System.Windows.Browser.BrowserInformation.prototype._platform = null;
System.Windows.Browser.BrowserInformation.prototype._userAgent = null;

$asm05.System.Windows.Browser.BrowserMatch.prototype.get_Name = function () {
	return this.Name$value;
};
$asm05.System.Windows.Browser.BrowserMatch.prototype.set_Name = function (value) {
	this.Name$value = value;
};
$asm05.System.Windows.Browser.BrowserMatch.prototype.get_VersionRegex = function () {
	return this.VersionRegex$value;
};
$asm05.System.Windows.Browser.BrowserMatch.prototype.set_VersionRegex = function (value) {
	this.VersionRegex$value = value;
};
$asm05.System.Windows.Browser.BrowserMatch.prototype._ctor$0 = function (name, versionRegex) {
	System.Object.prototype._ctor.call(this);
	this.Name = name;
	this.VersionRegex = JSIL.New(System.Text.RegularExpressions.Regex, "_ctor$1", [versionRegex]);
};
$asm05.System.Windows.Browser.BrowserMatch.prototype._ctor$1 = function (name) {
	System.Object.prototype._ctor.call(this);
	this.Name = name;
	this.VersionRegex = JSIL.New(System.Text.RegularExpressions.Regex, "_ctor$1", [(name + "/([0-9a-z\\.]+)")]);
};
JSIL.OverloadedMethod($asm05.System.Windows.Browser.BrowserMatch.prototype, "_ctor", [
		["_ctor$0", [System.String, System.String]], 
		["_ctor$1", [System.String]]
	]);
JSIL.MakeProperty($asm05.System.Windows.Browser.BrowserMatch.prototype, "Name", 
	$asm05.System.Windows.Browser.BrowserMatch.prototype.get_Name, $asm05.System.Windows.Browser.BrowserMatch.prototype.set_Name);
JSIL.MakeProperty($asm05.System.Windows.Browser.BrowserMatch.prototype, "VersionRegex", 
	$asm05.System.Windows.Browser.BrowserMatch.prototype.get_VersionRegex, $asm05.System.Windows.Browser.BrowserMatch.prototype.set_VersionRegex);
$asm05.System.Windows.Browser.BrowserMatch.prototype.Name$value = null;
$asm05.System.Windows.Browser.BrowserMatch.prototype.VersionRegex$value = null;

$asm05.System.Windows.Browser.EventCookie.prototype.get_EventName = function () {
	return this._eventName;
};
$asm05.System.Windows.Browser.EventCookie.prototype.get_HasHandlers = function () {
	return (this._handlers || (this._domHandlers !== null));
};
$asm05.System.Windows.Browser.EventCookie.prototype._ctor = function (eventSource, eventName) {
	System.Windows.Hosting.DelegateWrapper.prototype._ctor.call(this, true);
	this._eventSource = eventSource;
	this._eventName = eventName;
};
$asm05.System.Windows.Browser.EventCookie.prototype.Invoke = function (args) {
	var __label0__ = "__entry0__";
__step0__: 
	while (true) {
		switch (__label0__) {
			case "__entry0__":
				if (this._domHandlers !== null) {
					var __label1__ = "__entry1__";
				__step1__: 
					while (true) {
						switch (__label1__) {
							case "__entry1__":
								var source = null;
								var eventObject = null;
								var eventType = null;
								var dOMEventInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.DOMEventInfo());
								dOMEventInfo.value.pSource = this._eventSource.Handle.Handle;
								if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetEventInfo(/* ref */ dOMEventInfo) === 0) {
									var __label2__ = "__entry2__";
								__step2__: 
									while (true) {
										switch (__label2__) {
											case "__entry2__":
												if (System.IntPtr.op_Inequality(dOMEventInfo.value.pSource, System.IntPtr.Zero)) {
													switch (Number(dOMEventInfo.value.nSourceType)) {
														case 7: 
															source = JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(dOMEventInfo.value.pSource, System.Windows.Browser.HtmlElement), System.Windows.Browser.HtmlElement);
															__label2__ = "IL_F7";
															continue __step2__;
														case 8: 
															source = JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(dOMEventInfo.value.pSource, System.Windows.Browser.HtmlDocument), System.Windows.Browser.HtmlDocument);
															__label2__ = "IL_F7";
															continue __step2__;
														case 10: 
															source = JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(dOMEventInfo.value.pSource, System.Windows.Browser.HtmlWindow), System.Windows.Browser.HtmlWindow);
															__label2__ = "IL_F7";
															continue __step2__;
													}
													System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReleaseObject(dOMEventInfo.value.pSource);
												}
												__label2__ = "IL_F7";
												continue __step2__;
												break;
											case "IL_F7":
												if (System.IntPtr.op_Inequality(dOMEventInfo.value.pEventObject, System.IntPtr.Zero)) {
													eventObject = System.Windows.Browser.ScriptObject.GetObject$0(dOMEventInfo.value.pEventObject, System.Windows.Browser.ScriptObject);
												}
												if (System.IntPtr.op_Inequality(dOMEventInfo.value.pszEventType, System.IntPtr.Zero)) {
													eventType = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(dOMEventInfo.value.pszEventType);
													System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(dOMEventInfo.value.pszEventType);
												}
												break __step2__;
										}
									}
								}
								var e = new System.Windows.Browser.HtmlEventArgs(source, dOMEventInfo.value.clientX, dOMEventInfo.value.clientY, dOMEventInfo.value.offsetX, dOMEventInfo.value.offsetY, dOMEventInfo.value.screenX, dOMEventInfo.value.screenY, dOMEventInfo.value.altKey, dOMEventInfo.value.ctrlKey, dOMEventInfo.value.shiftKey, dOMEventInfo.value.mouseButton, dOMEventInfo.value.keyCode, dOMEventInfo.value.charCode, eventType, eventObject);
								this._domHandlers(this._eventSource, e);
								break __step1__;
						}
					}
				}
				if (this._handlers !== null) {
					this._handlers(this._eventSource, System.EventArgs.Empty);
				}
				return null;
				break __step0__;
		}
	}
};
$asm05.System.Windows.Browser.EventCookie.prototype.AddHandler$0 = function (handler) {
	if (this._handlers === null) {
		this._handlers = handler;
		return;
	}
	this._handlers = System.Delegate.Combine(this._handlers, handler);
};
$asm05.System.Windows.Browser.EventCookie.prototype.AddHandler$1 = function (domHandler) {
	if (this._domHandlers === null) {
		this._domHandlers = domHandler;
		return;
	}
	this._domHandlers = System.Delegate.Combine(this._domHandlers, domHandler);
};
$asm05.System.Windows.Browser.EventCookie.prototype.RemoveHandler$0 = function (handler) {
	if (this._handlers !== null) {
		this._handlers = System.Delegate.Remove(this._handlers, handler);
	}
};
$asm05.System.Windows.Browser.EventCookie.prototype.RemoveHandler$1 = function (handler) {
	if (this._domHandlers !== null) {
		this._domHandlers = System.Delegate.Remove(this._domHandlers, handler);
	}
};
JSIL.OverloadedMethod(System.Windows.Browser.EventCookie.prototype, "AddHandler", [
		["AddHandler$0", [System.EventHandler]], 
		["AddHandler$1", [System.EventHandler$b1.Of(System.Windows.Browser.HtmlEventArgs)]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.EventCookie.prototype, "RemoveHandler", [
		["RemoveHandler$0", [System.EventHandler]], 
		["RemoveHandler$1", [System.EventHandler$b1.Of(System.Windows.Browser.HtmlEventArgs)]]
	]);
JSIL.MakeProperty($asm05.System.Windows.Browser.EventCookie.prototype, "EventName", 
	$asm05.System.Windows.Browser.EventCookie.prototype.get_EventName, null);
JSIL.MakeProperty($asm05.System.Windows.Browser.EventCookie.prototype, "HasHandlers", 
	$asm05.System.Windows.Browser.EventCookie.prototype.get_HasHandlers, null);
$asm05.System.Windows.Browser.EventCookie.prototype._eventSource = null;
$asm05.System.Windows.Browser.EventCookie.prototype._eventName = null;
$asm05.System.Windows.Browser.EventCookie.prototype._handlers = null;
$asm05.System.Windows.Browser.EventCookie.prototype._domHandlers = null;

System.Windows.Browser.ScriptObject.prototype.get_Dispatcher = function () {
	return System.Windows.Threading.Dispatcher.MainDispatcher;
};
System.Windows.Browser.ScriptObject.prototype.get_Handle = function () {
	return this._handle;
};
System.Windows.Browser.ScriptObject.prototype.get_ManagedObject = function () {
	return this._managedObject;
};
System.Windows.Browser.ScriptObject.prototype._ctor$0 = function () {
	System.Object.prototype._ctor.call(this);
};
System.Windows.Browser.ScriptObject.prototype._ctor$1 = function (obj) {
	System.Object.prototype._ctor.call(this);
	this._managedObject = obj;
};
System.Windows.Browser.ScriptObject.prototype.Finalize = function () {
	try {
		this.InternalDispose(true);
	} finally {
		System.Object.prototype.Finalize.call(this);
	}
};
System.Windows.Browser.ScriptObject.prototype.CheckAccess = function () {
	return System.Windows.Threading.Dispatcher.MainDispatcher.CheckAccess();
};
System.Windows.Browser.ScriptObject.prototype.GetObjectHandleAddRef = function () {
	System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReferenceObject(this._handle.Handle);
	return this._handle.Handle;
};
System.Windows.Browser.ScriptObject.ToScriptObject = function (json) {
	return $asm05.System.Windows.Browser.ManagedServices.Current.JsSerializer.Invoke("deserialize", [("(" + json + ")")]);
};
System.Windows.Browser.ScriptObject.ToJson = function (obj) {
	return $asm05.System.Windows.Browser.ManagedServices.Current.JsonSerialize(JSIL.Cast(obj, System.Windows.Browser.ScriptObject));
};
System.Windows.Browser.ScriptObject.GetObject$0 = function (handle, type) {
	return System.Windows.Browser.ScriptObject.GetObject$1(handle, type, true);
};
System.Windows.Browser.ScriptObject.GetObject$1 = function (handle, type, ownsHandle) {
	return System.Windows.Browser.ScriptObject.GetObject$2(handle, type, ownsHandle, true);
};
System.Windows.Browser.ScriptObject.GetObject$2 = function (handle, type, ownsHandle, releaseReferenceOnDispose) {
	var obj = null, weakReference = new JSIL.Variable(null);
	if (System.IntPtr.op_Equality(handle, System.IntPtr.Zero)) {
		return null;
	}
	var identity = System.Windows.Browser.ScriptObject.GetIdentity(handle);
	var scriptObject = null;
	System.Threading.Monitor.Enter((obj = System.Windows.Browser.ScriptObject.s_objects));
	try {
		if (System.Windows.Browser.ScriptObject.s_objects.TryGetValue(identity, /* ref */ weakReference)) {
			scriptObject = JSIL.Cast(weakReference.value.Target, System.Windows.Browser.ScriptObject);
			if (scriptObject === null) {
				scriptObject = System.Windows.Browser.ScriptObject.CreateInstance(handle, identity, type, releaseReferenceOnDispose);
				System.Windows.Browser.ScriptObject.s_objects.set_Item(identity, JSIL.New(System.WeakReference, "_ctor$1", [scriptObject]));
			}
		} else if (!(!System.Windows.Browser.HtmlPage.InSafari || !System.Windows.Browser.HtmlPage.IsEnabled)) {
			scriptObject = System.Windows.Browser.ScriptObject.GetObjectForSafari(identity, handle, type, releaseReferenceOnDispose);
		} else {
			scriptObject = System.Windows.Browser.ScriptObject.CreateInstance(handle, identity, type, releaseReferenceOnDispose);
			System.Windows.Browser.ScriptObject.s_objects.Add(identity, JSIL.New(System.WeakReference, "_ctor$1", [scriptObject]));
		}
	} finally {
		System.Threading.Monitor.Exit(obj);
	}
	if (ownsHandle) {
		System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReleaseObject(handle);
	}
	return scriptObject;
};
System.Windows.Browser.ScriptObject.GetObjectForSafari = function (identity, handle, type, releaseReferenceOnDispose) {
	var intPtr = new JSIL.Variable(0);
	var scriptObject = null;
	var weakReference = new JSIL.Variable(null);
	var num = 0;
	var exceptionInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ExceptionInfo());
	var scriptParam = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ScriptParam());
	var property = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetProperty(handle, "$__slid", /* ref */ scriptParam, /* ref */ exceptionInfo);
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeExceptionInfo(/* ref */ exceptionInfo);
	if (!(System.Windows.Hosting.NativeMethods.SUCCEEDED(property) && ((scriptParam.value.type === System.Windows.Hosting.NativeMethods.ScriptParamType.IntegerParam) || 
				(scriptParam.value.type === System.Windows.Hosting.NativeMethods.ScriptParamType.DoubleParam)))) {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
	} else {
		num = System.Convert.ToInt32$0($asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParamAndDispose(scriptParam.value.MemberwiseClone()));
		if (!(!System.Windows.Browser.ScriptObject.s_safariObjects.TryGetValue(num, /* ref */ intPtr) || !System.Windows.Browser.ScriptObject.s_objects.TryGetValue(intPtr.value, /* ref */ weakReference))) {
			scriptObject = JSIL.Cast(weakReference.value.Target, System.Windows.Browser.ScriptObject);
			if (!((scriptObject === null) || System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReferenceEquals(identity, intPtr.value))) {
				scriptObject = null;
			}
		}
	}
	if (scriptObject === null) {
		var enumerator = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.IntPtr, System.WeakReference), "_ctor$4", [System.Windows.Browser.ScriptObject.s_objects]).GetEnumerator().MemberwiseClone();
		try {
		__loop0__: 
			while (enumerator.MoveNext()) {
				var current = JSIL.Cast(enumerator.Current.MemberwiseClone(), System.Collections.Generic.KeyValuePair$b2.Of(System.IntPtr, System.WeakReference)).MemberwiseClone();
				var scriptObject2 = JSIL.Cast(current.Value.Target, System.Windows.Browser.ScriptObject);
				if (!((scriptObject2 === null) || 
						scriptObject2.ManagedObject || 
						!System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReferenceEquals(identity, current.Key) || (scriptObject2.Handle === null))) {
					identity = current.Key;
					scriptObject = scriptObject2;
					break __loop0__;
				}
			}
		} finally {
			enumerator.IDisposable_Dispose();
		}
		if (scriptObject === null) {
			scriptObject = System.Windows.Browser.ScriptObject.CreateInstance(handle, identity, type, releaseReferenceOnDispose);
			if (JSIL.TryCast(scriptObject, System.Windows.Browser.HtmlWindow) === null) {
				System.Windows.Browser.ScriptObject.s_objects.set_Item(identity, JSIL.New(System.WeakReference, "_ctor$1", [scriptObject]));
			}
		}
		if (!((num !== 0) || (System.Windows.Browser.HtmlPage.s_window === null))) {
			try {
				num = (System.Convert.ToInt32$13(JSIL.Cast(JSIL.Coalesce(System.Windows.Browser.HtmlPage.Window.GetProperty$1("$__sllastid"), 0), System.Double)) + 1);
				scriptObject.SetProperty$1("$__slid", num);
			} catch ($exception) {
			}
			System.Windows.Browser.HtmlPage.Window.SetProperty$1("$__sllastid", num);
		}
		System.Windows.Browser.ScriptObject.s_safariObjects.set_Item(num, identity);
	}
	return scriptObject;
};
System.Windows.Browser.ScriptObject.GetIdentity = function (handle) {
	var identity = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetIdentity(handle, /* ref */ result);
	if (!System.Windows.Hosting.NativeMethods.SUCCEEDED(identity)) {
		var result = new JSIL.Variable(handle);
	}
	return result.value;
};
System.Windows.Browser.ScriptObject.CreateInstance = function (handle, identity, type, releaseReferenceOnDispose) {
	var constructor = type.GetConstructor$1((System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Public), null, System.Type.EmptyTypes, null);
	var scriptObject = JSIL.Cast(constructor.Invoke$1(JSIL.Array.New(System.Object, 0)), System.Windows.Browser.ScriptObject);
	scriptObject.Initialize(handle, identity, true, releaseReferenceOnDispose);
	return scriptObject;
};
System.Windows.Browser.ScriptObject.prototype.Initialize = function (handle, identity, addReference, releaseReferenceOnDispose) {
	if (releaseReferenceOnDispose) {
		this._handle = new System.Windows.Hosting.DOMHandle(handle, addReference, true);
	} else {
		this._handle = new System.Windows.Hosting.DOMHandleWithoutDispose(handle, addReference);
	}
	this._identity = identity;
};
System.Windows.Browser.ScriptObject.prototype.GetProperty$0 = function (index) {
	return this.GetProperty$1((index).toString());
};
System.Windows.Browser.ScriptObject.prototype.SetProperty$0 = function (index, value) {
	this.SetProperty$1((index).toString(), value);
};
System.Windows.Browser.ScriptObject.prototype.GetProperty$1 = function (name) {
	var result = new JSIL.Variable(null);
	this.TryGetProperty(name, /* ref */ result);
	return result.value;
};
System.Windows.Browser.ScriptObject.prototype.TryGetProperty = function (name, /* ref */ result) {
	var scriptParam = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ScriptParam());
	System.Windows.Browser.HtmlPage.VerifyThread();
	this.VerifyHandle();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(name, "name", true);
	var exceptionInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ExceptionInfo());
	var property = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetProperty(this._handle.Handle, name, /* ref */ scriptParam, /* ref */ exceptionInfo);
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeExceptionInfo(/* ref */ exceptionInfo);
	if (property !== 0) {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
		result.value = null;
		return false;
	}
	result.value = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParamAndDispose(scriptParam.value.MemberwiseClone());
	return true;
};
System.Windows.Browser.ScriptObject.prototype.SetProperty$1 = function (name, value) {
	var exception = this.TrySetProperty(name, value);
	if (exception !== null) {
		throw exception;
	}
};
System.Windows.Browser.ScriptObject.prototype.TrySetProperty = function (name, value) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	this.VerifyHandle();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(name, "name", true);
	var scriptParam = new JSIL.Variable($asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParam(value).MemberwiseClone());
	var exceptionInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ExceptionInfo());
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_SetProperty(this._handle.Handle, name, /* ref */ scriptParam, /* ref */ exceptionInfo);
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
	if (num !== 0) {
		var text = null;
		if (num === -2147352567) {
			text = $asm05.System.Windows.Hosting.ScriptingInterface.GetExceptionMessageAndDispose(/* ref */ exceptionInfo);
		}
		if (System.String.IsNullOrEmpty(text)) {
			text = System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["SetProperty"]);
		}
		return JSIL.New(System.InvalidOperationException, "_ctor$1", [text]);
	}
	return null;
};
System.Windows.Browser.ScriptObject.prototype.Invoke = function (name, args) {
	var exception = new JSIL.Variable(null);
	var result = this.TryInvoke(name, args, /* ref */ exception);
	if (exception.value !== null) {
		throw exception.value;
	}
	return result;
};
System.Windows.Browser.ScriptObject.prototype.TryInvoke = function (name, args, /* ref */ error) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	this.VerifyHandle();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(name, "name", true);
	if (args === null) {
		args = JSIL.Array.New(System.Object, 0);
	}
	var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParams(args);
	var exceptionInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ExceptionInfo());
	var scriptParam = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ScriptParam());
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_Invoke(
		this._handle.Handle, 
		name, 
		array, 
		/* ref */ scriptParam, 
		/* ref */ exceptionInfo
	);
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParams(array);
	if (num !== 0) {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
		var text = null;
		if (num === -2147352567) {
			text = $asm05.System.Windows.Hosting.ScriptingInterface.GetExceptionMessageAndDispose(/* ref */ exceptionInfo);
		}
		if (System.String.IsNullOrEmpty(text)) {
			text = System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ScriptObject_InvokeFailed"), [name]);
		}
		error.value = JSIL.New(System.InvalidOperationException, "_ctor$1", [text]);
		return null;
	}
	error.value = null;
	return $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParamAndDispose(scriptParam.value.MemberwiseClone());
};
System.Windows.Browser.ScriptObject.prototype.InvokeSelf = function (args) {
	var exception = new JSIL.Variable(null);
	var result = this.TryInvokeSelf(args, /* ref */ exception);
	if (exception.value !== null) {
		throw exception.value;
	}
	return result;
};
System.Windows.Browser.ScriptObject.prototype.TryInvokeSelf = function (args, /* ref */ error) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	this.VerifyHandle();
	if (args === null) {
		args = JSIL.Array.New(System.Object, 0);
	}
	var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParams(args);
	var exceptionInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ExceptionInfo());
	var scriptParam = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ScriptParam());
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_InvokeBrowserFunction(
		this._handle.Handle, 
		args.length, 
		array, 
		/* ref */ scriptParam, 
		/* ref */ exceptionInfo
	);
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParams(array);
	if (num !== 0) {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
		var text = null;
		if (num === -2147352567) {
			text = $asm05.System.Windows.Hosting.ScriptingInterface.GetExceptionMessageAndDispose(/* ref */ exceptionInfo);
		}
		if (System.String.IsNullOrEmpty(text)) {
			text = $asm05.System.Windows.Browser.Resx.GetString$2("ScriptObject_InvokeSelfFailed");
		}
		error.value = JSIL.New(System.InvalidOperationException, "_ctor$1", [text]);
		return null;
	}
	error.value = null;
	return $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParamAndDispose(scriptParam.value.MemberwiseClone());
};
System.Windows.Browser.ScriptObject.prototype.ConvertTo$b1 = JSIL.GenericMethod(
	["T"], 
	function (T) {
		return JSIL.Cast(this.ConvertTo(T, true), T);
	}
);
System.Windows.Browser.ScriptObject.prototype.ConvertTo = function (targetType, allowSerialization) {
	if (targetType.IsAssignableFrom(JSIL.GetType(this))) {
		return this;
	}
	if (System.Delegate.IsAssignableFrom(targetType)) {
		return $asm05.System.Windows.Hosting.ScriptingInterface.GetDelegateForScriptObject(targetType, this);
	}
	if (targetType === System.DateTime) {
		try {
			var num = System.Convert.ToInt64$1(this.Invoke("getTime", null), System.Globalization.CultureInfo.InvariantCulture);
			return JSIL.New(System.DateTime, "_ctor$2", [((num * 10000) + $asm05.System.Windows.Hosting.ScriptingInterface.DatetimeMinTimeTicks), System.DateTimeKind.Utc]);
		} catch ($exception) {
			throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptObject_ConvertToFailed", [targetType.FullName]), "targetType"]);
		}
	}
	if (allowSerialization) {
		return $asm05.System.Windows.Browser.ManagedServices.Current.CreateObjectInternal(targetType, this);
	}
	throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptObject_ConvertToFailed", [targetType.FullName]), "targetType"]);
};
System.Windows.Browser.ScriptObject.prototype.OnEvent = function (sender, e) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	this.VerifyHandle();
	var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParams([sender, e]);
	var exceptionInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ExceptionInfo());
	var scriptParam = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ScriptParam());
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_InvokeBrowserFunction(
		this._handle.Handle, 
		array.length, 
		array, 
		/* ref */ scriptParam, 
		/* ref */ exceptionInfo
	);
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParams(array);
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
	if (num !== 0) {
		var message = null;
		if (num === -2147352567) {
			message = $asm05.System.Windows.Hosting.ScriptingInterface.GetExceptionMessageAndDispose(/* ref */ exceptionInfo);
		} else {
			message = System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["OnEvent"]);
		}
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [message]);
	}
};
System.Windows.Browser.ScriptObject.prototype.VerifyHandle = function () {
	if (this._handle === null) {
		throw JSIL.New(System.ObjectDisposedException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("ScriptObject_Disposed")]);
	}
};
System.Windows.Browser.ScriptObject.prototype.InternalDispose = function (finalizing) {
	var obj = null;
	if (this._handle !== null) {
		this._handle.Dispose$0();
		this._handle = null;
		System.Threading.Monitor.Enter((obj = System.Windows.Browser.ScriptObject.s_objects));
		try {
			System.Windows.Browser.ScriptObject.s_objects.Remove(this._identity);
		} finally {
			System.Threading.Monitor.Exit(obj);
		}
	}
};
System.Windows.Browser.ScriptObject.ValidateIdentifier = function (name, parameterName) {
	if (!((name === null) || (name.IndexOf$0("\0") <= -1))) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ScriptObject_InvalidIdentifier"), parameterName]);
	}
};
System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$0 = function (value, propertyName) {
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(value, propertyName, false);
};
System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1 = function (value, propertyName, isIdentifier) {
	if (value === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", [propertyName]);
	}
	if (value.length === 0) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("Common_NullOrEmpty"), propertyName]);
	}
	if (isIdentifier) {
		System.Windows.Browser.ScriptObject.ValidateIdentifier(value, propertyName);
	}
};
System.Windows.Browser.ScriptObject.prototype.IDynamicMetaObjectProvider_GetMetaObject = function (parameter) {
	if ((System.AppDomain.CurrentDomain.IsCompatibilitySwitchSet("APP_EARLIER_THAN_SL4.0")).GetValueOrDefault$0()) {
		return JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$1", [parameter, System.Dynamic.BindingRestrictions.Empty, this]);
	}
	return new $asm05.System.Windows.Browser.MetaScriptObject(parameter, this);
};
JSIL.OverloadedMethod(System.Windows.Browser.ScriptObject.prototype, "_ctor", [
		["_ctor$0", []], 
		["_ctor$1", [System.Object]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.ScriptObject, "GetObject", [
		["GetObject$0", [System.IntPtr, System.Type]], 
		["GetObject$1", [System.IntPtr, System.Type, System.Boolean]], 
		["GetObject$2", [System.IntPtr, System.Type, System.Boolean, System.Boolean]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.ScriptObject.prototype, "GetProperty", [
		["GetProperty$0", [System.Int32]], 
		["GetProperty$1", [System.String]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.ScriptObject.prototype, "SetProperty", [
		["SetProperty$0", [System.Int32, System.Object]], 
		["SetProperty$1", [System.String, System.Object]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.ScriptObject, "ValidateNonNullOrEmptyString", [
		["ValidateNonNullOrEmptyString$0", [System.String, System.String]], 
		["ValidateNonNullOrEmptyString$1", [System.String, System.String, System.Boolean]]
	]);
JSIL.MakeProperty(System.Windows.Browser.ScriptObject.prototype, "Dispatcher", 
	System.Windows.Browser.ScriptObject.prototype.get_Dispatcher, null);
JSIL.MakeProperty(System.Windows.Browser.ScriptObject.prototype, "Handle", 
	System.Windows.Browser.ScriptObject.prototype.get_Handle, null);
JSIL.MakeProperty(System.Windows.Browser.ScriptObject.prototype, "ManagedObject", 
	System.Windows.Browser.ScriptObject.prototype.get_ManagedObject, null);
System.Windows.Browser.ScriptObject.s_objects = null;
System.Windows.Browser.ScriptObject.s_safariObjects = null;
System.Windows.Browser.ScriptObject.prototype._handle = null;
System.Windows.Browser.ScriptObject.prototype._identity = 0;
System.Windows.Browser.ScriptObject.prototype._managedObject = null;
System.Windows.Browser.ScriptObject._cctor = function () {
	System.Windows.Browser.ScriptObject.s_objects = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.IntPtr, System.WeakReference), "_ctor$0", []);
	System.Windows.Browser.ScriptObject.s_safariObjects = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.Int32, System.IntPtr), "_ctor$0", []);
};

System.Windows.Browser.HtmlObject.prototype._ctor = function () {
	System.Windows.Browser.ScriptObject.prototype._ctor$0.call(this);
	this._eventHandlers = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, $asm05.System.Windows.Browser.EventCookie), "_ctor$0", []);
};
System.Windows.Browser.HtmlObject.prototype.ConvertTo = function (targetType, allowSerialization) {
	throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptObject_ConvertToFailed", [targetType.FullName]), "targetType"]);
};
System.Windows.Browser.HtmlObject.prototype.AttachEvent$0 = function (eventName, handler) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(eventName, "eventName", true);
	if (handler === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["handler"]);
	}
	if (!eventName.StartsWith$1("on", System.StringComparison.OrdinalIgnoreCase)) {
		eventName = (("on" + eventName));
	}
	if (!this._eventHandlers.TryGetValue(eventName, /* ref */ eventCookie)) {
		var eventCookie = new JSIL.Variable(new $asm05.System.Windows.Browser.EventCookie(this, eventName));
		eventCookie.value = this.AttachEventImpl(eventCookie.value);
		if (eventCookie.value === null) {
			return false;
		}
		this._eventHandlers.Add(eventName, eventCookie.value);
	}
	eventCookie.value.AddHandler$0(handler);
	return true;
};
System.Windows.Browser.HtmlObject.prototype.AttachEvent$1 = function (eventName, handler) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(eventName, "eventName", true);
	if (handler === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["handler"]);
	}
	if (!eventName.StartsWith$1("on", System.StringComparison.OrdinalIgnoreCase)) {
		eventName = (("on" + eventName));
	}
	if (!this._eventHandlers.TryGetValue(eventName, /* ref */ eventCookie)) {
		var eventCookie = new JSIL.Variable(new $asm05.System.Windows.Browser.EventCookie(this, eventName));
		eventCookie.value = this.AttachEventImpl(eventCookie.value);
		if (eventCookie.value === null) {
			return false;
		}
		this._eventHandlers.Add(eventName, eventCookie.value);
	}
	eventCookie.value.AddHandler$1(handler);
	return true;
};
System.Windows.Browser.HtmlObject.prototype.DetachEvent$0 = function (eventName, handler) {
	var eventCookie = new JSIL.Variable(null);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(eventName, "eventName", true);
	if (handler === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["handler"]);
	}
	if (!eventName.StartsWith$1("on", System.StringComparison.OrdinalIgnoreCase)) {
		eventName = (("on" + eventName));
	}
	if (this._eventHandlers.TryGetValue(eventName, /* ref */ eventCookie)) {
		eventCookie.value.RemoveHandler$0(handler);
		if (!eventCookie.value.HasHandlers) {
			this.DetachEventImpl(eventCookie.value);
			this._eventHandlers.Remove(eventName);
			eventCookie.value.Dispose();
		}
	}
};
System.Windows.Browser.HtmlObject.prototype.DetachEvent$1 = function (eventName, handler) {
	var eventCookie = new JSIL.Variable(null);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(eventName, "eventName", true);
	if (handler === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["handler"]);
	}
	if (!eventName.StartsWith$1("on", System.StringComparison.OrdinalIgnoreCase)) {
		eventName = (("on" + eventName));
	}
	if (this._eventHandlers.TryGetValue(eventName, /* ref */ eventCookie)) {
		eventCookie.value.RemoveHandler$1(handler);
		if (!eventCookie.value.HasHandlers) {
			this.DetachEventImpl(eventCookie.value);
			this._eventHandlers.Remove(eventName);
			eventCookie.value.Dispose();
		}
	}
};
System.Windows.Browser.HtmlObject.prototype.AttachEventImpl = function (cookie) {
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_AttachEvent(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, cookie.EventName, cookie.FunctionHandle);
	if (num !== 0) {
		cookie.Dispose();
		cookie = null;
	}
	return cookie;
};
System.Windows.Browser.HtmlObject.prototype.DetachEventImpl = function (cookie) {
	System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_DetachEvent(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, cookie.EventName, cookie.FunctionHandle);
};
JSIL.OverloadedMethod(System.Windows.Browser.HtmlObject.prototype, "AttachEvent", [
		["AttachEvent$0", [System.String, System.EventHandler]], 
		["AttachEvent$1", [System.String, System.EventHandler$b1.Of(System.Windows.Browser.HtmlEventArgs)]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.HtmlObject.prototype, "DetachEvent", [
		["DetachEvent$0", [System.String, System.EventHandler]], 
		["DetachEvent$1", [System.String, System.EventHandler$b1.Of(System.Windows.Browser.HtmlEventArgs)]]
	]);
System.Windows.Browser.HtmlObject.prototype._eventHandlers = null;

System.Windows.Browser.HtmlDocument.prototype.get_Body = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (this._body === null) {
		this._body = JSIL.Cast(this.GetProperty$1("body"), System.Windows.Browser.HtmlElement);
	}
	return this._body;
};
System.Windows.Browser.HtmlDocument.prototype.get_Cookies = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	var text = JSIL.TryCast(this.GetProperty$1("cookie"), System.String);
	if (text !== null) {
		return text;
	}
	return System.String.Empty;
};
System.Windows.Browser.HtmlDocument.prototype.set_Cookies = function (value) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	var value2 = value;
	if (System.String.IsNullOrEmpty(value2)) {
		value2 = System.String.Empty;
	}
	this.SetProperty$1("cookie", value2);
};
System.Windows.Browser.HtmlDocument.prototype.get_DocumentElement = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	return JSIL.Cast(this.GetProperty$1("documentElement"), System.Windows.Browser.HtmlElement);
};
System.Windows.Browser.HtmlDocument.prototype.add_DocumentReady = function (value) {
	this._documentReadyEvent = System.Delegate.Combine(this._documentReadyEvent, value);
	if (!this.IsReady) {
		System.Windows.Browser.ScriptObject.prototype.get_Dispatcher.call(this).BeginInvoke$1(JSIL.Delegate.New("System.Action`1[System.EventArgs]", this, System.Windows.Browser.HtmlDocument.prototype.OnDocumentReady), [System.EventArgs.Empty]);
	}
};
System.Windows.Browser.HtmlDocument.prototype.remove_DocumentReady = function (value) {
	this._documentReadyEvent = System.Delegate.Remove(this._documentReadyEvent, value);
};
System.Windows.Browser.HtmlDocument.prototype.get_DocumentUri = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	var text = JSIL.TryCast(this.GetProperty$1("URL"), System.String);
	if (text !== null) {
		return JSIL.New(System.Uri, "_ctor$0", [System.Windows.Hosting.NativeHost.NormalizeBrowserUriString(text)]);
	}
	return null;
};
System.Windows.Browser.HtmlDocument.prototype.get_IsReady = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (!this._isReady) {
		var text = JSIL.TryCast(this.GetProperty$1("readyState"), System.String);
		if (!((text === null) || !text.Equals$2("complete", System.StringComparison.OrdinalIgnoreCase))) {
			this._isReady = true;
		}
	}
	return this._isReady;
};
System.Windows.Browser.HtmlDocument.prototype.get_QueryString = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	var dictionary = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.String), "_ctor$0", []);
	var scriptObject = JSIL.Cast(this.GetProperty$1("location"), System.Windows.Browser.ScriptObject);
	if (scriptObject !== null) {
		var text = JSIL.Cast(scriptObject.GetProperty$1("search"), System.String);
		if (!System.String.IsNullOrEmpty(text)) {
			var array = (text.Substring$0(1)).Split(JSIL.Array.New(System.Char, ["&"]));
			var array2 = array;
		__loop0__: 
			for (var i = 0; i < array2.length; ++i) {
				var text2 = array2[i];
				if (!System.String.IsNullOrEmpty(text2)) {
					var array3 = text2.Split(JSIL.Array.New(System.Char, ["="]));
					if (array3.length > 1) {
						dictionary.set_Item(System.Windows.Browser.HttpUtility.UrlDecode(array3[0]), System.Windows.Browser.HttpUtility.UrlDecode(array3[1]));
					} else if (array3.length > 0) {
						dictionary.set_Item(System.Windows.Browser.HttpUtility.UrlDecode(array3[0]), System.String.Empty);
					}
				}
			}
		}
	}
	return dictionary;
};
System.Windows.Browser.HtmlDocument.prototype._ctor = function () {
	System.Windows.Browser.HtmlObject.prototype._ctor.call(this);
};
System.Windows.Browser.HtmlDocument.prototype.CreateElement = function (tagName) {
	var handle = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(tagName, "tagName", true);
	if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_CreateElement(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, tagName, /* ref */ handle) === 0) {
		return JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(handle.value, System.Windows.Browser.HtmlElement), System.Windows.Browser.HtmlElement);
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["CreateElement"])]);
};
System.Windows.Browser.HtmlDocument.prototype.GetElementById = function (id) {
	var handle = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(id, "id", true);
	var elementByID = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetElementByID(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, id, /* ref */ handle);
	if (elementByID === 0) {
		return JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(handle.value, System.Windows.Browser.HtmlElement), System.Windows.Browser.HtmlElement);
	}
	if (elementByID === 1) {
		return null;
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["GetElementByID"])]);
};
System.Windows.Browser.HtmlDocument.prototype.GetElementsByTagName = function (tagName) {
	var handle = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(tagName, "tagName", true);
	if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetElementsByTagName(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, tagName, /* ref */ handle) === 0) {
		return JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$1(handle.value, System.Windows.Browser.ScriptObjectCollection, true), System.Windows.Browser.ScriptObjectCollection);
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["GetElementsByTagName"])]);
};
System.Windows.Browser.HtmlDocument.prototype.OnDocumentReady = function (args) {
	this._isReady = true;
	var documentReadyEvent = this._documentReadyEvent;
	if (documentReadyEvent !== null) {
		documentReadyEvent(this, args);
	}
};
System.Windows.Browser.HtmlDocument.prototype.Submit$0 = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	var scriptObject = JSIL.Cast(this.GetProperty$1("forms"), System.Windows.Browser.ScriptObject);
	if (System.Convert.ToInt32$1(scriptObject.GetProperty$1("length"), System.Globalization.CultureInfo.InvariantCulture) === 0) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["Submit"])]);
	}
	var scriptObject2 = JSIL.Cast(scriptObject.Invoke("item", [0]), System.Windows.Browser.ScriptObject);
	scriptObject2.Invoke("submit", JSIL.Array.New(System.Object, 0));
};
System.Windows.Browser.HtmlDocument.prototype.Submit$1 = function (formId) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(formId, "formId", true);
	var scriptObject = JSIL.Cast(this.GetProperty$1("forms"), System.Windows.Browser.ScriptObject);
	var scriptObject2 = JSIL.Cast(scriptObject.Invoke("namedItem", [formId]), System.Windows.Browser.ScriptObject);
	if (scriptObject2 === null) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["Submit"])]);
	}
	scriptObject2.Invoke("submit", JSIL.Array.New(System.Object, 0));
};
JSIL.OverloadedMethod(System.Windows.Browser.HtmlDocument.prototype, "Submit", [
		["Submit$0", []], 
		["Submit$1", [System.String]]
	]);
JSIL.MakeProperty(System.Windows.Browser.HtmlDocument.prototype, "Body", 
	System.Windows.Browser.HtmlDocument.prototype.get_Body, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlDocument.prototype, "Cookies", 
	System.Windows.Browser.HtmlDocument.prototype.get_Cookies, System.Windows.Browser.HtmlDocument.prototype.set_Cookies);
JSIL.MakeProperty(System.Windows.Browser.HtmlDocument.prototype, "DocumentElement", 
	System.Windows.Browser.HtmlDocument.prototype.get_DocumentElement, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlDocument.prototype, "DocumentUri", 
	System.Windows.Browser.HtmlDocument.prototype.get_DocumentUri, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlDocument.prototype, "IsReady", 
	System.Windows.Browser.HtmlDocument.prototype.get_IsReady, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlDocument.prototype, "QueryString", 
	System.Windows.Browser.HtmlDocument.prototype.get_QueryString, null);
Object.defineProperty(System.Windows.Browser.HtmlDocument, "QueryStringSep", {
		"value": "&"}
);
Object.defineProperty(System.Windows.Browser.HtmlDocument, "QueryStringKeyValueSep", {
		"value": "="}
);
System.Windows.Browser.HtmlDocument.prototype._body = null;
System.Windows.Browser.HtmlDocument.prototype._isReady = false;
System.Windows.Browser.HtmlDocument.prototype._documentReadyEvent = null;

System.Windows.Browser.HtmlElement.prototype._ctor = function () {
	System.Windows.Browser.HtmlObject.prototype._ctor.call(this);
};
System.Windows.Browser.HtmlElement.prototype.get_TagName = function () {
	var text = JSIL.TryCast(this.GetProperty$1("tagName"), System.String);
	if (System.String.IsNullOrEmpty(text)) {
		return System.String.Empty;
	}
	return text.ToLower$1(System.Globalization.CultureInfo.InvariantCulture);
};
System.Windows.Browser.HtmlElement.prototype.get_Id = function () {
	var text = JSIL.TryCast(this.GetProperty$1("id"), System.String);
	if (text === null) {
		return System.String.Empty;
	}
	return text;
};
System.Windows.Browser.HtmlElement.prototype.set_Id = function (value) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(value, "Id", true);
	this.SetProperty$1("id", value);
};
System.Windows.Browser.HtmlElement.prototype.get_CssClass = function () {
	var text = JSIL.TryCast(this.GetProperty$1("className"), System.String);
	if (text === null) {
		return System.String.Empty;
	}
	return text;
};
System.Windows.Browser.HtmlElement.prototype.set_CssClass = function (value) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.ValidateIdentifier(value, "CssClass");
	this.SetProperty$1("className", JSIL.Coalesce(value, System.String.Empty));
};
System.Windows.Browser.HtmlElement.prototype.get_Children = function () {
	var handle = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetChildren(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, /* ref */ handle) === 0) {
		return JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$1(handle.value, System.Windows.Browser.ScriptObjectCollection, true), System.Windows.Browser.ScriptObjectCollection);
	}
	return null;
};
System.Windows.Browser.HtmlElement.prototype.get_Parent = function () {
	var handle = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetParent(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, /* ref */ handle) === 0) {
		return JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(handle.value, System.Windows.Browser.HtmlElement), System.Windows.Browser.HtmlElement);
	}
	return null;
};
System.Windows.Browser.HtmlElement.prototype.AppendChild$0 = function (element) {
	if (this === element) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("HtmlElement_CannotAppendChildToSelf")]);
	}
	this.AppendChild$1(element, null);
};
System.Windows.Browser.HtmlElement.prototype.AppendChild$1 = function (element, referenceElement) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	if (element === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["element"]);
	}
	var pReferenceElement = System.IntPtr.Zero;
	if (referenceElement !== null) {
		pReferenceElement = referenceElement.Handle.Handle;
	}
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_InsertChild(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, element.Handle.Handle, pReferenceElement);
	if (num !== 0) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["AppendChild"])]);
	}
};
System.Windows.Browser.HtmlElement.prototype.RemoveChild = function (element) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	if (element === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["element"]);
	}
	var hr = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_RemoveChild(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, element.Handle.Handle);
	if (!System.Windows.Hosting.NativeMethods.SUCCEEDED(hr)) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["RemoveChild"])]);
	}
};
System.Windows.Browser.HtmlElement.prototype.Focus = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_Focus(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle);
	if (num !== 0) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["Focus"])]);
	}
};
System.Windows.Browser.HtmlElement.prototype.GetAttribute$0 = function (name) {
	return this.GetAttribute$1(name, false);
};
System.Windows.Browser.HtmlElement.prototype.SetAttribute$0 = function (name, value) {
	this.SetAttribute$1(name, false, value);
};
System.Windows.Browser.HtmlElement.prototype.RemoveAttribute$0 = function (name) {
	this.RemoveAttribute$1(name, false);
};
System.Windows.Browser.HtmlElement.prototype.GetStyleAttribute = function (name) {
	return this.GetAttribute$1(name, true);
};
System.Windows.Browser.HtmlElement.prototype.SetStyleAttribute = function (name, value) {
	this.SetAttribute$1(name, true, value);
};
System.Windows.Browser.HtmlElement.prototype.RemoveStyleAttribute = function (name) {
	this.RemoveAttribute$1(name, true);
};
System.Windows.Browser.HtmlElement.prototype.GetAttribute$1 = function (name, isStyle) {
	var intPtr = new JSIL.Variable(0), len = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(name, "name", true);
	var attribute = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetAttribute(
		System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, 
		name, 
		isStyle, 
		/* ref */ intPtr, 
		/* ref */ len
	);
	if (attribute === 0) {
		var result = null;
		if (System.IntPtr.op_Inequality(intPtr.value, System.IntPtr.Zero)) {
			result = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$1(intPtr.value, len.value);
			System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(intPtr.value);
		}
		return result;
	}
	if (attribute === 1) {
		return null;
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["GetAttribute"])]);
};
System.Windows.Browser.HtmlElement.prototype.SetAttribute$1 = function (name, isStyle, value) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(name, "name", true);
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_SetAttribute(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, name, isStyle, value);
	if (num !== 0) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["SetAttribute"])]);
	}
};
System.Windows.Browser.HtmlElement.prototype.RemoveAttribute$1 = function (name, isStyle) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(name, "name", true);
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_RemoveAttribute(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, name, isStyle);
	if (num !== 0) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["RemoveAttribute"])]);
	}
};
JSIL.OverloadedMethod(System.Windows.Browser.HtmlElement.prototype, "AppendChild", [
		["AppendChild$0", [System.Windows.Browser.HtmlElement]], 
		["AppendChild$1", [System.Windows.Browser.HtmlElement, System.Windows.Browser.HtmlElement]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.HtmlElement.prototype, "GetAttribute", [
		["GetAttribute$0", [System.String]], 
		["GetAttribute$1", [System.String, System.Boolean]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.HtmlElement.prototype, "SetAttribute", [
		["SetAttribute$0", [System.String, System.String]], 
		["SetAttribute$1", [System.String, System.Boolean, System.String]]
	]);
JSIL.OverloadedMethod(System.Windows.Browser.HtmlElement.prototype, "RemoveAttribute", [
		["RemoveAttribute$0", [System.String]], 
		["RemoveAttribute$1", [System.String, System.Boolean]]
	]);
JSIL.MakeProperty(System.Windows.Browser.HtmlElement.prototype, "TagName", 
	System.Windows.Browser.HtmlElement.prototype.get_TagName, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlElement.prototype, "Id", 
	System.Windows.Browser.HtmlElement.prototype.get_Id, System.Windows.Browser.HtmlElement.prototype.set_Id);
JSIL.MakeProperty(System.Windows.Browser.HtmlElement.prototype, "CssClass", 
	System.Windows.Browser.HtmlElement.prototype.get_CssClass, System.Windows.Browser.HtmlElement.prototype.set_CssClass);
JSIL.MakeProperty(System.Windows.Browser.HtmlElement.prototype, "Children", 
	System.Windows.Browser.HtmlElement.prototype.get_Children, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlElement.prototype, "Parent", 
	System.Windows.Browser.HtmlElement.prototype.get_Parent, null);

System.Windows.Browser.HtmlEventArgs.prototype._ctor = function (source, clientX, clientY, offsetX, offsetY, screenX, screenY, altKey, ctrlKey, shiftKey, mouseButton, keyCode, characterCode, eventType, eventObject) {
	System.EventArgs.prototype._ctor.call(this);
	this._source = source;
	this._clientX = clientX;
	this._clientY = clientY;
	this._offsetX = offsetX;
	this._offsetY = offsetY;
	this._screenX = screenX;
	this._screenY = screenY;
	this._altKey = altKey;
	this._ctrlKey = ctrlKey;
	this._shiftKey = shiftKey;
	this._mouseButton = mouseButton;
	this._keyCode = keyCode;
	this._charCode = characterCode;
	this._eventType = eventType;
	this._eventObject = eventObject;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_AltKey = function () {
	return this._altKey;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_CharacterCode = function () {
	return this._charCode;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_ClientX = function () {
	return this._clientX;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_ClientY = function () {
	return this._clientY;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_CtrlKey = function () {
	return this._ctrlKey;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_EventType = function () {
	return this._eventType;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_KeyCode = function () {
	return this._keyCode;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_MouseButton = function () {
	return this._mouseButton;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_OffsetX = function () {
	return this._offsetX;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_OffsetY = function () {
	return this._offsetY;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_ScreenX = function () {
	return this._screenX;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_ScreenY = function () {
	return this._screenY;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_ShiftKey = function () {
	return this._shiftKey;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_Source = function () {
	return this._source;
};
System.Windows.Browser.HtmlEventArgs.prototype.get_EventObject = function () {
	return this._eventObject;
};
System.Windows.Browser.HtmlEventArgs.prototype.PreventDefault = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	this._eventObject.VerifyHandle();
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_PreventDefault(this._eventObject.Handle.Handle);
	if (num !== 0) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["PreventDefault"])]);
	}
};
System.Windows.Browser.HtmlEventArgs.prototype.StopPropagation = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	this._eventObject.VerifyHandle();
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_StopPropagation(this._eventObject.Handle.Handle);
	if (num !== 0) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["StopPropagation"])]);
	}
};
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "AltKey", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_AltKey, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "CharacterCode", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_CharacterCode, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "ClientX", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_ClientX, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "ClientY", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_ClientY, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "CtrlKey", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_CtrlKey, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "EventType", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_EventType, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "KeyCode", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_KeyCode, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "MouseButton", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_MouseButton, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "OffsetX", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_OffsetX, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "OffsetY", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_OffsetY, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "ScreenX", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_ScreenX, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "ScreenY", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_ScreenY, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "ShiftKey", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_ShiftKey, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "Source", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_Source, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlEventArgs.prototype, "EventObject", 
	System.Windows.Browser.HtmlEventArgs.prototype.get_EventObject, null);
System.Windows.Browser.HtmlEventArgs.prototype._clientX = 0;
System.Windows.Browser.HtmlEventArgs.prototype._clientY = 0;
System.Windows.Browser.HtmlEventArgs.prototype._offsetX = 0;
System.Windows.Browser.HtmlEventArgs.prototype._offsetY = 0;
System.Windows.Browser.HtmlEventArgs.prototype._screenX = 0;
System.Windows.Browser.HtmlEventArgs.prototype._screenY = 0;
System.Windows.Browser.HtmlEventArgs.prototype._mouseButton = 0;
System.Windows.Browser.HtmlEventArgs.prototype._altKey = false;
System.Windows.Browser.HtmlEventArgs.prototype._ctrlKey = false;
System.Windows.Browser.HtmlEventArgs.prototype._shiftKey = false;
System.Windows.Browser.HtmlEventArgs.prototype._keyCode = 0;
System.Windows.Browser.HtmlEventArgs.prototype._charCode = 0;
System.Windows.Browser.HtmlEventArgs.prototype._eventType = null;
System.Windows.Browser.HtmlEventArgs.prototype._source = null;
System.Windows.Browser.HtmlEventArgs.prototype._eventObject = null;

System.Windows.Browser.HtmlPage.get_Document = function () {
	var handle = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThreadAndEnabled();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	if (!(System.Windows.Browser.HtmlPage.s_document || (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetDocument(/* ref */ handle) !== 0))) {
		System.Windows.Browser.HtmlPage.s_document = JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(handle.value, System.Windows.Browser.HtmlDocument), System.Windows.Browser.HtmlDocument);
	}
	return System.Windows.Browser.HtmlPage.s_document;
};
System.Windows.Browser.HtmlPage.get_Window = function () {
	System.Windows.Browser.HtmlPage.VerifyThreadAndEnabled();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	return System.Windows.Browser.HtmlPage.WindowInternal;
};
System.Windows.Browser.HtmlPage.get_WindowInternal = function () {
	var handle = new JSIL.Variable(0);
	if (!(System.Windows.Browser.HtmlPage.s_window || (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetWindow(/* ref */ handle) !== 0))) {
		System.Windows.Browser.HtmlPage.s_window = JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(handle.value, System.Windows.Browser.HtmlWindow), System.Windows.Browser.HtmlWindow);
	}
	return System.Windows.Browser.HtmlPage.s_window;
};
System.Windows.Browser.HtmlPage.get_Plugin = function () {
	var intPtr = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThreadAndEnabled();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	if (System.Windows.Browser.HtmlPage.s_plugin === null) {
		if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetControlElement(/* ref */ intPtr) === 0) {
			System.Windows.Browser.HtmlPage.s_plugin = JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$2(intPtr.value, System.Windows.Browser.HtmlElement, true, false), System.Windows.Browser.HtmlElement);
			System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReleaseObject(intPtr.value);
		} else if (System.Windows.Browser.HtmlPage.InSafari) {
			var elementsByTagName = System.Windows.Browser.HtmlPage.Document.GetElementsByTagName("embed");
			var enumerator = elementsByTagName.IEnumerable$b1_GetEnumerator();
			try {
			__loop0__: 
				while (enumerator.IEnumerator_MoveNext()) {
					var htmlElement = JSIL.Cast(enumerator.IEnumerator$b1_Current, System.Windows.Browser.HtmlElement);
					var scriptObject = JSIL.TryCast(htmlElement.GetProperty$1("Content"), System.Windows.Browser.ScriptObject);
					if (scriptObject !== null) {
						var scriptObject2 = JSIL.TryCast(scriptObject.GetProperty$1("services"), System.Windows.Browser.ScriptObject);
						if (!((scriptObject2 === null) || (scriptObject2.ManagedObject !== $asm05.System.Windows.Browser.ManagedServices.Current))) {
							System.Windows.Browser.HtmlPage.s_plugin = htmlElement;
						}
					}
				}
			} finally {
				if (enumerator !== null) {
					enumerator.IDisposable_Dispose();
				}
			}
			if (System.Windows.Browser.HtmlPage.s_plugin === null) {
				var elementsByTagName2 = System.Windows.Browser.HtmlPage.Document.GetElementsByTagName("object");
				var enumerator2 = elementsByTagName2.IEnumerable$b1_GetEnumerator();
				try {
				__loop1__: 
					while (enumerator2.IEnumerator_MoveNext()) {
						var htmlElement2 = JSIL.Cast(enumerator2.IEnumerator$b1_Current, System.Windows.Browser.HtmlElement);
						var scriptObject3 = JSIL.TryCast(htmlElement2.GetProperty$1("Content"), System.Windows.Browser.ScriptObject);
						if (scriptObject3 !== null) {
							var scriptObject4 = JSIL.TryCast(scriptObject3.GetProperty$1("services"), System.Windows.Browser.ScriptObject);
							if (!((scriptObject4 === null) || (scriptObject4.ManagedObject !== $asm05.System.Windows.Browser.ManagedServices.Current))) {
								System.Windows.Browser.HtmlPage.s_plugin = htmlElement2;
							}
						}
					}
				} finally {
					if (enumerator2 !== null) {
						enumerator2.IDisposable_Dispose();
					}
				}
			}
		}
	}
	return System.Windows.Browser.HtmlPage.s_plugin;
};
System.Windows.Browser.HtmlPage.get_BrowserInformation = function () {
	System.Windows.Browser.HtmlPage.VerifyThreadAndEnabled();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	return System.Windows.Browser.HtmlPage.BrowserInformationInternal;
};
System.Windows.Browser.HtmlPage.get_BrowserInformationInternal = function () {
	var intPtr = new JSIL.Variable(0), intPtr2 = new JSIL.Variable(0), intPtr3 = new JSIL.Variable(0), intPtr4 = new JSIL.Variable(0);
	if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetBrowserInfo(/* ref */ intPtr, /* ref */ intPtr2, /* ref */ intPtr3, /* ref */ intPtr4) === 0) {
		var name = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(intPtr.value);
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(intPtr.value);
		var version = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(intPtr2.value);
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(intPtr2.value);
		var platform = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(intPtr3.value);
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(intPtr3.value);
		var userAgent = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(intPtr4.value);
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(intPtr4.value);
		return new System.Windows.Browser.BrowserInformation(name, version, platform, userAgent);
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["get_BrowserInformation"])]);
};
System.Windows.Browser.HtmlPage.get_IsEnabled = function () {
	return (System.Windows.Browser.HtmlPage.s_isEnabled && !System.Windows.Hosting.NativeHost.Current.IsShuttingDown);
};
System.Windows.Browser.HtmlPage.get_IsPopupWindowAllowed = function () {
	var result = new JSIL.Variable(false);
	System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_AllowHtmlPopupWindow(/* ref */ result);
	return result.value;
};
System.Windows.Browser.HtmlPage.EnsureInitialized = function () {
	var current = System.Windows.Hosting.NativeHost.Current;
	if (current.IsShuttingDown) {
		return;
	}
	if (!(System.Windows.Browser.HtmlPage.s_isEnabled || 
			(current.BrowserService === null) || 
			!current.BrowserService.IBrowserService_BridgeEnabled || (System.Threading.Thread.CurrentThread.ManagedThreadId !== System.Windows.Hosting.NativeHost.Current.UIThreadID))) {
		System.Windows.Browser.HtmlPage.s_isEnabled = true;
		System.Windows.Browser.HtmlPage.RegisterScriptableObject$1("services", $asm05.System.Windows.Browser.ManagedServices.Current, true);
		var arg_5C_0 = System.Windows.Browser.HtmlPage.Plugin;
	}
	if (!(System.Windows.Browser.HtmlPage.s_safariChecked || 
			(current.BrowserService === null) || current.BrowserService.IBrowserService_InCustomHost())) {
		try {
			try {
				System.Windows.Browser.HtmlPage.InSafari = System.Windows.Browser.HtmlPage.BrowserInformationInternal.UserAgent.Contains("AppleWebKit");
				System.Windows.Browser.HtmlPage.InSafariTwo = System.Windows.Browser.HtmlPage.BrowserInformationInternal.UserAgent.Contains("AppleWebKit/4");
			} catch ($exception) {
			}
		} finally {
			System.Windows.Browser.HtmlPage.s_safariChecked = true;
		}
	}
};
System.Windows.Browser.HtmlPage.Dispose = function () {
	if (System.Windows.Browser.HtmlPage.s_isEnabled) {
		var htmlElement = System.Windows.Browser.HtmlPage.s_plugin;
		if (htmlElement !== null) {
			htmlElement.InternalDispose(false);
		}
	}
};
System.Windows.Browser.HtmlPage.RegisterCreateableType = function (scriptAlias, type) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(scriptAlias, "scriptAlias", true);
	if (type === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["type"]);
	}
	if (!$asm05.System.Windows.Browser.ManagedServices.IsValidCreateableType(type)) {
		throw JSIL.New(System.ArgumentException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ManagedServices_IllegalTypeForRegisterCreateableType"), [type.Name])]);
	}
	$asm05.System.Windows.Browser.ManagedServices.Current.RegisterCreateableType(scriptAlias, type);
};
System.Windows.Browser.HtmlPage.UnregisterCreateableType = function (scriptAlias) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(scriptAlias, "scriptAlias", true);
	$asm05.System.Windows.Browser.ManagedServices.Current.UnregisterCreateableType(scriptAlias);
};
System.Windows.Browser.HtmlPage.RegisterScriptableObject$0 = function (scriptKey, instance) {
	System.Windows.Browser.HtmlPage.RegisterScriptableObject$1(scriptKey, instance, false);
};
System.Windows.Browser.HtmlPage.PopupWindow = function (navigateToUri, target, options) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	if (System.Uri.op_Equality(navigateToUri, null)) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["navigateToUri"]);
	}
	var scheme = navigateToUri.Scheme;
	if (!(System.String.Equals$1("http", scheme, System.StringComparison.OrdinalIgnoreCase) || System.String.Equals$1("https", scheme, System.StringComparison.OrdinalIgnoreCase))) {
		throw JSIL.New(System.ArgumentException, "_ctor$1", ["navigateToUri"]);
	}
	if (!System.Windows.Browser.HtmlPage.IsPopupWindowAllowed) {
		return null;
	}
	if (target === null) {
		target = System.String.Empty;
	}
	if (!System.Windows.Browser.HtmlPage.IsEnabled) {
		target = "_blank";
	}
	var result = null;
	if (!System.Windows.Browser.HtmlPage.InSafariTwo) {
		System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_TogglePopupBlocker(true);
	}
	try {
		if (options === null) {
			result = System.Windows.Browser.HtmlPage.WindowInternal.Navigate$1(navigateToUri, target);
		} else {
			result = System.Windows.Browser.HtmlPage.WindowInternal.Navigate$2(navigateToUri, target, options.ToFeaturesString());
		}
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_DisallowPopupWindow();
	} finally {
		if (!System.Windows.Browser.HtmlPage.InSafariTwo) {
			System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_TogglePopupBlocker(false);
		}
	}
	if (System.Windows.Browser.HtmlPage.IsEnabled) {
		return result;
	}
	return null;
};
System.Windows.Browser.HtmlPage.RegisterScriptableObject$1 = function (scriptKey, instance, isRestricted) {
	var flag = new JSIL.Variable(false);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(scriptKey, "scriptKey", true);
	if (instance === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["instance"]);
	}
	if (System.Windows.Browser.HtmlPage.s_scriptableObjects.TryGetValue(scriptKey, /* ref */ flag)) {
		if (flag.value) {
			throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("Common_MethodFailed", ["RegisterScriptableObject"]), "scriptKey"]);
		}
		System.Windows.Browser.HtmlPage.UnregisterScriptableObject(scriptKey);
	}
	if (!isRestricted) {
		$asm05.System.Windows.Hosting.ScriptingInterface.VerifyScriptableObject(instance);
	}
	var orCreateManagedObject = $asm05.System.Windows.Browser.ManagedObject.GetOrCreateManagedObject(instance);
	System.Windows.Browser.HtmlPage.s_scriptableObjects.Add(scriptKey, isRestricted);
	var objectHandleAddRef = orCreateManagedObject.GetObjectHandleAddRef();
	System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_RegisterScriptableObject(scriptKey, objectHandleAddRef);
	System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReleaseObject(objectHandleAddRef);
};
System.Windows.Browser.HtmlPage.UnregisterScriptableObject = function (scriptKey) {
	var flag = new JSIL.Variable(false);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.HtmlPage.EnsureInitialized();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(scriptKey, "scriptKey", true);
	if (!(System.Windows.Browser.HtmlPage.s_scriptableObjects.TryGetValue(scriptKey, /* ref */ flag) && !flag.value)) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("HtmlPage_ScriptableObjectDoesNotExist"), "scriptKey"]);
	}
	System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_UnregisterScriptableObject(scriptKey);
	System.Windows.Browser.HtmlPage.s_scriptableObjects.Remove(scriptKey);
};
System.Windows.Browser.HtmlPage.VerifyThreadAndEnabled = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (!System.Windows.Browser.HtmlPage.IsEnabled) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("HtmlPage_NotEnabled")]);
	}
};
System.Windows.Browser.HtmlPage.VerifyThread = function () {
	System.Windows.Hosting.NativeHost.Current.VerifyThread();
};
JSIL.OverloadedMethod(System.Windows.Browser.HtmlPage, "RegisterScriptableObject", [
		["RegisterScriptableObject$0", [System.String, System.Object]], 
		["RegisterScriptableObject$1", [System.String, System.Object, System.Boolean]]
	]);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "Document", 
	System.Windows.Browser.HtmlPage.get_Document, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "Window", 
	System.Windows.Browser.HtmlPage.get_Window, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "WindowInternal", 
	System.Windows.Browser.HtmlPage.get_WindowInternal, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "Plugin", 
	System.Windows.Browser.HtmlPage.get_Plugin, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "BrowserInformation", 
	System.Windows.Browser.HtmlPage.get_BrowserInformation, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "BrowserInformationInternal", 
	System.Windows.Browser.HtmlPage.get_BrowserInformationInternal, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "IsEnabled", 
	System.Windows.Browser.HtmlPage.get_IsEnabled, null);
JSIL.MakeProperty(System.Windows.Browser.HtmlPage, "IsPopupWindowAllowed", 
	System.Windows.Browser.HtmlPage.get_IsPopupWindowAllowed, null);
System.Windows.Browser.HtmlPage.s_isEnabled = false;
System.Windows.Browser.HtmlPage.s_document = null;
System.Windows.Browser.HtmlPage.s_window = null;
System.Windows.Browser.HtmlPage.s_plugin = null;
System.Windows.Browser.HtmlPage.s_scriptableObjects = null;
System.Windows.Browser.HtmlPage.s_safariChecked = false;
System.Windows.Browser.HtmlPage.InSafari = false;
System.Windows.Browser.HtmlPage.InSafariTwo = false;
System.Windows.Browser.HtmlPage._cctor = function () {
	System.Windows.Browser.HtmlPage.s_scriptableObjects = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.Boolean), "_ctor$0", []);
	System.Windows.Browser.HtmlPage.s_safariChecked = false;
	System.Windows.Browser.HtmlPage.InSafari = false;
	System.Windows.Browser.HtmlPage.InSafariTwo = false;
	System.Windows.Browser.HtmlPage.EnsureInitialized();
};

System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Width = function () {
	return this._width;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Width = function (value) {
	if (value < 0) {
		throw JSIL.New(System.ArgumentOutOfRangeException, "_ctor$1", ["Width"]);
	}
	this._width = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Top = function () {
	return this._top;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Top = function (value) {
	if (value < 0) {
		throw JSIL.New(System.ArgumentOutOfRangeException, "_ctor$1", ["Top"]);
	}
	this._top = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Left = function () {
	return this._left;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Left = function (value) {
	if (value < 0) {
		throw JSIL.New(System.ArgumentOutOfRangeException, "_ctor$1", ["Left"]);
	}
	this._left = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Height = function () {
	return this._height;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Height = function (value) {
	if (value < 0) {
		throw JSIL.New(System.ArgumentOutOfRangeException, "_ctor$1", ["Height"]);
	}
	this._height = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Directories = function () {
	return this._directories;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Directories = function (value) {
	this._directories = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Location = function () {
	return this._location;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Location = function (value) {
	this._location = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Menubar = function () {
	return this._menubar;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Menubar = function (value) {
	this._menubar = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Resizeable = function () {
	return this._resizeable;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Resizeable = function (value) {
	this._resizeable = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Scrollbars = function () {
	return this._scrollbars;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Scrollbars = function (value) {
	this._scrollbars = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Status = function () {
	return this._status;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Status = function (value) {
	this._status = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Toolbar = function () {
	return this._toolbar;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Toolbar = function (value) {
	this._toolbar = value;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype._ctor = function () {
	System.Object.prototype._ctor.call(this);
	this.Width = 600;
	this.Height = 450;
	this.Top = 100;
	this.Left = 100;
	this.Directories = true;
	this.Location = true;
	this.Menubar = true;
	this.Resizeable = true;
	this.Scrollbars = true;
	this.Status = true;
	this.Toolbar = true;
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.BoolToYesNo = function (b) {
	if (!b) {
		return "no";
	}
	return "yes";
};
System.Windows.Browser.HtmlPopupWindowOptions.prototype.ToFeaturesString = function () {
	var stringBuilder = JSIL.New(System.Text.StringBuilder, "_ctor$1", [50]);
	var num = System.Convert.ToInt32$0(System.Windows.Browser.HtmlPage.WindowInternal.Eval("screen.availWidth"));
	var num2 = System.Convert.ToInt32$0(System.Windows.Browser.HtmlPage.WindowInternal.Eval("screen.availHeight"));
	var value = System.Math.Min((num - 250), this.Width);
	var value2 = System.Math.Min((num2 - 250), this.Height);
	var value3 = System.Math.Min((num - 100), this.Left);
	var value4 = System.Math.Min((num2 - 100), this.Top);
	(stringBuilder.Append$2("width=")).Append$9(value);
	(stringBuilder.Append$2(",height=")).Append$9(value2);
	(stringBuilder.Append$2(",left=")).Append$9(value3);
	(stringBuilder.Append$2(",top=")).Append$9(value4);
	(stringBuilder.Append$2(",directories=")).Append$2(this.BoolToYesNo(this.Directories));
	(stringBuilder.Append$2(",location=")).Append$2(this.BoolToYesNo(this.Location));
	(stringBuilder.Append$2(",menubar=")).Append$2(this.BoolToYesNo(this.Menubar));
	(stringBuilder.Append$2(",resizeable=")).Append$2(this.BoolToYesNo(this.Resizeable));
	(stringBuilder.Append$2(",scrollbars=")).Append$2(this.BoolToYesNo(this.Scrollbars));
	(stringBuilder.Append$2(",status=")).Append$2(this.BoolToYesNo(this.Status));
	(stringBuilder.Append$2(",toolbar=")).Append$2(this.BoolToYesNo(this.Toolbar));
	return stringBuilder.toString();
};
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Width", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Width, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Width);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Top", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Top, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Top);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Left", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Left, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Left);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Height", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Height, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Height);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Directories", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Directories, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Directories);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Location", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Location, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Location);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Menubar", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Menubar, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Menubar);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Resizeable", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Resizeable, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Resizeable);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Scrollbars", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Scrollbars, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Scrollbars);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Status", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Status, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Status);
JSIL.MakeProperty(System.Windows.Browser.HtmlPopupWindowOptions.prototype, "Toolbar", 
	System.Windows.Browser.HtmlPopupWindowOptions.prototype.get_Toolbar, System.Windows.Browser.HtmlPopupWindowOptions.prototype.set_Toolbar);
System.Windows.Browser.HtmlPopupWindowOptions.prototype._width = 0;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._top = 0;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._left = 0;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._height = 0;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._directories = false;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._location = false;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._menubar = false;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._resizeable = false;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._scrollbars = false;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._status = false;
System.Windows.Browser.HtmlPopupWindowOptions.prototype._toolbar = false;

System.Windows.Browser.HtmlWindow.prototype.get_CurrentBookmark = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	var locationProperty = this.GetLocationProperty("hash");
	if (locationProperty === null) {
		return System.String.Empty;
	}
	if (!((locationProperty.length <= 0) || ((locationProperty[0]) !== "#"))) {
		return locationProperty.Remove$0(0, 1);
	}
	return locationProperty;
};
System.Windows.Browser.HtmlWindow.prototype.set_CurrentBookmark = function (value) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (value === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["value"]);
	}
	if (!((value.length <= 0) || ((value[0]) !== "#"))) {
		this.SetLocationProperty("hash", value.Remove$0(0, 1));
		return;
	}
	if (value.length === 0) {
		this.SetLocationProperty("hash", "#");
		return;
	}
	this.SetLocationProperty("hash", value);
};
System.Windows.Browser.HtmlWindow.prototype._ctor = function () {
	System.Windows.Browser.HtmlObject.prototype._ctor.call(this);
};
System.Windows.Browser.HtmlWindow.prototype.Alert = function (alertText) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (alertText === null) {
		alertText = System.String.Empty;
	}
	this.Invoke("alert", [alertText]);
};
System.Windows.Browser.HtmlWindow.prototype.Eval = function (code) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$0(code, "code");
	var exceptionInfo = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ExceptionInfo());
	var scriptParam = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ScriptParam());
	var num = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_Eval(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, code, /* ref */ scriptParam, /* ref */ exceptionInfo);
	if (num !== 0) {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
		var text = null;
		if (num === -2147352567) {
			text = $asm05.System.Windows.Hosting.ScriptingInterface.GetExceptionMessageAndDispose(/* ref */ exceptionInfo);
		}
		if (System.String.IsNullOrEmpty(text)) {
			text = System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["Eval"]);
		}
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [text]);
	}
	return $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParamAndDispose(scriptParam.value.MemberwiseClone());
};
System.Windows.Browser.HtmlWindow.prototype.Confirm = function (confirmText) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (confirmText === null) {
		confirmText = System.String.Empty;
	}
	return JSIL.Cast(this.Invoke("confirm", [confirmText]), System.Boolean);
};
System.Windows.Browser.HtmlWindow.prototype.CreateInstance = function (typeName, args) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$1(typeName, "typeName", true);
	var scriptObject = this;
	var array = typeName.Split(JSIL.Array.New(System.Char, ["."]));
__loop0__: 
	for (var i = 0; i < array.length; ++i) {
		scriptObject = JSIL.TryCast(scriptObject.GetProperty$1(array[i]), System.Windows.Browser.ScriptObject);
		if (scriptObject === null) {
			throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptObject_TypeDoesNotExist", [typeName]), "typeName"]);
		}
	}
	var stringBuilder = JSIL.New(System.Text.StringBuilder, "_ctor$0", []);
	if (!((args !== null) && (args.length !== 0))) {
		var array2 = [scriptObject];
		var text = "t";
	} else {
		array2 = JSIL.Array.New(System.Object, (1 + args.length));
		array2[0] = scriptObject;
		text = "t,";
	__loop1__: 
		for (var j = 0; j < args.length; ++j) {
			if (j === 0) {
				stringBuilder.Append$2("p");
			} else {
				stringBuilder.Append$2(",p");
			}
			stringBuilder.Append$9(j);
			array2[(j + 1)] = args[j];
		}
	}
	var scriptObject2 = JSIL.Cast(this.Eval(System.String.Format(System.Globalization.CultureInfo.InvariantCulture, "new function() {{\r\n    this.create = function({0}{1}) {{\r\n        try {{\r\n            return new t({1});\r\n        }} catch (e) {{ }}\r\n    }};\r\n}}", [text, stringBuilder.toString()])), System.Windows.Browser.ScriptObject);
	var scriptObject3 = JSIL.TryCast(scriptObject2.Invoke("create", array2), System.Windows.Browser.ScriptObject);
	if (scriptObject3 === null) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptObject_TypeDoesNotExist", [typeName]), "typeName"]);
	}
	return scriptObject3;
};
System.Windows.Browser.HtmlWindow.prototype.Navigate$0 = function (navigateToUri) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (System.Uri.op_Equality(navigateToUri, null)) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["navigateToUri"]);
	}
	this.Navigate$2(navigateToUri, "_self", System.String.Empty);
};
System.Windows.Browser.HtmlWindow.prototype.Navigate$1 = function (navigateToUri, target) {
	return this.Navigate$2(navigateToUri, target, System.String.Empty);
};
System.Windows.Browser.HtmlWindow.prototype.Navigate$2 = function (navigateToUri, target, targetFeatures) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (System.Uri.op_Equality(navigateToUri, null)) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["navigateToUri"]);
	}
	if (target === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["target"]);
	}
	if (targetFeatures === null) {
		throw JSIL.New(System.ArgumentNullException, "_ctor$1", ["targetFeatures"]);
	}
	if (!navigateToUri.IsAbsoluteUri) {
		navigateToUri = JSIL.New(System.Uri, "_ctor$3", [System.Windows.Browser.HtmlPage.Document.DocumentUri, navigateToUri]);
	}
	return JSIL.TryCast(this.Invoke("open", [navigateToUri.OriginalString, target, targetFeatures]), System.Windows.Browser.HtmlWindow);
};
System.Windows.Browser.HtmlWindow.prototype.NavigateToBookmark = function (bookmark) {
	this.CurrentBookmark = bookmark;
};
System.Windows.Browser.HtmlWindow.prototype.Prompt = function (promptText) {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (promptText === null) {
		promptText = System.String.Empty;
	}
	return JSIL.Cast(this.Invoke("prompt", [promptText]), System.String);
};
System.Windows.Browser.HtmlWindow.prototype.GetLocationProperty = function (name) {
	if (this._location === null) {
		this._location = JSIL.Cast(this.GetProperty$1("location"), System.Windows.Browser.ScriptObject);
	}
	var property = this._location.GetProperty$1(name);
	if (property !== null) {
		return property.toString();
	}
	return null;
};
System.Windows.Browser.HtmlWindow.prototype.SetLocationProperty = function (name, value) {
	if (this._location === null) {
		this._location = JSIL.Cast(this.GetProperty$1("location"), System.Windows.Browser.ScriptObject);
	}
	this._location.SetProperty$1(name, value);
};
JSIL.OverloadedMethod(System.Windows.Browser.HtmlWindow.prototype, "Navigate", [
		["Navigate$0", [System.Uri]], 
		["Navigate$1", [System.Uri, System.String]], 
		["Navigate$2", [System.Uri, System.String, System.String]]
	]);
JSIL.MakeProperty(System.Windows.Browser.HtmlWindow.prototype, "CurrentBookmark", 
	System.Windows.Browser.HtmlWindow.prototype.get_CurrentBookmark, System.Windows.Browser.HtmlWindow.prototype.set_CurrentBookmark);
Object.defineProperty(System.Windows.Browser.HtmlWindow, "InstantiateObjectScript", {
		"value": "new function() {{\r\n    this.create = function({0}{1}) {{\r\n        try {{\r\n            return new t({1});\r\n        }} catch (e) {{ }}\r\n    }};\r\n}}"}
);
System.Windows.Browser.HtmlWindow.prototype._location = null;

System.Windows.Browser.HttpUtility.HtmlDecode = function (html) {
	var __label0__ = "__entry0__";
__step0__: 
	while (true) {
		switch (__label0__) {
			case "__entry0__":
				if (html === null) {
					return null;
				}
				if (html.IndexOf$0("&") < 0) {
					return html;
				}
				var stringBuilder = JSIL.New(System.Text.StringBuilder, "_ctor$0", []);
				var stringWriter = JSIL.New(System.IO.StringWriter, "_ctor$3", [stringBuilder, System.Globalization.CultureInfo.InvariantCulture]);
				var length = html.length;
			__loop0__: 
				for (var i = 0; i < length; ) {
					var __label1__ = "__entry1__";
				__step1__: 
					while (true) {
						switch (__label1__) {
							case "__entry1__":
								var c = (html[i]);
								if (c !== "&") {
									__label1__ = "IL_11E";
									continue __step1__;
								}
								var num = html.IndexOfAny$1(System.Windows.Browser.HttpUtility.s_entityEndingChars, (i + 1));
								if ((num <= 0) || ((html[num]) !== ";")) {
									__label1__ = "IL_11E";
									continue __step1__;
								}
								var text = html.Substring$1((i + 1), ((num - i) - 1));
								if (!((text.length <= 1) || ((text[0]) !== "#"))) {
									try {
										if (!(((text[1]) !== "x") && ((text[1]) !== "X"))) {
											c = String.fromCharCode(System.Int32.Parse(text.Substring$0(2), System.Globalization.NumberStyles.AllowHexSpecifier, System.Globalization.CultureInfo.InvariantCulture));
										} else {
											c = String.fromCharCode(System.Int32.Parse(text.Substring$0(1), System.Globalization.CultureInfo.InvariantCulture));
										}
										i = num;
										__label1__ = "IL_11E";
										continue __step1__;
									} catch ($exception) {
										if (JSIL.CheckType($exception, System.FormatException)) {
											++i;
											__label1__ = "IL_11E";
											continue __step1__;
										} else if (JSIL.CheckType($exception, System.ArgumentException)) {
											++i;
											__label1__ = "IL_11E";
											continue __step1__;
										} else {
											throw $exception;
										}
									}
								}
								i = num;
								var c2 = $asm05.System.Windows.Browser.HtmlEntities.Lookup(text);
								if (JSIL.Cast(c2, System.Boolean)) {
									c = c2;
									__label1__ = "IL_11E";
									continue __step1__;
								}
								stringWriter.Write$0("&");
								stringWriter.Write$11(text);
								stringWriter.Write$0(";");
								__label1__ = "IL_126";
								continue __step1__;
								break;
							case "IL_126":
								++i;
								continue __loop0__;
								__label1__ = "IL_11E";
								continue __step1__;
								break;
							case "IL_11E":
								stringWriter.Write$0(c);
								__label1__ = "IL_126";
								continue __step1__;
								break __step1__;
						}
					}
				}
				return stringBuilder.toString();
				break __step0__;
		}
	}
};
System.Windows.Browser.HttpUtility.HtmlEncode = function (html) {
	var __label0__ = "__entry0__";
__step0__: 
	while (true) {
		switch (__label0__) {
			case "__entry0__":
				if (html === null) {
					return null;
				}
				var num = System.Windows.Browser.HttpUtility.IndexOfHtmlEncodingChars(html, 0);
				if (num === -1) {
					return html;
				}
				var stringBuilder = JSIL.New(System.Text.StringBuilder, "_ctor$1", [(html.length + 5)]);
				var length = html.length;
				var num2 = 0;
			__loop0__: 
				do {
					if (num > num2) {
						stringBuilder.Append$3(html, num2, (num - num2));
					}
					var c = (html[num]);
					if (c <= ">") {
						var c2 = c;
						if (c2 !== '"') {
							if (c2 !== "&") {
								switch (c2) {
									case "<": 
										stringBuilder.Append$2("&lt;");
										break;
									case ">": 
										stringBuilder.Append$2("&gt;");
										break;
								}
							} else {
								stringBuilder.Append$2("&amp;");
							}
						} else {
							stringBuilder.Append$2("&quot;");
						}
					}
					num2 = (num + 1);
					if (num2 >= length) {
						__label0__ = "IL_CA";
						continue __step0__;
					}
					num = System.Windows.Browser.HttpUtility.IndexOfHtmlEncodingChars(html, num2);
				} while (num !== -1);
				stringBuilder.Append$3(html, num2, (length - num2));
				__label0__ = "IL_CA";
				continue __step0__;
				break;
			case "IL_CA":
				return stringBuilder.toString();
				break __step0__;
		}
	}
};
System.Windows.Browser.HttpUtility.IndexOfHtmlEncodingChars = JSIL.UntranslatableFunction("System.Int32 System.Windows.Browser.HttpUtility::IndexOfHtmlEncodingChars(System.String,System.Int32)");
System.Windows.Browser.HttpUtility.UrlEncode = function (url) {
	if (url === null) {
		return null;
	}
	var array = System.Text.Encoding.UTF8.GetBytes$3(url);
	var num = 0;
	var num2 = 0;
	var num3 = array.length;
__loop0__: 
	for (var i = 0; i < num3; ++i) {
		var c = array[i];
		if (c === " ") {
			++num;
		} else if (!System.Windows.Browser.HttpUtility.IsSafe(c)) {
			++num2;
		}
	}
	if (!((num === 0) && (num2 === 0))) {
		var array2 = JSIL.Array.New(System.Byte, (num3 + (num2 * 2)));
		var num4 = 0;
	__loop1__: 
		for (var j = 0; j < num3; ++j) {
			var b = array[j];
			var c2 = String.fromCharCode(b);
			if (System.Windows.Browser.HttpUtility.IsSafe(c2)) {
				array2[num4++] = b;
			} else if (c2 === " ") {
				array2[num4++] = 43;
			} else {
				array2[num4++] = 37;
				array2[num4++] = (System.Windows.Browser.HttpUtility.IntToHex(((b >> 4) & 15))).charCodeAt(0);
				array2[num4++] = (System.Windows.Browser.HttpUtility.IntToHex((b & 15))).charCodeAt(0);
			}
		}
		array = array2;
	}
	return System.Text.Encoding.UTF8.GetString$1(array, 0, array.length);
};
System.Windows.Browser.HttpUtility.UrlDecode = function (url) {
	var __label0__ = "__entry0__";
__step0__: 
	while (true) {
		switch (__label0__) {
			case "__entry0__":
				if (url === null) {
					return null;
				}
				var length = url.length;
				var urlDecoder = new $asm05.System.Windows.Browser.HttpUtility.UrlDecoder(length, System.Text.Encoding.UTF8);
			__loop0__: 
				for (var i = 0; i < length; ) {
					var __label1__ = "__entry1__";
				__step1__: 
					while (true) {
						switch (__label1__) {
							case "__entry1__":
								var c = (url[i]);
								if (c === "+") {
									c = " ";
									__label1__ = "IL_10F";
									continue __step1__;
								}
								if ((c !== "%") || (i >= (length - 2))) {
									__label1__ = "IL_10F";
									continue __step1__;
								}
								if (!(((url[(i + 1)]) !== "u") || (i >= (length - 5)))) {
									var num = System.Windows.Browser.HttpUtility.HexToInt(url[(i + 2)]);
									var num2 = System.Windows.Browser.HttpUtility.HexToInt(url[(i + 3)]);
									var num3 = System.Windows.Browser.HttpUtility.HexToInt(url[(i + 4)]);
									var num4 = System.Windows.Browser.HttpUtility.HexToInt(url[(i + 5)]);
									if ((num < 0) || 
										(num2 < 0) || 
										(num3 < 0) || (num4 < 0)) {
										__label1__ = "IL_10F";
										continue __step1__;
									}
									c = ((((num << 12) | (num2 << 8)) | (num3 << 4)) | num4);
									i += 5;
									urlDecoder.AddChar(c);
								} else {
									var num5 = System.Windows.Browser.HttpUtility.HexToInt(url[(i + 1)]);
									var num6 = System.Windows.Browser.HttpUtility.HexToInt(url[(i + 2)]);
									if ((num5 < 0) || (num6 < 0)) {
										__label1__ = "IL_10F";
										continue __step1__;
									}
									i += 2;
									urlDecoder.AddByte(((num5 << 4) | num6));
								}
								__label1__ = "IL_129";
								continue __step1__;
								break;
							case "IL_129":
								++i;
								continue __loop0__;
								__label1__ = "IL_10F";
								continue __step1__;
								break;
							case "IL_10F":
								if (!(c & "\uff80")) {
									urlDecoder.AddByte(c.charCodeAt(0));
									__label1__ = "IL_129";
									continue __step1__;
								}
								urlDecoder.AddChar(c);
								__label1__ = "IL_129";
								continue __step1__;
								break __step1__;
						}
					}
				}
				return urlDecoder.GetString();
				break __step0__;
		}
	}
};
System.Windows.Browser.HttpUtility.HexToInt = function (h) {
	if ((h >= "0") && (h <= "9")) {
		return (h - "0");
	}
	if ((h >= "a") && (h <= "f")) {
		return ((h - "a") + "\n");
	}
	if (!((h >= "A") && (h <= "F"))) {
		return -1;
	}
	return ((h - "A") + "\n");
};
System.Windows.Browser.HttpUtility.IntToHex = function (n) {
	if (n <= 9) {
		return (n + 48);
	}
	return ((n - 10) + 97);
};
System.Windows.Browser.HttpUtility.IsSafe = function (ch) {
	if (!(!((ch >= "a") && 
				(ch <= "z")) && 
			!((ch >= "A") && 
				(ch <= "Z")) && ((ch < "0") || 
				(ch > "9")))) {
		return true;
	}
	if (ch !== "!") {
		switch (ch) {
			case "'": 
			case "(": 
			case ")": 
			case "*": 
			case "-": 
			case ".": 
				return true;
			case "+": 
			case ",": 
				break;
			default: 
				if (ch === "_") {
					return true;
				}
				break;
		}
		return false;
	}
	return true;
};
System.Windows.Browser.HttpUtility.s_entityEndingChars = null;
System.Windows.Browser.HttpUtility._cctor = function () {
	System.Windows.Browser.HttpUtility.s_entityEndingChars = JSIL.Array.New(System.Char, [";", "&"]);
};

$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype.FlushBytes = function () {
	if (this._numBytes > 0) {
		this._numChars += this._encoding.GetChars$2(
			this._byteBuffer, 
			0, 
			this._numBytes, 
			this._charBuffer, 
			this._numChars
		);
		this._numBytes = 0;
	}
};
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype._ctor = function (bufferSize, encoding) {
	System.Object.prototype._ctor.call(this);
	this._bufferSize = bufferSize;
	this._encoding = encoding;
	this._charBuffer = JSIL.Array.New(System.Char, bufferSize);
};
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype.AddChar = function (ch) {
	if (this._numBytes > 0) {
		this.FlushBytes();
	}
	this._charBuffer[this._numChars++] = ch;
};
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype.AddByte = function (b) {
	if (this._byteBuffer === null) {
		this._byteBuffer = JSIL.Array.New(System.Byte, this._bufferSize);
	}
	this._byteBuffer[this._numBytes++] = b;
};
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype.GetString = function () {
	if (this._numBytes > 0) {
		this.FlushBytes();
	}
	if (this._numChars > 0) {
		return JSIL.New(System.String, "_ctor$0", [this._charBuffer, 0, this._numChars]);
	}
	return System.String.Empty;
};
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype._bufferSize = 0;
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype._numChars = 0;
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype._charBuffer = null;
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype._numBytes = 0;
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype._byteBuffer = null;
$asm05.System.Windows.Browser.HttpUtility.UrlDecoder.prototype._encoding = null;

$asm05.System.Windows.Browser.HtmlEntities.Lookup = function (entity) {
	var lookupLockObject = null, result = new JSIL.Variable(0);
	if ($asm05.System.Windows.Browser.HtmlEntities._entitiesLookupTable === null) {
		System.Threading.Monitor.Enter((lookupLockObject = $asm05.System.Windows.Browser.HtmlEntities._lookupLockObject));
		try {
			if ($asm05.System.Windows.Browser.HtmlEntities._entitiesLookupTable === null) {
				var dictionary = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.Char), "_ctor$0", []);
				var entitiesList = $asm05.System.Windows.Browser.HtmlEntities._entitiesList;
			__loop0__: 
				for (var i = 0; i < entitiesList.length; ++i) {
					var text = entitiesList[i];
					dictionary.set_Item(text.Substring$0(2), text[0]);
				}
				$asm05.System.Windows.Browser.HtmlEntities._entitiesLookupTable = dictionary;
			}
		} finally {
			System.Threading.Monitor.Exit(lookupLockObject);
		}
	}
	if ($asm05.System.Windows.Browser.HtmlEntities._entitiesLookupTable.TryGetValue(entity, /* ref */ result)) {
		return result.value;
	}
	return "\0";
};
$asm05.System.Windows.Browser.HtmlEntities._lookupLockObject = null;
$asm05.System.Windows.Browser.HtmlEntities._entitiesList = null;
$asm05.System.Windows.Browser.HtmlEntities._entitiesLookupTable = null;
$asm05.System.Windows.Browser.HtmlEntities._cctor = function () {
	$asm05.System.Windows.Browser.HtmlEntities._lookupLockObject = new System.Object();
	$asm05.System.Windows.Browser.HtmlEntities._entitiesList = JSIL.Array.New(System.String, ['"-quot', "&-amp", "<-lt", ">-gt", "\xa0-nbsp", "\xa1-iexcl", "\xa2-cent", "\xa3-pound", "\xa4-curren", "\xa5-yen", "\xa6-brvbar", "\xa7-sect", "\xa8-uml", "\xa9-copy", "\xaa-ordf", "\xab-laquo", "\xac-not", "\xad-shy", "\xae-reg", "\xaf-macr", "\xb0-deg", "\xb1-plusmn", "\xb2-sup2", "\xb3-sup3", "\xb4-acute", "\xb5-micro", "\xb6-para", "\xb7-middot", "\xb8-cedil", "\xb9-sup1", "\xba-ordm", "\xbb-raquo", "\xbc-frac14", "\xbd-frac12", "\xbe-frac34", "\xbf-iquest", "\xc0-Agrave", "\xc1-Aacute", "\xc2-Acirc", "\xc3-Atilde", "\xc4-Auml", "\xc5-Aring", "\xc6-AElig", "\xc7-Ccedil", "\xc8-Egrave", "\xc9-Eacute", "\xca-Ecirc", "\xcb-Euml", "\xcc-Igrave", "\xcd-Iacute", "\xce-Icirc", "\xcf-Iuml", "\xd0-ETH", "\xd1-Ntilde", "\xd2-Ograve", "\xd3-Oacute", "\xd4-Ocirc", "\xd5-Otilde", "\xd6-Ouml", "\xd7-times", "\xd8-Oslash", "\xd9-Ugrave", "\xda-Uacute", "\xdb-Ucirc", "\xdc-Uuml", "\xdd-Yacute", "\xde-THORN", "\xdf-szlig", "\xe0-agrave", "\xe1-aacute", "\xe2-acirc", "\xe3-atilde", "\xe4-auml", "\xe5-aring", "\xe6-aelig", "\xe7-ccedil", "\xe8-egrave", "\xe9-eacute", "\xea-ecirc", "\xeb-euml", "\xec-igrave", "\xed-iacute", "\xee-icirc", "\xef-iuml", "\xf0-eth", "\xf1-ntilde", "\xf2-ograve", "\xf3-oacute", "\xf4-ocirc", "\xf5-otilde", "\xf6-ouml", "\xf7-divide", "\xf8-oslash", "\xf9-ugrave", "\xfa-uacute", "\xfb-ucirc", "\xfc-uuml", "\xfd-yacute", "\xfe-thorn", "\xff-yuml", "\u0152-OElig", "\u0153-oelig", "\u0160-Scaron", "\u0161-scaron", "\u0178-Yuml", "\u0192-fnof", "\u02c6-circ", "\u02dc-tilde", "\u0391-Alpha", "\u0392-Beta", "\u0393-Gamma", "\u0394-Delta", "\u0395-Epsilon", "\u0396-Zeta", "\u0397-Eta", "\u0398-Theta", "\u0399-Iota", "\u039a-Kappa", "\u039b-Lambda", "\u039c-Mu", "\u039d-Nu", "\u039e-Xi", "\u039f-Omicron", "\u03a0-Pi", "\u03a1-Rho", "\u03a3-Sigma", "\u03a4-Tau", "\u03a5-Upsilon", "\u03a6-Phi", "\u03a7-Chi", "\u03a8-Psi", "\u03a9-Omega", "\u03b1-alpha", "\u03b2-beta", "\u03b3-gamma", "\u03b4-delta", "\u03b5-epsilon", "\u03b6-zeta", "\u03b7-eta", "\u03b8-theta", "\u03b9-iota", "\u03ba-kappa", "\u03bb-lambda", "\u03bc-mu", "\u03bd-nu", "\u03be-xi", "\u03bf-omicron", "\u03c0-pi", "\u03c1-rho", "\u03c2-sigmaf", "\u03c3-sigma", "\u03c4-tau", "\u03c5-upsilon", "\u03c6-phi", "\u03c7-chi", "\u03c8-psi", "\u03c9-omega", "\u03d1-thetasym", "\u03d2-upsih", "\u03d6-piv", "\u2002-ensp", "\u2003-emsp", "\u2009-thinsp", "\u200c-zwnj", "\u200d-zwj", "\u200e-lrm", "\u200f-rlm", "\u2013-ndash", "\u2014-mdash", "\u2018-lsquo", "\u2019-rsquo", "\u201a-sbquo", "\u201c-ldquo", "\u201d-rdquo", "\u201e-bdquo", "\u2020-dagger", "\u2021-Dagger", "\u2022-bull", "\u2026-hellip", "\u2030-permil", "\u2032-prime", "\u2033-Prime", "\u2039-lsaquo", "\u203a-rsaquo", "\u203e-oline", "\u2044-frasl", "\u20ac-euro", "\u2111-image", "\u2118-weierp", "\u211c-real", "\u2122-trade", "\u2135-alefsym", "\u2190-larr", "\u2191-uarr", "\u2192-rarr", "\u2193-darr", "\u2194-harr", "\u21b5-crarr", "\u21d0-lArr", "\u21d1-uArr", "\u21d2-rArr", "\u21d3-dArr", "\u21d4-hArr", "\u2200-forall", "\u2202-part", "\u2203-exist", "\u2205-empty", "\u2207-nabla", "\u2208-isin", "\u2209-notin", "\u220b-ni", "\u220f-prod", "\u2211-sum", "\u2212-minus", "\u2217-lowast", "\u221a-radic", "\u221d-prop", "\u221e-infin", "\u2220-ang", "\u2227-and", "\u2228-or", "\u2229-cap", "\u222a-cup", "\u222b-int", "\u2234-there4", "\u223c-sim", "\u2245-cong", "\u2248-asymp", "\u2260-ne", "\u2261-equiv", "\u2264-le", "\u2265-ge", "\u2282-sub", "\u2283-sup", "\u2284-nsub", "\u2286-sube", "\u2287-supe", "\u2295-oplus", "\u2297-otimes", "\u22a5-perp", "\u22c5-sdot", "\u2308-lceil", "\u2309-rceil", "\u230a-lfloor", "\u230b-rfloor", "\u2329-lang", "\u232a-rang", "\u25ca-loz", "\u2660-spades", "\u2663-clubs", "\u2665-hearts", "\u2666-diams"]);
};

$asm05.System.Windows.Browser.ManagedObject.prototype._ctor = function (obj) {
	System.Windows.Browser.ScriptObject.prototype._ctor$1.call(this, obj);
	this._defaultEventHandlers = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.Delegate), "_ctor$0", []);
	this._info = $asm05.System.Windows.Browser.ManagedObjectInfo.GetInfo(JSIL.GetType(obj));
};
$asm05.System.Windows.Browser.ManagedObject.prototype.GetProperty = function (name) {
	return this.Invoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertyGet, name, JSIL.Array.New(System.Object, 0));
};
$asm05.System.Windows.Browser.ManagedObject.prototype.TryGetProperty = function (name, /* ref */ result) {
	var exception = new JSIL.Variable(null);
	result.value = this.TryInvoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertyGet, name, JSIL.Array.New(System.Object, 0), /* ref */ exception);
	return (exception.value === null);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.SetProperty = function (name, value) {
	this.Invoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertySet, name, [value]);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.TrySetProperty = function (name, value) {
	var result = new JSIL.Variable(null);
	this.TryInvoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertySet, name, [value], /* ref */ result);
	return result.value;
};
$asm05.System.Windows.Browser.ManagedObject.prototype.Invoke$0 = function (name, args) {
	return this.Invoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod, name, args);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.TryInvoke$0 = function (name, args, /* ref */ error) {
	return this.TryInvoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod, name, args, /* ref */ error);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.InvokeSelf = function (args) {
	return this.Invoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod, "Invoke$Default", args);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.TryInvokeSelf = function (args, /* ref */ error) {
	return this.TryInvoke$1(System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod, "Invoke$Default", args, /* ref */ error);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.ConvertTo = function (targetType, allowSerialization) {
	var type = (JSIL.GetType(System.Windows.Browser.ScriptObject.prototype.get_ManagedObject.call(this)));
	if (targetType.IsAssignableFrom(type)) {
		return System.Windows.Browser.ScriptObject.prototype.get_ManagedObject.call(this);
	}
	if (System.Windows.Browser.ScriptObject.IsAssignableFrom(targetType)) {
		return this;
	}
	throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptObject_ConvertToFailed", [targetType.FullName]), "targetType"]);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.Invoke$1 = function (invokeType, memberName, args) {
	var exception = new JSIL.Variable(null);
	var result = this.TryInvoke$1(invokeType, memberName, args, /* ref */ exception);
	if (exception.value === null) {
		return result;
	}
	try {
		throw exception.value;
	} catch ($exception) {
		var arg_13_0 = $exception;
		throw JSIL.New(System.InvalidOperationException, "_ctor$2", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["Invoke"]), arg_13_0]);
	}
};
$asm05.System.Windows.Browser.ManagedObject.prototype.TryInvoke$1 = function (invokeType, memberName, args, /* ref */ error) {
	try {
		var value = this._info.TryInvoke(
			this, 
			invokeType, 
			memberName, 
			args, 
			/* ref */ error
		);
		if (error.value !== null) {
			var result = null;
		} else {
			var scriptParam = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParam(value).MemberwiseClone();
			result = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParamAndDispose(scriptParam.MemberwiseClone());
		}
	} catch ($exception) {
		var arg_2B_0 = $exception;
		throw JSIL.New(System.InvalidOperationException, "_ctor$2", [System.String.Format(System.Globalization.CultureInfo.InvariantCulture, $asm05.System.Windows.Browser.Resx.GetString$2("Common_MethodFailed"), ["Invoke"]), arg_2B_0]);
	}
	return result;
};
$asm05.System.Windows.Browser.ManagedObject.GetOrCreateManagedObject = function (obj) {
	var obj2 = null, weakReference = new JSIL.Variable(null);
	System.Threading.Monitor.Enter((obj2 = $asm05.System.Windows.Browser.ManagedObject.s_managedObjects));
	try {
		if ($asm05.System.Windows.Browser.ManagedObject.s_managedObjects.TryGetValue(obj, /* ref */ weakReference)) {
			var managedObject = JSIL.Cast(weakReference.value.Target, $asm05.System.Windows.Browser.ManagedObject);
			if (managedObject === null) {
				managedObject = new $asm05.System.Windows.Browser.ManagedObject(obj);
				$asm05.System.Windows.Browser.ManagedObject.s_managedObjects.set_Item(obj, JSIL.New(System.WeakReference, "_ctor$1", [managedObject]));
			}
		} else {
			managedObject = new $asm05.System.Windows.Browser.ManagedObject(obj);
			$asm05.System.Windows.Browser.ManagedObject.s_managedObjects.Add(obj, JSIL.New(System.WeakReference, "_ctor$1", [managedObject]));
		}
	} finally {
		System.Threading.Monitor.Exit(obj2);
	}
	return managedObject;
};
$asm05.System.Windows.Browser.ManagedObject.prototype.GetObjectHandleAddRef = function () {
	if (System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this) === null) {
		this.CreateHandle();
		return System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle;
	}
	return System.Windows.Browser.ScriptObject.prototype.GetObjectHandleAddRef.call(this);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.CreateHandle = function () {
	var handle = new JSIL.Variable(0), s_objects = null;
	var value = System.Runtime.InteropServices.GCHandle.Alloc$0(this).MemberwiseClone();
	var pObjectHandle = System.Runtime.InteropServices.GCHandle.op_Explicit$1(value.MemberwiseClone());
	var hr = System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_CreateManagedObject(pObjectHandle, this._info.MemberNames.length, /* ref */ handle);
	if (!System.Windows.Hosting.NativeMethods.SUCCEEDED(hr)) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$0("Common_MethodFailed", ["CreateHandle"])]);
	}
	var identity = System.Windows.Browser.ScriptObject.GetIdentity(handle.value);
	System.Windows.Browser.ScriptObject.prototype.Initialize.call(this, handle.value, identity, false, false);
	System.Threading.Monitor.Enter((s_objects = System.Windows.Browser.ScriptObject.s_objects));
	try {
		System.Windows.Browser.ScriptObject.s_objects.Add(identity, JSIL.New(System.WeakReference, "_ctor$1", [this]));
	} finally {
		System.Threading.Monitor.Exit(s_objects);
	}
};
$asm05.System.Windows.Browser.ManagedObject.prototype.GetMemberInfo = function (memberIndex, /* ref */ memberID, /* ref */ memberType, /* ref */ memberName) {
	if (!((memberIndex >= 0) && (memberIndex < this._info.MemberNames.length))) {
		throw JSIL.New(System.ArgumentOutOfRangeException, "_ctor$1", ["memberIndex"]);
	}
	memberID.value = memberIndex;
	memberName.value = this._info.MemberNames[memberIndex];
	return this._info.GetMemberType(memberName.value, /* ref */ memberType);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.Invoke$2 = function (invokeType, memberID, args) {
	return this._info.Invoke(this, invokeType, this._info.MemberNames[memberID], args);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.GetDefaultEventHandler = function (eventName) {
	var result = new JSIL.Variable(null);
	this._defaultEventHandlers.TryGetValue(eventName, /* ref */ result);
	return result.value;
};
$asm05.System.Windows.Browser.ManagedObject.prototype.SetDefaultEventHandler = function (eventName, handler) {
	if (this._defaultEventHandlers.ContainsKey(eventName)) {
		this._defaultEventHandlers.set_Item(eventName, handler);
		return;
	}
	this._defaultEventHandlers.Add(eventName, handler);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.InternalDispose = function (finalizing) {
	var obj = null;
	if (finalizing) {
		System.Threading.Monitor.Enter((obj = $asm05.System.Windows.Browser.ManagedObject.s_managedObjects));
		try {
			$asm05.System.Windows.Browser.ManagedObject.s_managedObjects.Remove(System.Windows.Browser.ScriptObject.prototype.get_ManagedObject.call(this));
		} finally {
			System.Threading.Monitor.Exit(obj);
		}
	}
	System.Windows.Browser.ScriptObject.prototype.InternalDispose.call(this, finalizing);
};
$asm05.System.Windows.Browser.ManagedObject.prototype.INativePeer_Disconnect = function () {
	this.InternalDispose(false);
};
$asm05.System.Windows.Browser.ManagedObject.CopyValueType = function (value) {
	var methodInfo = $asm05.System.Windows.Browser.ManagedObject._valueTypeCopier.MakeGenericMethod(JSIL.Array.New(System.Type, [JSIL.GetType(value)]));
	return methodInfo.Invoke$1(null, [value]);
};
$asm05.System.Windows.Browser.ManagedObject.Copy$b1 = JSIL.GenericMethod(
	["T"], 
	function (T, value) {
		return value;
	}
);
JSIL.OverloadedMethod($asm05.System.Windows.Browser.ManagedObject.prototype, "Invoke", [
		["Invoke$0", [System.String, System.Array.Of(System.Object)]], 
		["Invoke$1", [System.Windows.Hosting.NativeMethods.InvokeType, System.String, System.Array.Of(System.Object)]], 
		["Invoke$2", [System.Windows.Hosting.NativeMethods.InvokeType, System.Int32, System.Array.Of(System.Windows.Hosting.NativeMethods.ScriptParam)]]
	]);
JSIL.OverloadedMethod($asm05.System.Windows.Browser.ManagedObject.prototype, "TryInvoke", [
		["TryInvoke$0", [System.String, System.Array.Of(System.Object), JSIL.Reference.Of(System.Exception)]], 
		["TryInvoke$1", [System.Windows.Hosting.NativeMethods.InvokeType, System.String, System.Array.Of(System.Object), JSIL.Reference.Of(System.Exception)]]
	]);
$asm05.System.Windows.Browser.ManagedObject.s_managedObjects = null;
$asm05.System.Windows.Browser.ManagedObject._valueTypeCopier = null;
$asm05.System.Windows.Browser.ManagedObject.prototype._info = null;
$asm05.System.Windows.Browser.ManagedObject.prototype._defaultEventHandlers = null;
$asm05.System.Windows.Browser.ManagedObject._cctor = function () {
	$asm05.System.Windows.Browser.ManagedObject.s_managedObjects = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.Object, System.WeakReference), "_ctor$0", []);
	$asm05.System.Windows.Browser.ManagedObject._valueTypeCopier = $asm05.System.Windows.Browser.ManagedObject.GetMethod$4("Copy", (System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Static));
};

$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.get_MemberNames = function () {
	return this._memberNames;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype._ctor = function (instanceType) {
	System.Object.prototype._ctor.call(this);
	this._type = instanceType;
	this._members = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, $asm05.System.Windows.Browser.ManagedObjectInfo.IScriptMember), "_ctor$0", []);
	this.InitializeMembers();
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.Finalize = function () {
	var obj = null;
	try {
		System.Threading.Monitor.Enter((obj = $asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes));
		try {
			$asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes.Remove(this._type);
		} finally {
			System.Threading.Monitor.Exit(obj);
		}
	} finally {
		System.Object.prototype.Finalize.call(this);
	}
};
$asm05.System.Windows.Browser.ManagedObjectInfo.GetInfo = function (type) {
	var obj = null, weakReference = new JSIL.Variable(null);
	System.Threading.Monitor.Enter((obj = $asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes));
	try {
		if ($asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes.TryGetValue(type, /* ref */ weakReference)) {
			var managedObjectInfo = JSIL.Cast(weakReference.value.Target, $asm05.System.Windows.Browser.ManagedObjectInfo);
			if (managedObjectInfo === null) {
				managedObjectInfo = new $asm05.System.Windows.Browser.ManagedObjectInfo(type);
				$asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes.set_Item(type, JSIL.New(System.WeakReference, "_ctor$1", [managedObjectInfo]));
			}
		} else {
			managedObjectInfo = new $asm05.System.Windows.Browser.ManagedObjectInfo(type);
			$asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes.Add(type, JSIL.New(System.WeakReference, "_ctor$1", [managedObjectInfo]));
		}
	} finally {
		System.Threading.Monitor.Exit(obj);
	}
	return managedObjectInfo;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.InitializeMembers = function () {
	if (System.Delegate.IsAssignableFrom(this._type)) {
		this.MapDelegateMembers();
	} else {
		if (System.Collections.IList.IsAssignableFrom(this._type)) {
			this.MapListMembers();
		} else if (System.Collections.IDictionary.IsAssignableFrom(this._type)) {
		__loop0__: 
			for (var type = this._type; (type !== null) && (this._members.Count === 0); type = type.BaseType) {
				var interfaces = type.GetInterfaces();
			__loop1__: 
				for (var i = 0; i < interfaces.length; ++i) {
					var type2 = interfaces[i];
					if (!(!type2.IsGenericType || 
							(System.Collections.Generic.IDictionary$b2 !== type2.GetGenericTypeDefinition()) || (type2.GetGenericArguments()[0] !== System.String))) {
						this.MapDictionaryMembers(type2);
						break __loop1__;
					}
				}
			}
		}
		this.MapScriptableMembers();
	}
	this.MapMember("toString", System.Object.GetMethod$5("ToString"));
	this._memberNames = JSIL.Array.New(System.String, this._members.Count);
	var num = 0;
	var enumerator = JSIL.Cast(this._members.Keys, System.Collections.Generic.Dictionary$b2.KeyCollection.Of(System.String, $asm05.System.Windows.Browser.ManagedObjectInfo.IScriptMember)).GetEnumerator().MemberwiseClone();
	try {
	__loop2__: 
		while (enumerator.MoveNext()) {
			var current = enumerator.Current;
			this._memberNames[num++] = current;
		}
	} finally {
		enumerator.IDisposable_Dispose();
	}
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.MapScriptableMembers = function () {
	var createObjectMember = new $asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember();
	var dictionary = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.Reflection.EventInfo), "_ctor$0", []);
	var dictionary2 = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.Reflection.MemberInfo, System.Boolean), "_ctor$0", []);
	var members = this._type.GetMembers$1((System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public));
__loop0__: 
	for (var i = 0; i < members.length; ++i) {
		var memberInfo = members[i];
		var array = JSIL.Cast(memberInfo.GetCustomAttributes$1(System.Windows.Browser.ScriptableMemberAttribute, true), System.Array.Of(System.Windows.Browser.ScriptableMemberAttribute));
		if (array.length > 0) {
			var text = array[0].ScriptAlias;
			if (text === null) {
				text = memberInfo.Name;
			}
			if (array[0].EnableCreateableTypes) {
				createObjectMember.AddCreateableTypesFromMember(memberInfo);
			}
			$asm05.System.Windows.Browser.ManagedObjectInfo.ValidateScriptAlias(text);
			this.MapMember(text, memberInfo);
			dictionary2.set_Item(memberInfo, true);
			if (memberInfo.MemberType === System.Reflection.MemberTypes.Event) {
				dictionary.Add(text, JSIL.Cast(memberInfo, System.Reflection.EventInfo));
			}
		}
	}
	var type = this._type;
__loop1__: 
	while (type) {
		var array2 = JSIL.Cast(type.GetCustomAttributes$1(System.Windows.Browser.ScriptableTypeAttribute, false), System.Array.Of(System.Windows.Browser.ScriptableTypeAttribute));
		if (array2.length > 0) {
			var members2 = type.GetMembers$1((System.Reflection.BindingFlags.DeclaredOnly | System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public));
		__loop2__: 
			for (var j = 0; j < members2.length; ++j) {
				var memberInfo2 = members2[j];
				if (!dictionary2.ContainsKey(memberInfo2)) {
					this.MapMember(memberInfo2.Name, memberInfo2);
					if (memberInfo2.MemberType === System.Reflection.MemberTypes.Event) {
						dictionary.Add(memberInfo2.Name, JSIL.Cast(memberInfo2, System.Reflection.EventInfo));
					}
					createObjectMember.AddCreateableTypesFromMember(memberInfo2);
				}
			}
		}
		type = type.BaseType;
	}
	if (dictionary.Count > 0) {
		this.MapEventListenerMembers(dictionary);
	}
	if (createObjectMember.HasCreatableTypes) {
		createObjectMember.MapCreateableTypes();
		this._members.Add("createManagedObject", createObjectMember);
	}
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.MapDelegateMembers = function () {
	this._members.Add("Invoke$Default", new $asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate(this._type));
	this._members.Add("apply", new $asm05.System.Windows.Browser.ManagedObjectInfo.ApplyMember());
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.MapDictionaryMembers = function (dictionaryType) {
	this.MapDynamicMember(new $asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember(dictionaryType));
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.MapListMembers = function () {
	var type = null;
	if (this._type.IsArray) {
		type = this._type.GetElementType();
	} else {
	__loop0__: 
		for (var type2 = this._type; (type2 !== null) && (type === null); type2 = type2.BaseType) {
			var interfaces = type2.GetInterfaces();
		__loop1__: 
			for (var i = 0; i < interfaces.length; ++i) {
				var type3 = interfaces[i];
				if (!(!type3.IsGenericType || (System.Collections.Generic.IList$b1 !== type3.GetGenericTypeDefinition()))) {
					type = type3.GetGenericArguments()[0];
					break __loop1__;
				}
			}
		}
	}
	if (type === null) {
		type = System.Object;
	}
	this.MapDynamicMember(new $asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember(type));
	this.MapMember("length", System.Collections.ICollection.GetProperty$6("Count"));
	this._members.Add("reverse", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListReverseMember());
	this._members.Add("indexOf", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember(type, false));
	this._members.Add("lastIndexOf", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember(type, true));
	var method = this._type.GetMethod$5("ToArray");
	if (method !== null) {
		this.MapMember("toArray", method);
	}
	this._members.Add("pop", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember(false));
	this._members.Add("shift", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember(true));
	this._members.Add("push", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember(type, false));
	this._members.Add("unshift", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember(type, true));
	this._members.Add("splice", new $asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember(type));
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.MapEventListenerMembers = function (events) {
	this._members.Add("addEventListener", new $asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember(events, true));
	this._members.Add("removeEventListener", new $asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember(events, false));
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.MapDynamicMember = function (member) {
	this._hasDynamicMember = true;
	this._members.Add("Get$Set", member);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.MapMember = function (scriptAlias, member) {
	var memberType = member.MemberType;
	if (memberType !== System.Reflection.MemberTypes.Event) {
		if (memberType !== System.Reflection.MemberTypes.Method) {
			if (memberType !== System.Reflection.MemberTypes.Property) {
				return;
			}
			var scriptMember = new $asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty(JSIL.Cast(member, System.Reflection.PropertyInfo));
		} else {
			scriptMember = new $asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod(JSIL.Cast(member, System.Reflection.MethodInfo));
		}
	} else {
		scriptMember = new $asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent(JSIL.Cast(member, System.Reflection.EventInfo));
	}
	if (this._members.ContainsKey(scriptAlias)) {
		var scriptMemberGroup = JSIL.TryCast(this._members.get_Item(scriptAlias), $asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup);
		if (scriptMemberGroup === null) {
			scriptMemberGroup = new $asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup(this._members.get_Item(scriptAlias));
			this._members.set_Item(scriptAlias, scriptMemberGroup);
		}
		scriptMemberGroup.AddMember(scriptMember);
		return;
	}
	this._members.Add(scriptAlias, scriptMember);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ValidateScriptAlias = function (scriptAlias) {
	if (!(!scriptAlias.Equals$2("addEventListener", System.StringComparison.Ordinal) && 
			!scriptAlias.Equals$2("removeEventListener", System.StringComparison.Ordinal) && 
			!scriptAlias.Equals$2("createManagedObject", System.StringComparison.Ordinal) && !scriptAlias.Equals$2("constructor", System.StringComparison.Ordinal))) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$0("ManagedObjectInfo_ReservedMemberName", [scriptAlias])]);
	}
	System.Windows.Browser.ScriptObject.ValidateIdentifier(scriptAlias, "scriptAlias");
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.GetMemberType = function (memberName, /* ref */ memberType) {
	var scriptMember = new JSIL.Variable(null);
	if (this._members.TryGetValue(memberName, /* ref */ scriptMember)) {
		memberType.value = scriptMember.value.IScriptMember_MemberType;
		return true;
	}
	memberType.value = 0;
	return false;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.Invoke = function (obj, invokeType, memberName, args) {
	var scriptMember = new JSIL.Variable(null);
	if (this._members.TryGetValue(memberName, /* ref */ scriptMember)) {
		try {
			return scriptMember.value.IScriptMember_Invoke(obj, invokeType, args);
		} catch ($exception) {
			if (JSIL.CheckType($exception, System.Reflection.TargetInvocationException)) {
				var arg_1D_0 = $exception;
				throw arg_1D_0.InnerException;
			} else {
				throw $exception;
			}
		}
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_NoMethodFound")]);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.TryInvoke = function (obj, invokeType, memberName, args, /* ref */ error) {
	var array = null;
	var scriptMember = new JSIL.Variable(null);
	if (!this._members.TryGetValue(memberName, /* ref */ scriptMember)) {
		if (!(this._hasDynamicMember && this._members.TryGetValue("Get$Set", /* ref */ scriptMember))) {
			error.value = JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_NoMethodFound")]);
			return null;
		}
		if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertyGet) {
			var array2 = JSIL.Array.New(System.Object, 2);
			array2[0] = memberName;
			args = array2;
		} else if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertySet) {
			args = [memberName, args[0]];
		}
	}
	array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParams(args);
	try {
		try {
			error.value = null;
			var result = scriptMember.value.IScriptMember_Invoke(obj, invokeType, array);
		} catch ($exception) {
			if (JSIL.CheckType($exception, System.Reflection.TargetInvocationException)) {
				var arg_90_0 = $exception;
				throw arg_90_0.InnerException;
			} else {
				throw $exception;
			}
		}
	} finally {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParams(array);
	}
	return result;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.prototype, "MemberNames", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.prototype.get_MemberNames, null);
Object.defineProperty($asm05.System.Windows.Browser.ManagedObjectInfo, "DefaultMethodName", {
		"value": "Invoke$Default"}
);
Object.defineProperty($asm05.System.Windows.Browser.ManagedObjectInfo, "DynamicMemberName", {
		"value": "Get$Set"}
);
$asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype._type = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype._members = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype._memberNames = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.prototype._hasDynamicMember = false;
$asm05.System.Windows.Browser.ManagedObjectInfo._cctor = function () {
	$asm05.System.Windows.Browser.ManagedObjectInfo.s_managedObjectTypes = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.Type, System.WeakReference), "_ctor$0", []);
};

$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Property;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype._ctor = function (propertyInfo) {
	System.Object.prototype._ctor.call(this);
	if (propertyInfo.CanRead) {
		this._getMethod = propertyInfo.GetGetMethod$1();
		if (System.Delegate.IsAssignableFrom(propertyInfo.PropertyType)) {
			this._invokeMethod = propertyInfo.PropertyType.GetMethod$5("Invoke");
		}
	}
	if (propertyInfo.CanWrite) {
		this._setMethod = propertyInfo.GetSetMethod$1();
	}
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertyGet) {
		if (this._getMethod === null) {
			throw JSIL.New(System.InvalidOperationException, "_ctor$0", []);
		}
		return this._getMethod.Invoke$1(obj.ManagedObject, null);
	} else if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertySet) {
		if (this._setMethod === null) {
			throw JSIL.New(System.InvalidOperationException, "_ctor$0", []);
		}
		var parameters = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$0(this._setMethod.GetParameters(), args);
		return this._setMethod.Invoke$1(obj.ManagedObject, parameters);
	} else {
		if (this._invokeMethod !== null) {
			var parameters2 = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$0(this._invokeMethod.GetParameters(), args);
			var obj2 = JSIL.Cast(this._getMethod.Invoke$1(obj.ManagedObject, null), System.Delegate);
			return this._invokeMethod.Invoke$1(obj2, parameters2);
		}
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype._getMethod = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype._setMethod = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty.prototype._invokeMethod = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod.prototype._ctor = function (methodInfo) {
	System.Object.prototype._ctor.call(this);
	this._methodInfo = methodInfo;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var parameters = this._methodInfo.GetParameters();
	var parameters2 = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$0(parameters, args);
	return this._methodInfo.Invoke$1(obj.ManagedObject, parameters2);
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod.prototype._methodInfo = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate.prototype._ctor = function (delegateType) {
	System.Object.prototype._ctor.call(this);
	this._parameters = (delegateType.GetMethod$5("Invoke")).GetParameters();
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var args2 = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$0(this._parameters, args);
	return obj.ManagedObject.DynamicInvoke(args2);
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate.prototype._parameters = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup.prototype._ctor = function (member) {
	System.Object.prototype._ctor.call(this);
	this._members = new (System.Collections.Generic.List$b1.Of($asm05.System.Windows.Browser.ManagedObjectInfo.IScriptMember)) ();
	this._members.Add(member);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup.prototype.AddMember = function (member) {
	this._members.Add(member);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup.prototype.Invoke = function (obj, invokeType, args) {
	var enumerator = (this._members.GetEnumerator());
	try {
	__loop0__: 
		while (enumerator.MoveNext()) {
			var current = enumerator.Current;
			if ($asm05.System.Windows.Hosting.ScriptingInterface.IsCompatibleWithArgs(current, invokeType, args)) {
				return current.IScriptMember_Invoke(obj, invokeType, args);
			}
		}
	} finally {
		enumerator.IDisposable_Dispose();
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_NoMethodFound")]);
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup.prototype._members = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Property;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent.prototype._ctor = function (eventInfo) {
	System.Object.prototype._ctor.call(this);
	this._eventInfo = eventInfo;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertyGet) {
		return obj.GetDefaultEventHandler(this._eventInfo.Name);
	}
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertySet) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	if (!((args[0].type === System.Windows.Hosting.NativeMethods.ScriptParamType.ObjectParam) || (args[0].type === 0))) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidArgument"), "args"]);
	}
	var scriptObject = JSIL.Cast($asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [System.Windows.Browser.ScriptObject]), args)[0], System.Windows.Browser.ScriptObject);
	var delegate = obj.GetDefaultEventHandler(this._eventInfo.Name);
	if (delegate !== null) {
		this._eventInfo.RemoveEventHandler(obj.ManagedObject, delegate);
	}
	if (scriptObject !== null) {
		delegate = $asm05.System.Windows.Hosting.ScriptingInterface.GetDelegateForScriptObject(this._eventInfo.EventHandlerType, scriptObject);
		this._eventInfo.AddEventHandler(obj.ManagedObject, delegate);
		obj.SetDefaultEventHandler(this._eventInfo.Name, delegate);
	} else {
		obj.SetDefaultEventHandler(this._eventInfo.Name, null);
	}
	return null;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent.prototype._eventInfo = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.get_HasCreatableTypes = function () {
	return ((this._createableTypes === null) || (this._createableTypes.Count > 0));
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype._ctor = function () {
	System.Object.prototype._ctor.call(this);
	this._createableTypes = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.Type, System.Boolean), "_ctor$0", []);
	this._createManagedObjectMap = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.Type), "_ctor$2", [System.StringComparer.OrdinalIgnoreCase]);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	if (!((args.length !== 0) && (args.length <= 2))) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ScriptingInterface_InvalidArgs"), "args"]);
	}
	if (args.length > 0) {
		var scriptAlias = JSIL.Cast($asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [System.String]), args)[0], System.String);
		if (args.length === 1) {
			return this.CreateManagedObject$0(scriptAlias);
		}
		if (args.length === 2) {
			var obj2 = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParam(args[1].MemberwiseClone());
			var scriptObject = JSIL.TryCast(obj2, System.Windows.Browser.ScriptObject);
			if (scriptObject !== null) {
				return this.CreateManagedObject$1(scriptAlias, scriptObject);
			}
			return this.CreateManagedObject$2(scriptAlias, System.Convert.ToInt32$1(obj2, System.Globalization.CultureInfo.InvariantCulture));
		}
	}
	return null;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.CreateManagedObject$0 = function (scriptAlias) {
	return this.CreateManagedObject$1(scriptAlias, null);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.CreateManagedObject$1 = function (scriptAlias, sourceObject) {
	var type = new JSIL.Variable(null);
	scriptAlias = $asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.NormalizeScriptAlias(scriptAlias);
	if (!this._createManagedObjectMap.TryGetValue(scriptAlias, /* ref */ type)) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ManagedServices_NoSuchAlias"), [scriptAlias]), "scriptAlias"]);
	}
	return $asm05.System.Windows.Browser.ManagedServices.Current.CreateObjectInternal(type.value, sourceObject);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.CreateManagedObject$2 = function (scriptAlias, capacity) {
	var type = new JSIL.Variable(null);
	scriptAlias = $asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.NormalizeScriptAlias(scriptAlias);
	if (!this._createManagedObjectMap.TryGetValue(scriptAlias, /* ref */ type)) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ManagedServices_NoSuchAlias"), [scriptAlias]), "scriptAlias"]);
	}
	if (type.value.IsArray) {
		return JSIL.Array.New(type.value.GetElementType(), capacity);
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ManagedServices_ExpectedArrayType"), [scriptAlias])]);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.AddCreateableTypesFromMember = function (member) {
	var memberType = member.MemberType;
	if (memberType === System.Reflection.MemberTypes.Method) {
		var methodInfo = JSIL.Cast(member, System.Reflection.MethodInfo);
		this.AddCreateableType(methodInfo.ReturnType);
		var parameters = methodInfo.GetParameters();
	__loop0__: 
		for (var i = 0; i < parameters.length; ++i) {
			this.AddCreateableType(parameters[i].ParameterType);
		}
		return;
	}
	if (memberType !== System.Reflection.MemberTypes.Property) {
		return;
	}
	var propertyType = JSIL.Cast(member, System.Reflection.PropertyInfo).PropertyType;
	this.AddCreateableType(propertyType);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.MapCreateableTypes = function () {
	if (this._createableTypes !== null) {
		var dictionary = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.Collections.Generic.List$b1.Of(System.Type)), "_ctor$0", []);
		var enumerator = JSIL.Cast(this._createableTypes.Keys, System.Collections.Generic.Dictionary$b2.KeyCollection.Of(System.Type, System.Boolean)).GetEnumerator().MemberwiseClone();
		try {
		__loop0__: 
			while (enumerator.MoveNext()) {
				var current = enumerator.Current;
				var key = $asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.GenerateScriptAlias(current);
				if (!dictionary.TryGetValue(key, /* ref */ list)) {
					var list = new JSIL.Variable(new (System.Collections.Generic.List$b1.Of(System.Type)) ());
					dictionary.Add(key, list.value);
				}
				list.value.Add(current);
			}
		} finally {
			enumerator.IDisposable_Dispose();
		}
		var enumerator2 = dictionary.GetEnumerator().MemberwiseClone();
		try {
		__loop1__: 
			while (enumerator2.MoveNext()) {
				var current2 = JSIL.Cast(enumerator2.Current.MemberwiseClone(), System.Collections.Generic.KeyValuePair$b2.Of(System.String, System.Collections.Generic.List$b1.Of(System.Type))).MemberwiseClone();
				if (current2.Value.Count === 1) {
					this._createManagedObjectMap.set_Item(current2.Key, current2.Value.get_Item(0));
				}
			}
		} finally {
			enumerator2.IDisposable_Dispose();
		}
		this._createableTypes = null;
	}
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.AddCreateableType = function (type) {
	if (!(this._createableTypes.ContainsKey(type) || !$asm05.System.Windows.Browser.ManagedServices.IsValidCreateableType(type))) {
		this._createableTypes.set_Item(type, true);
		if (type.IsGenericType) {
			var genericArguments = type.GetGenericArguments();
		__loop0__: 
			for (var i = 0; i < genericArguments.length; ++i) {
				this.AddCreateableType(genericArguments[i]);
			}
			return;
		}
		if (type.IsArray) {
			this.AddCreateableType(type.GetElementType());
		}
	}
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.GenerateScriptAlias = function (type) {
	if (type.IsGenericType) {
		var text = type.Name.Substring$1(0, type.Name.IndexOf$0("`"));
		text = ((text + "<"));
		var genericArguments = type.GetGenericArguments();
	__loop0__: 
		for (var i = 0; i < genericArguments.length; ++i) {
			if (i === 0) {
				text = ((text + $asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.GenerateScriptAlias(genericArguments[i])));
			} else {
				text = ((text + "," + $asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.GenerateScriptAlias(genericArguments[i])));
			}
		}
		text = ((text + ">"));
		return text;
	}
	if (type.IsArray) {
		return ($asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.GenerateScriptAlias(type.GetElementType()) + "[]");
	}
	if (type.IsPrimitive) {
		if (type === System.Int32) {
			return "int";
		}
		if (type === System.Boolean) {
			return "bool";
		}
		if (type === System.Int64) {
			return "long";
		}
		if (type === System.Int16) {
			return "short";
		}
		if (type === System.Single) {
			return "float";
		}
		if (type === System.UInt32) {
			return "uint";
		}
		if (type === System.UInt64) {
			return "ulong";
		}
		if (type === System.UInt16) {
			return "ushort";
		}
	}
	return type.Name;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.NormalizeScriptAlias = function (scriptAlias) {
	return scriptAlias.Replace$1(" ", "");
};
JSIL.OverloadedMethod($asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype, "CreateManagedObject", [
		["CreateManagedObject$0", [System.String]], 
		["CreateManagedObject$1", [System.String, System.Windows.Browser.ScriptObject]], 
		["CreateManagedObject$2", [System.String, System.Int32]]
	]);
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype, "HasCreatableTypes", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.get_HasCreatableTypes, null);
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype._createableTypes = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember.prototype._createManagedObjectMap = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember.prototype._ctor = function (events, isAddMethod) {
	System.Object.prototype._ctor.call(this);
	this._events = events;
	this._isAddMethod = isAddMethod;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember.prototype.Invoke = function (obj, invokeType, args) {
	var eventInfo = new JSIL.Variable(null);
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [System.String, System.Windows.Browser.ScriptObject]), args);
	var key = JSIL.Cast(array[0], System.String);
	var obj2 = JSIL.Cast(array[1], System.Windows.Browser.ScriptObject);
	if (this._events.TryGetValue(key, /* ref */ eventInfo)) {
		var delegateForScriptObject = $asm05.System.Windows.Hosting.ScriptingInterface.GetDelegateForScriptObject(eventInfo.value.EventHandlerType, obj2);
		if (this._isAddMethod) {
			eventInfo.value.AddEventHandler(obj.ManagedObject, delegateForScriptObject);
		} else {
			eventInfo.value.RemoveEventHandler(obj.ManagedObject, delegateForScriptObject);
		}
	}
	return null;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember.prototype._events = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember.prototype._isAddMethod = false;

$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.DynamicProperty;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype._ctor = function (dictionaryType) {
	System.Object.prototype._ctor.call(this);
	this._addMethod = dictionaryType.GetMethod$5("Add");
	this._setMethod = dictionaryType.GetMethod$5("set_Item");
	this._containsKeyMethod = dictionaryType.GetMethod$5("ContainsKey");
	this._tryGetValueMethod = dictionaryType.GetMethod$5("TryGetValue");
	this._valueType = dictionaryType.GetGenericArguments()[1];
};
$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [System.String, this._valueType]), args);
	var text = JSIL.Cast(array[0], System.String);
	var array2 = JSIL.Array.New(System.Object, 2);
	array2[0] = text;
	var array3 = array2;
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertySet) {
		this._tryGetValueMethod.Invoke$1(obj.ManagedObject, array3);
		return array3[1];
	}
	array3[1] = array[1];
	if (JSIL.Cast(this._containsKeyMethod.Invoke$1(obj.ManagedObject, [text]), System.Boolean)) {
		return this._setMethod.Invoke$1(obj.ManagedObject, array3);
	}
	return this._addMethod.Invoke$1(obj.ManagedObject, array3);
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype._addMethod = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype._setMethod = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype._containsKeyMethod = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype._tryGetValueMethod = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember.prototype._valueType = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.DynamicProperty;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember.prototype._ctor = function (indexerReturnType) {
	System.Object.prototype._ctor.call(this);
	this._returnType = indexerReturnType;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [System.Int32, this._returnType]), args);
	var list = JSIL.Cast(obj.ManagedObject, System.Collections.IList);
	if (invokeType === System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberPropertySet) {
		list.IList_set_Item(JSIL.Cast(array[0], System.Int32), array[1]);
		return null;
	}
	return list.IList_get_Item(JSIL.Cast(array[0], System.Int32));
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember.prototype._returnType = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember.prototype._ctor = function (isShift) {
	System.Object.prototype._ctor.call(this);
	this._isShift = isShift;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var list = JSIL.Cast(obj.ManagedObject, System.Collections.IList);
	var result = null;
	var num = list.ICollection_Count;
	if (num > 0) {
		if (this._isShift) {
			num = 0;
		} else {
			--num;
		}
		result = list.IList_get_Item(num);
		list.IList_RemoveAt(num);
	}
	return result;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember.prototype._isShift = false;

$asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember.prototype._ctor = function (elementType, isUnshift) {
	System.Object.prototype._ctor.call(this);
	this._isUnshift = isUnshift;
	this._elementType = elementType;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	if (args.length > 0) {
		var list = JSIL.Cast(obj.ManagedObject, System.Collections.IList);
		var array = JSIL.Array.New(System.Type, args.length);
	__loop0__: 
		for (var i = 0; i < args.length; ++i) {
			array[i] = this._elementType;
		}
		var array2 = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(array, args);
		if (this._isUnshift) {
		__loop2__: 
			for (var j = (array2.length - 1); j >= 0; --j) {
				list.IList_Insert(0, array2[j]);
			}
		} else {
			var array3 = array2;
		__loop1__: 
			for (var k = 0; k < array3.length; ++k) {
				list.IList_Add(array3[k]);
			}
		}
	}
	return null;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember.prototype._isUnshift = false;
$asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember.prototype._elementType = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember.prototype._ctor = function (elementType, searchFromEnd) {
	System.Object.prototype._ctor.call(this);
	this._elementType = elementType;
	this._searchFromEnd = searchFromEnd;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var list = JSIL.Cast(obj.ManagedObject, System.Collections.IList);
	if (args.length === 1) {
		var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [this._elementType]), args);
		var obj2 = array[0];
		var num = this._searchFromEnd ? (list.ICollection_Count - 1) : 0;
	} else {
		if (args.length !== 2) {
			throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ScriptingInterface_InvalidArgs"), "args"]);
		}
		array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [this._elementType, System.Int32]), args);
		obj2 = array[0];
		num = JSIL.Cast(array[1], System.Int32);
	}
	if (this._searchFromEnd) {
	__loop1__: 
		for (var i = num; i >= 0; --i) {
			if (obj2.Equals(list.IList_get_Item(i))) {
				return i;
			}
		}
	} else {
	__loop0__: 
		for (var j = num; j < list.ICollection_Count; ++j) {
			if (obj2.Equals(list.IList_get_Item(j))) {
				return j;
			}
		}
	}
	return -1;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember.prototype._elementType = null;
$asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember.prototype._searchFromEnd = false;

$asm05.System.Windows.Browser.ManagedObjectInfo.ListReverseMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListReverseMember.prototype._ctor = function () {
	System.Object.prototype._ctor.call(this);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListReverseMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var list = JSIL.Cast(obj.ManagedObject, System.Collections.IList);
	var num = Math.floor(list.ICollection_Count / 2);
__loop0__: 
	for (var i = 0; i < num; ++i) {
		var value = list.IList_get_Item(i);
		list.IList_set_Item(i, list.IList_get_Item(((list.ICollection_Count - 1) - i)));
		list.IList_set_Item(((list.ICollection_Count - 1) - i), value);
	}
	return null;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ListReverseMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ListReverseMember.prototype.get_MemberType, null);

$asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember.prototype._ctor = function (elementType) {
	System.Object.prototype._ctor.call(this);
	this._elementType = elementType;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var list = JSIL.Cast(obj.ManagedObject, System.Collections.IList);
	var num = 0;
	var num2 = 0;
	if (args.length === 0) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidArgument"), "args"]);
	}
	var list2 = JSIL.Cast(System.Activator.CreateInstance$3(System.Collections.Generic.List$b1.MakeGenericType(JSIL.Array.New(System.Type, [this._elementType]))), System.Collections.IList);
	if (args.length === 1) {
		var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [System.Int32]), args);
		num = JSIL.Cast(array[0], System.Int32);
		num2 = (list.ICollection_Count - num);
	} else {
		var array2 = JSIL.Array.New(System.Type, args.length);
		array2[0] = (array2[1] = System.Int32);
	__loop0__: 
		for (var i = 2; i < args.length; ++i) {
			array2[i] = this._elementType;
		}
		array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(array2, args);
		num = JSIL.Cast(array[0], System.Int32);
		num2 = JSIL.Cast(array[1], System.Int32);
	}
__loop1__: 
	for (var j = 0; j < num2; ++j) {
		var value = list.IList_get_Item(num);
		list2.IList_Add(value);
		list.IList_RemoveAt(num);
	}
__loop2__: 
	for (var k = 2; k < array.length; ++k) {
		list.IList_Insert(num++, array[k]);
	}
	return list2;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember.prototype.get_MemberType, null);
$asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember.prototype._elementType = null;

$asm05.System.Windows.Browser.ManagedObjectInfo.ApplyMember.prototype.get_MemberType = function () {
	return System.Windows.Hosting.NativeMethods.MemberTypes.Method;
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ApplyMember.prototype._ctor = function () {
	System.Object.prototype._ctor.call(this);
};
$asm05.System.Windows.Browser.ManagedObjectInfo.ApplyMember.prototype.Invoke = function (obj, invokeType, args) {
	if (invokeType !== System.Windows.Hosting.NativeMethods.InvokeType.InvokeMemberMethod) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedObjectInfo_InvalidInvokeType"), "invokeType"]);
	}
	var array = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1(JSIL.Array.New(System.Type, [System.Object, System.Windows.Browser.ScriptObject]), args);
	var scriptObject = JSIL.Cast(array[1], System.Windows.Browser.ScriptObject);
	var num = System.Convert.ToInt32$0(scriptObject.GetProperty$1("length"));
	var array2 = JSIL.Array.New(System.Object, num);
__loop0__: 
	for (var i = 0; i < num; ++i) {
		array2[i] = scriptObject.GetProperty$0(i);
	}
	var delegate = JSIL.Cast(obj.ManagedObject, System.Delegate);
	return delegate.DynamicInvoke(array2);
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedObjectInfo.ApplyMember.prototype, "MemberType", 
	$asm05.System.Windows.Browser.ManagedObjectInfo.ApplyMember.prototype.get_MemberType, null);

$asm05.System.Windows.Browser.ManagedServices.prototype.get_JsSerializer = function () {
	if (this._jsSerializer === null) {
		this._jsSerializer = JSIL.Cast(System.Windows.Browser.HtmlPage.Window.Eval("new function() {\r\n    var _serverTypeFieldName = '__type';\r\n\r\n    var _stringRegEx = new RegExp('[\"\\\\b\\\\f\\\\n\\\\r\\\\t\\\\\\\\\\\\x00-\\\\x1F]', 'i');\r\n    var _dateRegEx = new RegExp('(^|[^\\\\\\\\])\\\\\"\\\\\\\\/Date\\\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\\\+|-)[0-9]{4})?\\\\)\\\\\\\\/\\\\\"', 'g');\r\n    var _jsonRegEx = new RegExp('[^,:{}\\\\[\\\\]0-9.\\\\-+Eaeflnr-u \\\\n\\\\r\\\\t]', 'g');\r\n    var _jsonStringRegEx = new RegExp('\"(\\\\\\\\.|[^\"\\\\\\\\])*\"', 'g');\r\n\r\n    this._serializeBooleanWithBuilder = function(object, stringBuilder) {\r\n        stringBuilder.push(object.toString());\r\n    }\r\n\r\n    this._serializeNumberWithBuilder = function(object, stringBuilder) {\r\n        if (isFinite(object)) {\r\n            stringBuilder.push(String(object));\r\n        }\r\n        else {\r\n            throw 'cannotSerializeNonFiniteNumbers';\r\n        }\r\n    }\r\n\r\n    this._serializeStringWithBuilder = function(object, stringBuilder) {\r\n        stringBuilder.push('\"');\r\n        if (_stringRegEx.test(object)) {\r\n            var length = object.length;\r\n            for (i = 0; i < length; ++i) {\r\n                var curChar = object.charAt(i);\r\n                if (curChar >= ' ') {\r\n                    if (curChar === '\\\\' || curChar === '\"') {\r\n                        stringBuilder.push('\\\\');\r\n                    }\r\n                    stringBuilder.push(curChar);\r\n                }\r\n                else {\r\n                    switch (curChar) {\r\n                        case '\\b':\r\n                            stringBuilder.push('\\\\b');\r\n                            break;\r\n                        case '\\f':\r\n                            stringBuilder.push('\\\\f');\r\n                            break;\r\n                        case '\\n':\r\n                            stringBuilder.push('\\\\n');\r\n                            break;\r\n                        case '\\r':\r\n                            stringBuilder.push('\\\\r');\r\n                            break;\r\n                        case '\\t':\r\n                            stringBuilder.push('\\\\t');\r\n                            break;\r\n                        default:\r\n                            stringBuilder.push('\\\\u00');\r\n                            if (curChar.charCodeAt() < 16) stringBuilder.push('0');\r\n                            stringBuilder.push(curChar.charCodeAt().toString(16));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            stringBuilder.push(object);\r\n        }\r\n        stringBuilder.push('\"');    \r\n    }\r\n\r\n    this._serializeWithBuilder = function(object, stringBuilder) {\r\n        var i;\r\n        switch (typeof object) {\r\n        case 'object':\r\n            if (object) {\r\n                if (object instanceof Number){\r\n                    this._serializeNumberWithBuilder(object, stringBuilder);\r\n                }\r\n                else if (object instanceof Boolean){\r\n                    this._serializeBooleanWithBuilder(object, stringBuilder);\r\n                }\r\n                else if (object instanceof String){\r\n                    this._serializeStringWithBuilder(object, stringBuilder);\r\n                }\r\n                else if (object instanceof Array) {\r\n                    stringBuilder.push('[');\r\n                    for (i = 0; i < object.length; ++i) {\r\n                        if (i > 0) {\r\n                            stringBuilder.push(',');\r\n                        }\r\n                        this._serializeWithBuilder(object[i], stringBuilder);\r\n                    }\r\n                    stringBuilder.push(']');\r\n                }\r\n                else if (object instanceof Date) {\r\n                    stringBuilder.push('\"\\\\/Date(');\r\n                    stringBuilder.push(object.getTime());\r\n                    stringBuilder.push(')\\\\/\"');\r\n                }\r\n                else if (this._managedServices.requiresManagedSerializer(object)) {\r\n                    stringBuilder.push(this._managedServices.jsonSerialize(object));\r\n                }\r\n                else {\r\n                    var properties = [];\r\n                    var propertyCount = 0;\r\n                    for (var name in object) {\r\n                        if (name.length > 0 && name[0] == '$') {\r\n                            continue;\r\n                        }\r\n                        if (name === _serverTypeFieldName && propertyCount !== 0){\r\n                            properties[propertyCount++] = properties[0];\r\n                            properties[0] = name;\r\n                        }\r\n                        else{\r\n                            properties[propertyCount++] = name;\r\n                        }\r\n                    }\r\n\r\n                    stringBuilder.push('{');\r\n                    var needComma = false;\r\n                     \r\n                    for (i=0; i<propertyCount; i++) {\r\n                        var value = object[properties[i]];\r\n                        if (typeof value !== 'undefined' && typeof value !== 'function') {\r\n                            if (needComma) {\r\n                                stringBuilder.push(',');\r\n                            }\r\n                            else {\r\n                                needComma = true;\r\n                            }\r\n                           \r\n                            this._serializeWithBuilder(properties[i], stringBuilder);\r\n                            stringBuilder.push(':');\r\n                            this._serializeWithBuilder(value, stringBuilder);\r\n                          \r\n                        }\r\n                    }\r\n                    stringBuilder.push('}');\r\n                }\r\n            }\r\n            else {\r\n                stringBuilder.push('null');\r\n            }\r\n            break;\r\n        case 'number':\r\n            this._serializeNumberWithBuilder(object, stringBuilder);\r\n            break;\r\n        case 'string':\r\n            this._serializeStringWithBuilder(object, stringBuilder);\r\n            break;\r\n        case 'boolean':\r\n            this._serializeBooleanWithBuilder(object, stringBuilder);\r\n            break;\r\n        case 'function':\r\n            if (this._managedServices.requiresManagedSerializer(object)) {\r\n                stringBuilder.push(this._managedServices.jsonSerialize(object));\r\n            }\r\n            else {\r\n                stringBuilder.push('null');\r\n            }\r\n            break;\r\n        default:\r\n            stringBuilder.push('null');\r\n            break;\r\n        }\r\n    }\r\n\r\n    this.serialize = function(object) {\r\n        var stringBuilder = [];\r\n        this._serializeWithBuilder(object, stringBuilder);\r\n        return stringBuilder.join('');\r\n    }\r\n\r\n    this.deserialize = function(data, secure) {\r\n        if (data.length === 0) throw 'cannotDeserializeEmptyString';    \r\n        var exp = data.replace(_dateRegEx, \"$1new Date($2)\");\r\n        \r\n        if (secure && _jsonRegEx.test(\r\n             exp.replace(_jsonStringRegEx, ''))) throw null;\r\n\r\n        return eval('(' + exp + ')');\r\n    }\r\n};"), System.Windows.Browser.ScriptObject);
		this._jsSerializer.SetProperty$1("_managedServices", this);
	}
	return this._jsSerializer;
};
$asm05.System.Windows.Browser.ManagedServices.get_Current = function () {
	System.Windows.Browser.HtmlPage.VerifyThread();
	if (!($asm05.System.Windows.Browser.ManagedServices.s_instance || System.Windows.Hosting.NativeHost.Current.IsShuttingDown)) {
		$asm05.System.Windows.Browser.ManagedServices.s_instance = new $asm05.System.Windows.Browser.ManagedServices();
	}
	return $asm05.System.Windows.Browser.ManagedServices.s_instance;
};
$asm05.System.Windows.Browser.ManagedServices.prototype._ctor = function () {
	System.Object.prototype._ctor.call(this);
	this._typeMap = JSIL.New(System.Collections.Generic.Dictionary$b2.Of(System.String, System.Type), "_ctor$0", []);
};
$asm05.System.Windows.Browser.ManagedServices.prototype.UnregisterCreateableType = function (scriptAlias) {
	if (!this._typeMap.ContainsKey(scriptAlias)) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("Common_MethodFailed", ["RegisterCreatableType"]), "scriptAlias"]);
	}
	this._typeMap.Remove(scriptAlias);
};
$asm05.System.Windows.Browser.ManagedServices.IsValidCreateableType = function (type) {
	return ((type !== null) && 
		type.IsVisible && 
		!type.IsAbstract && 
		!type.IsInterface && 
		!type.IsPrimitive && 
		!type.IsGenericParameter && 
		!type.IsGenericTypeDefinition && 
		(type !== System.Object) && 
		!System.Delegate.IsAssignableFrom(type) && (type.IsArray || 
			type.IsValueType || 
			type.GetConstructor$1((System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public), null, JSIL.Array.New(System.Type, 0), null)));
};
$asm05.System.Windows.Browser.ManagedServices.prototype.RegisterCreateableType = function (scriptAlias, type) {
	if (this._typeMap.ContainsKey(scriptAlias)) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$0("Common_MethodFailed", ["RegisterCreatableType"]), "scriptAlias"]);
	}
	this._typeMap.set_Item(scriptAlias, type);
};
$asm05.System.Windows.Browser.ManagedServices.prototype.CreateObject$0 = function (scriptAlias) {
	return this.CreateObject$2(scriptAlias, null);
};
$asm05.System.Windows.Browser.ManagedServices.prototype.CreateObject$1 = function (scriptAlias, capacity) {
	if (!this._typeMap.ContainsKey(scriptAlias)) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ManagedServices_NoSuchAlias"), [scriptAlias]), "scriptAlias"]);
	}
	var type = this._typeMap.get_Item(scriptAlias);
	if (type.IsArray) {
		return JSIL.Array.New(type.GetElementType(), capacity);
	}
	throw JSIL.New(System.InvalidOperationException, "_ctor$1", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ManagedServices_ExpectedArrayType"), [scriptAlias])]);
};
$asm05.System.Windows.Browser.ManagedServices.prototype.CreateObject$2 = function (scriptAlias, sourceObject) {
	if (!this._typeMap.ContainsKey(scriptAlias)) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [System.String.Format(System.Globalization.CultureInfo.CurrentCulture, $asm05.System.Windows.Browser.Resx.GetString$2("ManagedServices_NoSuchAlias"), [scriptAlias]), "scriptAlias"]);
	}
	return this.CreateObjectInternal(this._typeMap.get_Item(scriptAlias), sourceObject);
};
$asm05.System.Windows.Browser.ManagedServices.prototype.CreateObjectInternal = function (type, sourceObject) {
	if (sourceObject === null) {
		return System.Activator.CreateInstance$3(type);
	}
	return this.DeserializeScriptObject(sourceObject, type);
};
$asm05.System.Windows.Browser.ManagedServices.prototype.JsonSerialize = function (sourceObject) {
	if (sourceObject.ManagedObject !== null) {
		var dataContractJsonSerializer = JSIL.New(System.Runtime.Serialization.Json.DataContractJsonSerializer, "_ctor$0", [JSIL.GetType(sourceObject.ManagedObject)]);
		var memoryStream = JSIL.New(System.IO.MemoryStream, "_ctor$0", []);
		try {
			dataContractJsonSerializer.WriteObject(memoryStream, sourceObject.ManagedObject);
			memoryStream.Position = 0;
			var streamReader = JSIL.New(System.IO.StreamReader, "_ctor$1", [memoryStream]);
			try {
				return streamReader.ReadToEnd();
			} finally {
				if (streamReader !== null) {
					streamReader.IDisposable_Dispose();
				}
			}
		} finally {
			if (memoryStream !== null) {
				memoryStream.IDisposable_Dispose();
			}
		}
	}
	if (JSIL.TryCast(sourceObject, System.Windows.Browser.HtmlObject) !== null) {
		return "{}";
	}
	return JSIL.Cast(this.JsSerializer.Invoke("serialize", [sourceObject]), System.String);
};
$asm05.System.Windows.Browser.ManagedServices.prototype.RequiresManagedSerializer = function (obj) {
	return (obj.ManagedObject || JSIL.CheckType(obj, System.Windows.Browser.HtmlObject));
};
$asm05.System.Windows.Browser.ManagedServices.prototype.toString = function () {
	return "[ManagedServices]";
};
$asm05.System.Windows.Browser.ManagedServices.prototype.DeserializeScriptObject = function (sourceObject, targetType) {
	var s = this.JsonSerialize(sourceObject);
	var dataContractJsonSerializer = JSIL.New(System.Runtime.Serialization.Json.DataContractJsonSerializer, "_ctor$0", [targetType]);
	var memoryStream = JSIL.New(System.IO.MemoryStream, "_ctor$2", [System.Text.Encoding.UTF8.GetBytes$3(s)]);
	try {
		var result = dataContractJsonSerializer.ReadObject(memoryStream);
	} finally {
		if (memoryStream !== null) {
			memoryStream.IDisposable_Dispose();
		}
	}
	return result;
};
JSIL.OverloadedMethod($asm05.System.Windows.Browser.ManagedServices.prototype, "CreateObject", [
		["CreateObject$0", [System.String]], 
		["CreateObject$1", [System.String, System.Int32]], 
		["CreateObject$2", [System.String, System.Windows.Browser.ScriptObject]]
	]);
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedServices.prototype, "JsSerializer", 
	$asm05.System.Windows.Browser.ManagedServices.prototype.get_JsSerializer, null);
JSIL.MakeProperty($asm05.System.Windows.Browser.ManagedServices, "Current", 
	$asm05.System.Windows.Browser.ManagedServices.get_Current, null);
Object.defineProperty($asm05.System.Windows.Browser.ManagedServices, "AjaxSerializerString", {
		"value": "new function() {\r\n    var _serverTypeFieldName = '__type';\r\n\r\n    var _stringRegEx = new RegExp('[\"\\\\b\\\\f\\\\n\\\\r\\\\t\\\\\\\\\\\\x00-\\\\x1F]', 'i');\r\n    var _dateRegEx = new RegExp('(^|[^\\\\\\\\])\\\\\"\\\\\\\\/Date\\\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\\\+|-)[0-9]{4})?\\\\)\\\\\\\\/\\\\\"', 'g');\r\n    var _jsonRegEx = new RegExp('[^,:{}\\\\[\\\\]0-9.\\\\-+Eaeflnr-u \\\\n\\\\r\\\\t]', 'g');\r\n    var _jsonStringRegEx = new RegExp('\"(\\\\\\\\.|[^\"\\\\\\\\])*\"', 'g');\r\n\r\n    this._serializeBooleanWithBuilder = function(object, stringBuilder) {\r\n        stringBuilder.push(object.toString());\r\n    }\r\n\r\n    this._serializeNumberWithBuilder = function(object, stringBuilder) {\r\n        if (isFinite(object)) {\r\n            stringBuilder.push(String(object));\r\n        }\r\n        else {\r\n            throw 'cannotSerializeNonFiniteNumbers';\r\n        }\r\n    }\r\n\r\n    this._serializeStringWithBuilder = function(object, stringBuilder) {\r\n        stringBuilder.push('\"');\r\n        if (_stringRegEx.test(object)) {\r\n            var length = object.length;\r\n            for (i = 0; i < length; ++i) {\r\n                var curChar = object.charAt(i);\r\n                if (curChar >= ' ') {\r\n                    if (curChar === '\\\\' || curChar === '\"') {\r\n                        stringBuilder.push('\\\\');\r\n                    }\r\n                    stringBuilder.push(curChar);\r\n                }\r\n                else {\r\n                    switch (curChar) {\r\n                        case '\\b':\r\n                            stringBuilder.push('\\\\b');\r\n                            break;\r\n                        case '\\f':\r\n                            stringBuilder.push('\\\\f');\r\n                            break;\r\n                        case '\\n':\r\n                            stringBuilder.push('\\\\n');\r\n                            break;\r\n                        case '\\r':\r\n                            stringBuilder.push('\\\\r');\r\n                            break;\r\n                        case '\\t':\r\n                            stringBuilder.push('\\\\t');\r\n                            break;\r\n                        default:\r\n                            stringBuilder.push('\\\\u00');\r\n                            if (curChar.charCodeAt() < 16) stringBuilder.push('0');\r\n                            stringBuilder.push(curChar.charCodeAt().toString(16));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            stringBuilder.push(object);\r\n        }\r\n        stringBuilder.push('\"');    \r\n    }\r\n\r\n    this._serializeWithBuilder = function(object, stringBuilder) {\r\n        var i;\r\n        switch (typeof object) {\r\n        case 'object':\r\n            if (object) {\r\n                if (object instanceof Number){\r\n                    this._serializeNumberWithBuilder(object, stringBuilder);\r\n                }\r\n                else if (object instanceof Boolean){\r\n                    this._serializeBooleanWithBuilder(object, stringBuilder);\r\n                }\r\n                else if (object instanceof String){\r\n                    this._serializeStringWithBuilder(object, stringBuilder);\r\n                }\r\n                else if (object instanceof Array) {\r\n                    stringBuilder.push('[');\r\n                    for (i = 0; i < object.length; ++i) {\r\n                        if (i > 0) {\r\n                            stringBuilder.push(',');\r\n                        }\r\n                        this._serializeWithBuilder(object[i], stringBuilder);\r\n                    }\r\n                    stringBuilder.push(']');\r\n                }\r\n                else if (object instanceof Date) {\r\n                    stringBuilder.push('\"\\\\/Date(');\r\n                    stringBuilder.push(object.getTime());\r\n                    stringBuilder.push(')\\\\/\"');\r\n                }\r\n                else if (this._managedServices.requiresManagedSerializer(object)) {\r\n                    stringBuilder.push(this._managedServices.jsonSerialize(object));\r\n                }\r\n                else {\r\n                    var properties = [];\r\n                    var propertyCount = 0;\r\n                    for (var name in object) {\r\n                        if (name.length > 0 && name[0] == '$') {\r\n                            continue;\r\n                        }\r\n                        if (name === _serverTypeFieldName && propertyCount !== 0){\r\n                            properties[propertyCount++] = properties[0];\r\n                            properties[0] = name;\r\n                        }\r\n                        else{\r\n                            properties[propertyCount++] = name;\r\n                        }\r\n                    }\r\n\r\n                    stringBuilder.push('{');\r\n                    var needComma = false;\r\n                     \r\n                    for (i=0; i<propertyCount; i++) {\r\n                        var value = object[properties[i]];\r\n                        if (typeof value !== 'undefined' && typeof value !== 'function') {\r\n                            if (needComma) {\r\n                                stringBuilder.push(',');\r\n                            }\r\n                            else {\r\n                                needComma = true;\r\n                            }\r\n                           \r\n                            this._serializeWithBuilder(properties[i], stringBuilder);\r\n                            stringBuilder.push(':');\r\n                            this._serializeWithBuilder(value, stringBuilder);\r\n                          \r\n                        }\r\n                    }\r\n                    stringBuilder.push('}');\r\n                }\r\n            }\r\n            else {\r\n                stringBuilder.push('null');\r\n            }\r\n            break;\r\n        case 'number':\r\n            this._serializeNumberWithBuilder(object, stringBuilder);\r\n            break;\r\n        case 'string':\r\n            this._serializeStringWithBuilder(object, stringBuilder);\r\n            break;\r\n        case 'boolean':\r\n            this._serializeBooleanWithBuilder(object, stringBuilder);\r\n            break;\r\n        case 'function':\r\n            if (this._managedServices.requiresManagedSerializer(object)) {\r\n                stringBuilder.push(this._managedServices.jsonSerialize(object));\r\n            }\r\n            else {\r\n                stringBuilder.push('null');\r\n            }\r\n            break;\r\n        default:\r\n            stringBuilder.push('null');\r\n            break;\r\n        }\r\n    }\r\n\r\n    this.serialize = function(object) {\r\n        var stringBuilder = [];\r\n        this._serializeWithBuilder(object, stringBuilder);\r\n        return stringBuilder.join('');\r\n    }\r\n\r\n    this.deserialize = function(data, secure) {\r\n        if (data.length === 0) throw 'cannotDeserializeEmptyString';    \r\n        var exp = data.replace(_dateRegEx, \"$1new Date($2)\");\r\n        \r\n        if (secure && _jsonRegEx.test(\r\n             exp.replace(_jsonStringRegEx, ''))) throw null;\r\n\r\n        return eval('(' + exp + ')');\r\n    }\r\n};"}
);
$asm05.System.Windows.Browser.ManagedServices.s_instance = null;
$asm05.System.Windows.Browser.ManagedServices.prototype._typeMap = null;
$asm05.System.Windows.Browser.ManagedServices.prototype._jsSerializer = null;

$asm05.System.Windows.Browser.MetaScriptObject.prototype._ctor = function (parameter, value) {
	System.Dynamic.DynamicMetaObject.prototype._ctor$1.call(this, parameter, System.Dynamic.BindingRestrictions.GetTypeRestriction$0(parameter, JSIL.GetType(value)), value);
	this._value = value;
};
$asm05.System.Windows.Browser.MetaScriptObject.CreateArgsArray = function (args) {
	var readOnlyCollectionBuilder = JSIL.New(System.Runtime.CompilerServices.ReadOnlyCollectionBuilder$b1.Of(System.Linq.Expressions.Expression), "_ctor$1", [args.length]);
__loop0__: 
	for (var i = 0; i < args.length; ++i) {
		var expression = args[i].Expression;
		if (expression.Type !== System.Object) {
			expression = System.Linq.Expressions.Expression.Convert$0(expression, System.Object);
		}
		readOnlyCollectionBuilder.Add(expression);
	}
	return System.Linq.Expressions.Expression.NewArrayInit$1(System.Object, readOnlyCollectionBuilder);
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.get_ExpressionAsScriptObject = function () {
	return System.Linq.Expressions.Expression.Convert$0(System.Dynamic.DynamicMetaObject.prototype.get_Expression.call(this), System.Windows.Browser.ScriptObject);
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindGetMember = function (binder) {
	return this.BindGetProperty(JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Constant$0(binder.Name), System.Dynamic.BindingRestrictions.Empty]), binder.FallbackGetMember$0(this));
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindGetProperty = function (name, fallback) {
	var parameterExpression = System.Linq.Expressions.Expression.Parameter$1(System.Runtime.CompilerServices.StrongBox$b1.Of(System.Object), "result");
	return JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Block$8(JSIL.Array.New(System.Linq.Expressions.ParameterExpression, [parameterExpression]), JSIL.Array.New(System.Linq.Expressions.Expression, [System.Linq.Expressions.Expression.Condition$0(System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression.Assign(parameterExpression, System.Linq.Expressions.Expression.Invoke$0(System.Linq.Expressions.Expression.Constant$0($asm05.System.Windows.Browser.MetaScriptObject.TryGetProperty), JSIL.Array.New(System.Linq.Expressions.Expression, [this.ExpressionAsScriptObject, name.Expression]))), System.Linq.Expressions.Expression.Constant$0(null)), System.Linq.Expressions.Expression.Field$1(parameterExpression, "Value"), System.Linq.Expressions.Expression.Convert$0(fallback.Expression, System.Object))])), System.Dynamic.DynamicMetaObject.prototype.get_Restrictions.call(this).Merge(name.Restrictions).Merge(fallback.Restrictions)]);
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindSetMember = function (binder, value) {
	return this.BindSetProperty(JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Constant$0(binder.Name), System.Dynamic.BindingRestrictions.Empty]), value, binder.FallbackSetMember$0(this, value));
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindSetProperty = function (name, value, fallback) {
	var parameterExpression = System.Linq.Expressions.Expression.Parameter$1(System.Object, "result");
	return JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Block$8(JSIL.Array.New(System.Linq.Expressions.ParameterExpression, [parameterExpression]), JSIL.Array.New(System.Linq.Expressions.Expression, [System.Linq.Expressions.Expression.Condition$0(System.Linq.Expressions.Expression.Invoke$0(System.Linq.Expressions.Expression.Constant$0($asm05.System.Windows.Browser.MetaScriptObject.TrySetProperty), JSIL.Array.New(System.Linq.Expressions.Expression, [this.ExpressionAsScriptObject, name.Expression, System.Linq.Expressions.Expression.Assign(parameterExpression, System.Linq.Expressions.Expression.Convert$0(value.Expression, System.Object))])), parameterExpression, System.Linq.Expressions.Expression.Convert$0(fallback.Expression, System.Object))])), System.Dynamic.DynamicMetaObject.prototype.get_Restrictions.call(this).Merge(name.Restrictions).Merge(value.Restrictions).Merge(fallback.Restrictions)]);
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindInvokeMember = function (binder, args) {
	var dynamicMetaObject = binder.FallbackInvokeMember$0(this, args);
	var parameterExpression = System.Linq.Expressions.Expression.Parameter$1(System.Runtime.CompilerServices.StrongBox$b1.Of(System.Object), "result");
	var memberExpression = System.Linq.Expressions.Expression.Field$1(parameterExpression, "Value");
	var dynamicMetaObject2 = binder.FallbackInvoke(JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [memberExpression, System.Dynamic.BindingRestrictions.Empty]), args, null);
	return JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Block$8(JSIL.Array.New(System.Linq.Expressions.ParameterExpression, [parameterExpression]), JSIL.Array.New(System.Linq.Expressions.Expression, [System.Linq.Expressions.Expression.Condition$0(
					System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression.Assign(parameterExpression, System.Linq.Expressions.Expression.Invoke$0(System.Linq.Expressions.Expression.Constant$0($asm05.System.Windows.Browser.MetaScriptObject.TryInvoke), JSIL.Array.New(System.Linq.Expressions.Expression, [this.ExpressionAsScriptObject, System.Linq.Expressions.Expression.Constant$0(binder.Name), $asm05.System.Windows.Browser.MetaScriptObject.CreateArgsArray(args)]))), System.Linq.Expressions.Expression.Constant$0(null)), 
					memberExpression, 
					System.Linq.Expressions.Expression.Condition$0(System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression.Assign(parameterExpression, System.Linq.Expressions.Expression.Invoke$0(System.Linq.Expressions.Expression.Constant$0($asm05.System.Windows.Browser.MetaScriptObject.TryGetProperty), JSIL.Array.New(System.Linq.Expressions.Expression, [this.ExpressionAsScriptObject, System.Linq.Expressions.Expression.Constant$0(binder.Name)]))), System.Linq.Expressions.Expression.Constant$0(null)), System.Linq.Expressions.Expression.Convert$0(dynamicMetaObject2.Expression, System.Object), System.Linq.Expressions.Expression.Convert$0(dynamicMetaObject.Expression, System.Object))
				)])), System.Dynamic.DynamicMetaObject.prototype.get_Restrictions.call(this).Merge(System.Dynamic.BindingRestrictions.Combine(JSIL.Cast(args, System.Collections.Generic.IList$b1.Of(System.Dynamic.DynamicMetaObject)))).Merge(dynamicMetaObject.Restrictions).Merge(dynamicMetaObject2.Restrictions)]);
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindInvoke = function (binder, args) {
	var dynamicMetaObject = binder.FallbackInvoke$0(this, args);
	var parameterExpression = System.Linq.Expressions.Expression.Parameter$1(System.Runtime.CompilerServices.StrongBox$b1.Of(System.Object), "result");
	return JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Block$8(JSIL.Array.New(System.Linq.Expressions.ParameterExpression, [parameterExpression]), JSIL.Array.New(System.Linq.Expressions.Expression, [System.Linq.Expressions.Expression.Condition$0(System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression.Assign(parameterExpression, System.Linq.Expressions.Expression.Invoke$0(System.Linq.Expressions.Expression.Constant$0($asm05.System.Windows.Browser.MetaScriptObject.TryInvokeSelf), JSIL.Array.New(System.Linq.Expressions.Expression, [this.ExpressionAsScriptObject, $asm05.System.Windows.Browser.MetaScriptObject.CreateArgsArray(args)]))), System.Linq.Expressions.Expression.Constant$0(null)), System.Linq.Expressions.Expression.Field$1(parameterExpression, "Value"), System.Linq.Expressions.Expression.Convert$0(dynamicMetaObject.Expression, System.Object))])), System.Dynamic.DynamicMetaObject.prototype.get_Restrictions.call(this).Merge(System.Dynamic.BindingRestrictions.Combine(JSIL.Cast(args, System.Collections.Generic.IList$b1.Of(System.Dynamic.DynamicMetaObject)))).Merge(dynamicMetaObject.Restrictions)]);
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindGetIndex = function (binder, indexes) {
	var dynamicMetaObject = $asm05.System.Windows.Browser.MetaScriptObject.LimitIndex(indexes[0]);
	if (!((dynamicMetaObject.LimitType === System.String) && (indexes.length === 1))) {
		return System.Dynamic.DynamicMetaObject.prototype.BindGetIndex.call(this, binder, indexes);
	}
	return this.BindGetProperty(dynamicMetaObject, binder.FallbackGetIndex$0(this, indexes));
};
$asm05.System.Windows.Browser.MetaScriptObject.prototype.BindSetIndex = function (binder, indexes, value) {
	var dynamicMetaObject = $asm05.System.Windows.Browser.MetaScriptObject.LimitIndex(indexes[0]);
	if (!((dynamicMetaObject.LimitType === System.String) && (indexes.length === 1))) {
		return System.Dynamic.DynamicMetaObject.prototype.BindSetIndex.call(this, binder, indexes, value);
	}
	return this.BindSetProperty(dynamicMetaObject, value, binder.FallbackSetIndex$0(this, indexes, value));
};
$asm05.System.Windows.Browser.MetaScriptObject.LimitIndex = function (index) {
	index = $asm05.System.Windows.Browser.MetaScriptObject.Limit(index);
	if (index.LimitType === System.Int32) {
		return JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Call$7(index.Expression, System.Int32.GetMethod$3("ToString", System.Type.EmptyTypes)), index.Restrictions]);
	}
	return index;
};
$asm05.System.Windows.Browser.MetaScriptObject.Limit = function (metaObject) {
	if (metaObject.Expression.Type !== metaObject.LimitType) {
		metaObject = JSIL.New(System.Dynamic.DynamicMetaObject, "_ctor$0", [System.Linq.Expressions.Expression.Convert$0(metaObject.Expression, metaObject.LimitType), metaObject.Restrictions.Merge(System.Dynamic.BindingRestrictions.GetTypeRestriction$0(metaObject.Expression, metaObject.LimitType))]);
	}
	return metaObject;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.MetaScriptObject.prototype, "ExpressionAsScriptObject", 
	$asm05.System.Windows.Browser.MetaScriptObject.prototype.get_ExpressionAsScriptObject, null);
$asm05.System.Windows.Browser.MetaScriptObject.prototype._value = null;
$asm05.System.Windows.Browser.MetaScriptObject.TryGetProperty = null;
$asm05.System.Windows.Browser.MetaScriptObject.TrySetProperty = null;
$asm05.System.Windows.Browser.MetaScriptObject.TryInvokeSelf = null;
$asm05.System.Windows.Browser.MetaScriptObject.TryInvoke = null;
$asm05.System.Windows.Browser.MetaScriptObject.$CachedAnonymousMethodDelegate4 = null;
$asm05.System.Windows.Browser.MetaScriptObject.$CachedAnonymousMethodDelegate5 = null;
$asm05.System.Windows.Browser.MetaScriptObject.$CachedAnonymousMethodDelegate6 = null;
$asm05.System.Windows.Browser.MetaScriptObject.$CachedAnonymousMethodDelegate7 = null;
$asm05.System.Windows.Browser.MetaScriptObject._cctor = function () {
	$asm05.System.Windows.Browser.MetaScriptObject.TryGetProperty = function (obj, name) {
		var value = new JSIL.Variable(null);
		if (obj.TryGetProperty(name, /* ref */ value)) {
			return JSIL.New(System.Runtime.CompilerServices.StrongBox$b1.Of(System.Object), "_ctor$1", [value.value]);
		}
		return null;
	};
	$asm05.System.Windows.Browser.MetaScriptObject.TrySetProperty = function (obj, name, val) {
		return (obj.TrySetProperty(name, val) === null);
	};
	$asm05.System.Windows.Browser.MetaScriptObject.TryInvokeSelf = function (obj, args) {
		var exception = new JSIL.Variable(null);
		var value = obj.TryInvokeSelf(args, /* ref */ exception);
		if (exception.value === null) {
			return JSIL.New(System.Runtime.CompilerServices.StrongBox$b1.Of(System.Object), "_ctor$1", [value]);
		}
		return null;
	};
	$asm05.System.Windows.Browser.MetaScriptObject.TryInvoke = function (obj, name, args) {
		var exception = new JSIL.Variable(null);
		var value = obj.TryInvoke(name, args, /* ref */ exception);
		if (exception.value === null) {
			return JSIL.New(System.Runtime.CompilerServices.StrongBox$b1.Of(System.Object), "_ctor$1", [value]);
		}
		return null;
	};
};

System.Windows.Browser.ScriptableMemberAttribute.prototype.get_ScriptAlias = function () {
	return this._scriptAlias;
};
System.Windows.Browser.ScriptableMemberAttribute.prototype.set_ScriptAlias = function (value) {
	System.Windows.Browser.ScriptObject.ValidateNonNullOrEmptyString$0(value, "ScriptAlias");
	this._scriptAlias = value;
};
System.Windows.Browser.ScriptableMemberAttribute.prototype.get_EnableCreateableTypes = function () {
	return this._enableCreateableTypes;
};
System.Windows.Browser.ScriptableMemberAttribute.prototype.set_EnableCreateableTypes = function (value) {
	this._enableCreateableTypes = value;
};
System.Windows.Browser.ScriptableMemberAttribute.prototype._ctor = function () {
	this._enableCreateableTypes = true;
	System.Attribute.prototype._ctor.call(this);
};
JSIL.MakeProperty(System.Windows.Browser.ScriptableMemberAttribute.prototype, "ScriptAlias", 
	System.Windows.Browser.ScriptableMemberAttribute.prototype.get_ScriptAlias, System.Windows.Browser.ScriptableMemberAttribute.prototype.set_ScriptAlias);
JSIL.MakeProperty(System.Windows.Browser.ScriptableMemberAttribute.prototype, "EnableCreateableTypes", 
	System.Windows.Browser.ScriptableMemberAttribute.prototype.get_EnableCreateableTypes, System.Windows.Browser.ScriptableMemberAttribute.prototype.set_EnableCreateableTypes);
System.Windows.Browser.ScriptableMemberAttribute.prototype._scriptAlias = null;
System.Windows.Browser.ScriptableMemberAttribute.prototype._enableCreateableTypes = false;

System.Windows.Browser.ScriptableTypeAttribute.prototype._ctor = function () {
	System.Attribute.prototype._ctor.call(this);
};

System.Windows.Browser.ScriptObjectCollection.prototype.get_Count = function () {
	var result = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetElementCollectionCount(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, /* ref */ result);
	return result.value;
};
System.Windows.Browser.ScriptObjectCollection.prototype.get_Item = function (index) {
	var handle = new JSIL.Variable(0);
	System.Windows.Browser.HtmlPage.VerifyThread();
	System.Windows.Browser.ScriptObject.prototype.VerifyHandle.call(this);
	if (!((index >= 0) && (index < this.Count))) {
		throw JSIL.New(System.ArgumentOutOfRangeException, "_ctor$1", ["index"]);
	}
	if (System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_GetElementCollectionItem(System.Windows.Browser.ScriptObject.prototype.get_Handle.call(this).Handle, index, /* ref */ handle) === 0) {
		return JSIL.Cast(System.Windows.Browser.ScriptObject.GetObject$0(handle.value, System.Windows.Browser.HtmlElement), System.Windows.Browser.HtmlElement);
	}
	return null;
};
System.Windows.Browser.ScriptObjectCollection.prototype._ctor = function () {
	System.Windows.Browser.ScriptObject.prototype._ctor$0.call(this);
};
System.Windows.Browser.ScriptObjectCollection.prototype.IEnumerable$b1_GetEnumerator = function () {
	return new $asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator(this);
};
System.Windows.Browser.ScriptObjectCollection.prototype.IEnumerable_GetEnumerator = function () {
	return this.IEnumerable$b1_GetEnumerator();
};
JSIL.MakeProperty(System.Windows.Browser.ScriptObjectCollection.prototype, "Count", 
	System.Windows.Browser.ScriptObjectCollection.prototype.get_Count, null);
JSIL.MakeProperty(System.Windows.Browser.ScriptObjectCollection.prototype, "Item", 
	System.Windows.Browser.ScriptObjectCollection.prototype.get_Item, null);

$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype._ctor = function (collection) {
	System.Object.prototype._ctor.call(this);
	this._collection = collection;
	this._count = this._collection.Count;
	this._index = -1;
};
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.get_Current = function () {
	if (this._collection === null) {
		throw JSIL.New(System.ObjectDisposedException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("HtmlElementCollectionEnumerator_Disposed")]);
	}
	return this._collection.get_Item(this._index);
};
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.IEnumerator$b1_get_Current = function () {
	return this.Current;
};
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.IDisposable_Dispose = function () {
	this._collection = null;
};
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.IEnumerator_get_Current = function () {
	return this.Current;
};
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.IEnumerator_MoveNext = function () {
	++this._index;
	return (this._index < this._count);
};
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.IEnumerator_Reset = function () {
	this._index = -1;
};
JSIL.MakeProperty($asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype, "Current", 
	$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.get_Current, null);
JSIL.MakeProperty($asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype, "IEnumerator$b1_Current", 
	$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.IEnumerator$b1_get_Current, null);
JSIL.MakeProperty($asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype, "IEnumerator_Current", 
	$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype.IEnumerator_get_Current, null);
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype._collection = null;
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype._index = 0;
$asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator.prototype._count = 0;

$asm05.System.Windows.Hosting.BrowserService.prototype.get_BridgeEnabled = function () {
	return this._bridgeEnabled;
};
$asm05.System.Windows.Hosting.BrowserService.prototype.set_BridgeEnabled = function (value) {
	this._bridgeEnabled = value;
};
$asm05.System.Windows.Hosting.BrowserService.prototype._ctor = function (browserServiceHandle, supportsBridge, host) {
	System.Object.prototype._ctor.call(this);
	this._browserServiceHandle = browserServiceHandle;
	this._host = host;
	this._host.AddReference(browserServiceHandle);
	this._bridgeEnabled = supportsBridge;
};
$asm05.System.Windows.Hosting.BrowserService.prototype.Finalize = function () {
	try {
		this.Dispose();
	} finally {
		System.Object.prototype.Finalize.call(this);
	}
};
$asm05.System.Windows.Hosting.BrowserService.prototype.Dispose = function () {
	if (System.IntPtr.op_Inequality(this._browserServiceHandle, System.IntPtr.Zero)) {
		this._host.ReleaseReference(this._browserServiceHandle);
		this._browserServiceHandle = System.IntPtr.Zero;
	}
	System.GC.SuppressFinalize(this);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetIdentity = function (pObject, /* ref */ ppIdentity) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetIdentity(this._browserServiceHandle, pObject, /* ref */ ppIdentity);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.ReferenceEquals = function (pObject1, pObject2) {
	return ($asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_ReferenceEquals(this._browserServiceHandle, pObject1, pObject2) === 0);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetWindow = function (/* ref */ ppWindow) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetWindow(this._browserServiceHandle, /* ref */ ppWindow);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetDocument = function (/* ref */ ppDocument) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetDocument(this._browserServiceHandle, /* ref */ ppDocument);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetDocumentUri = function (/* ref */ ppDocumentUri) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetDocumentUri(this._browserServiceHandle, /* ref */ ppDocumentUri);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.CreateFunction = function (pDelegateHandle, /* ref */ ppFunction) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_CreateFunction(this._browserServiceHandle, pDelegateHandle, /* ref */ ppFunction);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.CreateManagedObject = function (pObjectHandle, nMemberCount, /* ref */ ppObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_CreateManagedObject(this._browserServiceHandle, pObjectHandle, nMemberCount, /* ref */ ppObject);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.ReferenceObject = function (pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_ReferenceObject(this._browserServiceHandle, pObject);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.ReleaseObject = function (pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_ReleaseObject(this._browserServiceHandle, pObject);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetControlElement = function (/* ref */ ppElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetControlElement(this._browserServiceHandle, /* ref */ ppElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetElementsByTagName = function (pDocument, pszTagName, /* ref */ ppElements) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetElementsByTagName(this._browserServiceHandle, pDocument, pszTagName, /* ref */ ppElements);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.CreateElement = function (pDocument, pszTagName, /* ref */ ppElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_CreateElement(this._browserServiceHandle, pDocument, pszTagName, /* ref */ ppElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetParent = function (pElement, /* ref */ ppElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetParent(this._browserServiceHandle, pElement, /* ref */ ppElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetChildren = function (pElement, /* ref */ ppElements) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetChildren(this._browserServiceHandle, pElement, /* ref */ ppElements);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.InsertChild = function (pElement, pChildElement, pReferenceElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_InsertChild(this._browserServiceHandle, pElement, pChildElement, pReferenceElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.RemoveChild = function (pElement, pChildElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_RemoveChild(this._browserServiceHandle, pElement, pChildElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.RemoveAttribute = function (pElement, pszName, fStyle) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_RemoveAttribute(this._browserServiceHandle, pElement, pszName, fStyle);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.AttachEvent = function (pObject, pszEventName, pDispHandler) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_AttachEvent(this._browserServiceHandle, pObject, pszEventName, pDispHandler);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.DetachEvent = function (pObject, pszEventName, pDispHandler) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_DetachEvent(this._browserServiceHandle, pObject, pszEventName, pDispHandler);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.Focus = function (pElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_Focus(this._browserServiceHandle, pElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.Navigate = function (pszUrl, pszTarget, features, /* ref */ pWindow) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_Navigate(
		this._browserServiceHandle, 
		pszUrl, 
		pszTarget, 
		features, 
		/* ref */ pWindow
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.Submit = function (pszFormID) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_Submit(this._browserServiceHandle, pszFormID);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetElementCollectionCount = function (pCollection, /* ref */ pdwCount) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetElementCollectionCount(this._browserServiceHandle, pCollection, /* ref */ pdwCount);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetElementCollectionItem = function (pCollection, dwIndex, /* ref */ ppElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetElementCollectionItem(this._browserServiceHandle, pCollection, dwIndex, /* ref */ ppElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetEventInfo = function (/* ref */ pEventInfo) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetEventInfo(this._browserServiceHandle, /* ref */ pEventInfo);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.InvokeBrowserFunction = function (pFunction, nArgCount, ppParams, /* ref */ pResult, /* ref */ pExcepInfo) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_InvokeBrowserFunction(
		this._browserServiceHandle, 
		pFunction, 
		nArgCount, 
		ppParams, 
		/* ref */ pResult, 
		/* ref */ pExcepInfo
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.Invoke = function (pObject, pszMethodName, args, /* ref */ pResult, /* ref */ pExcepInfo) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_Invoke(
		this._browserServiceHandle, 
		pObject, 
		pszMethodName, 
		args.length, 
		args, 
		/* ref */ pResult, 
		/* ref */ pExcepInfo
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetProperty = function (pObject, pszPropertyName, /* ref */ pResult, /* ref */ pExcepInfo) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetProperty(
		this._browserServiceHandle, 
		pObject, 
		pszPropertyName, 
		/* ref */ pResult, 
		/* ref */ pExcepInfo
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.SetProperty = function (pObject, pszPropertyName, /* ref */ pValue, /* ref */ pExcepInfo) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_SetProperty(
		this._browserServiceHandle, 
		pObject, 
		pszPropertyName, 
		/* ref */ pValue, 
		/* ref */ pExcepInfo
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetElementByID = function (pDocument, pszID, /* ref */ ppElement) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetElementByID(this._browserServiceHandle, pDocument, pszID, /* ref */ ppElement);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetAttribute = function (pElement, pszName, fStyle, /* ref */ ppszValue, /* ref */ pnValueLength) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetAttribute(
		this._browserServiceHandle, 
		pElement, 
		pszName, 
		fStyle, 
		/* ref */ ppszValue, 
		/* ref */ pnValueLength
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.SetAttribute = function (pElement, pszName, fStyle, pszValue) {
	var nValueLength = pszValue ? pszValue.length : 0;
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_SetAttribute(
		this._browserServiceHandle, 
		pElement, 
		pszName, 
		fStyle, 
		pszValue, 
		nValueLength
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.Eval = function (pWindow, pszCode, /* ref */ pResult, /* ref */ pExcepInfo) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_Eval(
		this._browserServiceHandle, 
		pWindow, 
		pszCode, 
		/* ref */ pResult, 
		/* ref */ pExcepInfo
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetBrowserInfo = function (/* ref */ ppszName, /* ref */ ppszVersion, /* ref */ ppszPlatform, /* ref */ ppszUserAgent) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetBrowserInfo(
		this._browserServiceHandle, 
		/* ref */ ppszName, 
		/* ref */ ppszVersion, 
		/* ref */ ppszPlatform, 
		/* ref */ ppszUserAgent
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetCookiesEnabled = function (/* ref */ cookieEnabled) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_GetCookiesEnabled(this._browserServiceHandle, /* ref */ cookieEnabled);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.StopPropagation = function (pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_StopPropagation(this._browserServiceHandle, pObject);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.PreventDefault = function (pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_PreventDefault(this._browserServiceHandle, pObject);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetOpenFileName = function (/* ref */ pDialogInfo, /* ref */ pnDialogResult) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.UI_GetOpenFileName(this._host._runtimeHostHandle, this._browserServiceHandle, /* ref */ pDialogInfo, /* ref */ pnDialogResult);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetSaveFileName = function (/* ref */ pDialogInfo, /* ref */ pnDialogResult) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.UI_GetSaveFileName(this._host._runtimeHostHandle, this._browserServiceHandle, /* ref */ pDialogInfo, /* ref */ pnDialogResult);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.CloseSavedFile = function (appUrl, actualLocation, tempLocation) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.UI_CloseSavedFile(this._browserServiceHandle, appUrl, actualLocation, tempLocation);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.IsIEProtectedMode = function (/* ref */ fProtectedMode) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.UI_IsIEProtectedMode(this._host._runtimeHostHandle, this._browserServiceHandle, /* ref */ fProtectedMode);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.RequestQuota = function (site, usedInMB, requestedInMB) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.UI_RequestQuota(
		this._host._runtimeHostHandle, 
		this._browserServiceHandle, 
		site, 
		usedInMB, 
		requestedInMB
	);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.TogglePopupBlocker = function (enable) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_TogglePopupBlocker(this._browserServiceHandle, enable);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.InPrivateMode = function () {
	var flag = new JSIL.Variable(false);
	var hr = $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_InPrivateMode(this._browserServiceHandle, /* ref */ flag);
	return (System.Windows.Hosting.NativeMethods.SUCCEEDED(hr) && flag.value);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.InCustomHost = function () {
	var flag = new JSIL.Variable(false);
	var hr = $asm05.System.Windows.Hosting.UnsafeNativeMethods.DOM_InCustomHost(this._browserServiceHandle, /* ref */ flag);
	return (System.Windows.Hosting.NativeMethods.SUCCEEDED(hr) && flag.value);
};
$asm05.System.Windows.Hosting.BrowserService.prototype.GetBrowserHandle = function (/* ref */ hndBrowser) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.UI_GetBrowserHandle(this._host._runtimeHostHandle, this._browserServiceHandle, /* ref */ hndBrowser);
};
JSIL.MakeProperty($asm05.System.Windows.Hosting.BrowserService.prototype, "BridgeEnabled", 
	$asm05.System.Windows.Hosting.BrowserService.prototype.get_BridgeEnabled, $asm05.System.Windows.Hosting.BrowserService.prototype.set_BridgeEnabled);
$asm05.System.Windows.Hosting.BrowserService.prototype._browserServiceHandle = 0;
$asm05.System.Windows.Hosting.BrowserService.prototype._host = null;
$asm05.System.Windows.Hosting.BrowserService.prototype._bridgeEnabled = false;

$asm05.System.Windows.Hosting.IsolatedStorageGroupComparison.Compare = function (left, right) {
	return left.Group.CompareTo$1(right.Group);
};

$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.CheckSecuritySettings$0 = function (storageState) {
	var uri = new JSIL.Variable(null);
	var browserService = new JSIL.Variable(null);
	if (!((System.Windows.Hosting.NativeHost.Current === null) || (System.Windows.Hosting.NativeHost.Current.RuntimeHost === null))) {
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_GetBrowserService(/* ref */ browserService);
	}
	switch (Number(storageState.Options)) {
		case 0: 
			if (!((browserService.value === null) || !browserService.value.IBrowserService_InPrivateMode())) {
				return false;
			}
			storageState.RootUserDirectory = $asm05.System.Windows.Hosting.HostAppDomainManager.GetRootUserDirectory();
			return true;
		case 1: 
			if (!((browserService.value === null) || !browserService.value.IBrowserService_InPrivateMode())) {
				return false;
			}
			if ($asm05.System.Windows.Hosting.HostAppDomainManager.TryGetOriginAppUrl(/* ref */ uri)) {
				storageState.Id = (uri.value.GetComponents((System.UriComponents.Host | System.UriComponents.Path | System.UriComponents.Port | System.UriComponents.Scheme | System.UriComponents.SchemeAndServer), System.UriFormat.Unescaped)).ToUpper$1(System.Globalization.CultureInfo.InvariantCulture);
				if (System.String.Equals$1(uri.value.Scheme, "file", System.StringComparison.OrdinalIgnoreCase)) {
					storageState.Group = System.IO.Path.GetDirectoryName(uri.value.AbsolutePath).ToUpper$1(System.Globalization.CultureInfo.InvariantCulture);
				} else {
					storageState.Group = ((uri.value.GetComponents((System.UriComponents.Host | System.UriComponents.Port | System.UriComponents.Scheme | System.UriComponents.SchemeAndServer), System.UriFormat.Unescaped)).toString()).ToUpper$1(System.Globalization.CultureInfo.InvariantCulture);
				}
				return true;
			}
			return false;
		case 2: 
			if (!((browserService.value === null) || !browserService.value.IBrowserService_InPrivateMode())) {
				return false;
			}
			if ($asm05.System.Windows.Hosting.HostAppDomainManager.TryGetOriginAppUrl(/* ref */ uri)) {
				if (System.String.Equals$1(uri.value.Scheme, "file", System.StringComparison.OrdinalIgnoreCase)) {
					storageState.Id = System.IO.Path.GetDirectoryName(uri.value.AbsolutePath).ToUpper$1(System.Globalization.CultureInfo.InvariantCulture);
				} else {
					storageState.Id = (uri.value.GetComponents((System.UriComponents.Host | System.UriComponents.Port | System.UriComponents.Scheme | System.UriComponents.SchemeAndServer), System.UriFormat.Unescaped)).ToUpper$1(System.Globalization.CultureInfo.InvariantCulture);
				}
				storageState.Group = storageState.Id;
				return true;
			}
			return false;
		case 3: 
			if ($asm05.System.Windows.Hosting.HostAppDomainManager.TryGetOriginAppUrl(/* ref */ uri)) {
				var components = uri.value.GetComponents((System.UriComponents.Host | System.UriComponents.Port | System.UriComponents.Scheme | System.UriComponents.SchemeAndServer), System.UriFormat.Unescaped);
				var usedInMB = (storageState.UsedSize / 1048576);
				var quota = storageState.Quota;
				var requestedInMB = (quota / 1048576);
				if (!((browserService.value === null) || (browserService.value.IBrowserService_RequestQuota(components, usedInMB, requestedInMB) !== 0))) {
					storageState.Quota = quota;
					return true;
				}
			}
			return false;
		case 5: 
			var flag = new JSIL.Variable(false);
			var isolatedStorageInnerExceptionsAllowedNative = $asm05.System.Windows.Hosting.UnsafeNativeMethods.GetIsolatedStorageInnerExceptionsAllowedNative(MS.Internal.JoltHelper.Context, /* ref */ flag);
			return (System.Windows.Hosting.NativeMethods.SUCCEEDED(isolatedStorageInnerExceptionsAllowedNative) && flag.value);
	}
	return false;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.CheckSecuritySettings$1 = function (networkState) {
	var uri = new JSIL.Variable(null);
	if ($asm05.System.Windows.Hosting.HostAppDomainManager.TryGetOriginAppUrl(/* ref */ uri)) {
		networkState.SocketPolicyManager = JSIL.New(System.Net.Sockets.CrossDomainSocketPolicyManager, "_ctor$1", [uri.value]);
		networkState.ApplicationOrigin = uri.value.toString();
		networkState.NetworkingUnrestricted = System.Windows.Hosting.NativeHost.Current.NetworkingUnrestricted;
		return true;
	}
	return false;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.CheckSecuritySettings$2 = function (state) {
	return (System.Windows.Hosting.NativeHost.Current.FileSystemAccessAllowed && this.CheckPathForFileSystemAccess(state.Path));
};
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.CheckSecuritySettings$3 = function (state) {
	return (System.Windows.Hosting.NativeHost.Current.FileSystemAccessAllowed && this.CheckPathForFileSystemAccess(state.NavigationUri.LocalPath));
};
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.CheckSecuritySettings$4 = function (state) {
	var isolatedStorageSecurityState = JSIL.TryCast(state, System.IO.IsolatedStorage.IsolatedStorageSecurityState);
	if (isolatedStorageSecurityState !== null) {
		return this.CheckSecuritySettings$0(isolatedStorageSecurityState);
	}
	var networkSecurityState = JSIL.TryCast(state, System.Net.NetworkSecurityState);
	if (networkSecurityState !== null) {
		return this.CheckSecuritySettings$1(networkSecurityState);
	}
	var fileSecurityState = JSIL.TryCast(state, System.IO.FileSecurityState);
	if (fileSecurityState !== null) {
		return this.CheckSecuritySettings$2(fileSecurityState);
	}
	var navigationSecurityState = JSIL.TryCast(state, MS.Internal.NavigationSecurityState);
	if (navigationSecurityState !== null) {
		return this.CheckSecuritySettings$3(navigationSecurityState);
	}
	return System.AppDomainManager.prototype.CheckSecuritySettings.call(this, state);
};
$asm05.System.Windows.Hosting.HostAppDomainManager.TryGetOriginAppUrl = function (/* ref */ appUrl) {
	if (!((System.Windows.Hosting.NativeHost.Current === null) || !System.Uri.op_Inequality(System.Windows.Hosting.NativeHost.Current.FinalSource, null))) {
		appUrl.value = System.Windows.Hosting.NativeHost.Current.FinalSource;
		return true;
	}
	appUrl.value = null;
	return false;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.GetIsolatedStorageEnabled = function (/* ref */ enabled) {
	try {
		enabled.value = System.IO.IsolatedStorage.IsolatedStorageGroup.Enabled;
		var result = 0;
	} catch ($exception) {
		enabled.value = false;
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.SetIsolatedStorageEnabled = function (enabled) {
	try {
		System.IO.IsolatedStorage.IsolatedStorageGroup.Enabled = enabled;
		var result = 0;
	} catch ($exception) {
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.GetIsolatedStoreCount = function (/* ref */ length) {
	$asm05.System.Windows.Hosting.HostAppDomainManager.EnsureIsoStoreConfigData();
	try {
		length.value = $asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.Count;
		var result = 0;
	} catch ($exception) {
		length.value = 0;
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.GetIsolatedStoreInfo = function (index, maxLength, site, /* ref */ quotaInMB, /* ref */ usedInMB) {
	$asm05.System.Windows.Hosting.HostAppDomainManager.EnsureIsoStoreConfigData();
	try {
		var isolatedStorageGroup = $asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.get_Item(index);
		site.Append$2($asm05.System.Windows.Hosting.HostAppDomainManager.GetPathString(isolatedStorageGroup.Group));
		quotaInMB.value = (isolatedStorageGroup.Quota / 1048576);
		usedInMB.value = (isolatedStorageGroup.UsedSize / 1048576);
		var result = 0;
	} catch ($exception) {
		quotaInMB.value = (usedInMB.value = 0);
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.DeleteIsolatedStore = function (site) {
	$asm05.System.Windows.Hosting.HostAppDomainManager.EnsureIsoStoreConfigData();
	try {
	__loop0__: 
		for (var i = 0; i < $asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.Count; ++i) {
			if ($asm05.System.Windows.Hosting.HostAppDomainManager.GetPathString($asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.get_Item(i).Group).Equals$2(site, System.StringComparison.OrdinalIgnoreCase)) {
				$asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.get_Item(i).Remove();
				$asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.RemoveAt(i);
				break __loop0__;
			}
		}
		var result = 0;
	} catch ($exception) {
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.EnsureIsoStoreConfigData = function () {
	if ($asm05.System.Windows.Hosting.HostAppDomainManager.s_groups === null) {
		$asm05.System.Windows.Hosting.HostAppDomainManager.s_groups = new (System.Collections.Generic.List$b1.Of(System.IO.IsolatedStorage.IsolatedStorageGroup)) ();
		var enumerator = System.IO.IsolatedStorage.IsolatedStorageGroup.GetGroups().IEnumerable$b1_GetEnumerator();
		try {
		__loop0__: 
			while (enumerator.IEnumerator_MoveNext()) {
				var current = enumerator.IEnumerator$b1_Current;
				$asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.Add(current);
			}
		} finally {
			if (enumerator !== null) {
				enumerator.IDisposable_Dispose();
			}
		}
		$asm05.System.Windows.Hosting.HostAppDomainManager.s_groups.Sort$3(JSIL.Delegate.New("System.Comparison`1[System.IO.IsolatedStorage.IsolatedStorageGroup]", null, $asm05.System.Windows.Hosting.IsolatedStorageGroupComparison.Compare));
	}
};
$asm05.System.Windows.Hosting.HostAppDomainManager.GetPathString = function (group) {
	group = group.ToLower$1(System.Globalization.CultureInfo.InvariantCulture);
	try {
		var uri = JSIL.New(System.Uri, "_ctor$0", [group]);
		if (uri.Scheme.Equals$1("file")) {
			var result = System.Windows.Browser.HttpUtility.UrlDecode(group);
		} else {
			result = uri.toString();
		}
	} catch ($exception) {
		if (JSIL.CheckType($exception, System.UriFormatException)) {
			result = group;
		} else {
			throw $exception;
		}
	}
	return result;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.GetRootUserDirectory = function () {
	var __label0__ = null;
__step0__: 
	while (true) {
		switch (__label0__) {
			case null:
				var intPtr = new JSIL.Variable(0);
				__label0__ = "__entry0__";
				continue __step0__;
				break;
			case "__entry0__":
				var stringBuilder = JSIL.New(System.Text.StringBuilder, "_ctor$1", [260]);
				switch (Number(System.Environment.OSVersion.Platform)) {
					case 4: 
					case 6: 
						var num = Microsoft.Win32.Win32Native.SHGetFolderPath(
							System.IntPtr.Zero, 
							32796, 
							System.IntPtr.Zero, 
							0, 
							stringBuilder
						);
						if (num !== 0) {
							num = Microsoft.Win32.Win32Native.SHGetFolderPath(
								System.IntPtr.Zero, 
								32796, 
								System.IntPtr.Zero, 
								1, 
								stringBuilder
							);
							__label0__ = "IL_10B";
							continue __step0__;
						}
						__label0__ = "IL_10B";
						continue __step0__;
				}
				if (!((System.Environment.OSVersion.Platform === System.PlatformID.Win32NT) && (System.Environment.OSVersion.Version.Major >= 6))) {
					num = Microsoft.Win32.Win32Native.SHGetFolderPath(
						System.IntPtr.Zero, 
						32796, 
						System.IntPtr.Zero, 
						0, 
						stringBuilder
					);
					if (num !== 0) {
						num = Microsoft.Win32.Win32Native.SHGetFolderPath(
							System.IntPtr.Zero, 
							32796, 
							System.IntPtr.Zero, 
							1, 
							stringBuilder
						);
					}
				} else {
					var guid = new JSIL.Variable(JSIL.New(System.Guid, "_ctor$0", [JSIL.Array.New(System.Byte, [164, 161, 32, 165, 128, 23, 246, 79, 189, 24, 22, 115, 67, 197, 175, 22])]));
					num = $asm05.System.Windows.Hosting.HostAppDomainManager.SHGetKnownFolderPath(/* ref */ guid, 32768, System.IntPtr.Zero, /* ref */ intPtr);
					if (System.IntPtr.op_Inequality(intPtr.value, System.IntPtr.Zero)) {
						stringBuilder.Append$2(System.Runtime.InteropServices.Marshal.PtrToStringUni$1(intPtr.value));
						$asm05.System.Windows.Hosting.HostAppDomainManager.CoTaskMemFree(intPtr.value);
					}
				}
				__label0__ = "IL_10B";
				continue __step0__;
				break;
			case "IL_10B":
				if (num === 0) {
					return System.IO.Path.Combine$0(System.IO.Path.Combine$0(System.IO.Path.Combine$0(stringBuilder.toString(), "Microsoft"), "Silverlight"), "is");
				}
				throw JSIL.New(System.InvalidOperationException, "_ctor$0", []);
				break __step0__;
		}
	}
};
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.CheckPathForFileSystemAccess = function (path) {
	if (path === null) {
		return false;
	}
	this.EnsurePathsInitialized();
	path = $asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedPath(path);
	return (!((this.m_MyDocumentsPath === null) || 
			!$asm05.System.Windows.Hosting.HostAppDomainManager.IsSameOrSubPath(path, this.m_MyDocumentsPath)) || 
		!((this.m_MyMusicPath === null) || 
			!$asm05.System.Windows.Hosting.HostAppDomainManager.IsSameOrSubPath(path, this.m_MyMusicPath)) || 
		!((this.m_MyPicturesPath === null) || 
			!$asm05.System.Windows.Hosting.HostAppDomainManager.IsSameOrSubPath(path, this.m_MyPicturesPath)) || !((this.m_MyVideosPath === null) || 
			!$asm05.System.Windows.Hosting.HostAppDomainManager.IsSameOrSubPath(path, this.m_MyVideosPath)));
};
$asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedPath = function (path) {
	path = System.IO.Path.UnsafeGetFullPath(path);
	if (!path.EndsWith$0(System.IO.Path.DirectorySeparatorChar.toString())) {
		path = (JSIL.ConcatString(path, System.IO.Path.DirectorySeparatorChar));
	}
	path = path.ToLower$0();
	return path;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.EnsurePathsInitialized = function () {
	var pathsLock = null;
	System.Threading.Monitor.Enter((pathsLock = this.m_PathsLock));
	try {
		if (this.m_MyDocumentsPath === null) {
			this.m_MyDocumentsPath = $asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedFolderPath(System.Environment.SpecialFolder.MyDocuments);
		}
		if (this.m_MyMusicPath === null) {
			this.m_MyMusicPath = $asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedFolderPath(System.Environment.SpecialFolder.MyMusic);
		}
		if (this.m_MyPicturesPath === null) {
			this.m_MyPicturesPath = $asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedFolderPath(System.Environment.SpecialFolder.MyPictures);
		}
		if (this.m_MyVideosPath === null) {
			this.m_MyVideosPath = $asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedFolderPath(System.Environment.SpecialFolder.MyVideos);
		}
	} finally {
		System.Threading.Monitor.Exit(pathsLock);
	}
};
$asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedFolderPath = function (folder) {
	try {
		var text = System.Environment.UnsafeGetFolderPath(folder);
		text = $asm05.System.Windows.Hosting.HostAppDomainManager.GetNormalizedPath(text);
		if (!System.IO.Path.IsPathRooted(text)) {
			var result = null;
		} else {
			result = text;
		}
	} catch ($exception) {
		result = null;
	}
	return result;
};
$asm05.System.Windows.Hosting.HostAppDomainManager.IsSameOrSubPath = function (candidatePath, path) {
	return candidatePath.StartsWith$0(path);
};
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype._ctor = function () {
	this.m_PathsLock = new System.Object();
	System.AppDomainManager.prototype._ctor.call(this);
};
JSIL.OverloadedMethod($asm05.System.Windows.Hosting.HostAppDomainManager.prototype, "CheckSecuritySettings", [
		["CheckSecuritySettings$0", [System.IO.IsolatedStorage.IsolatedStorageSecurityState]], 
		["CheckSecuritySettings$1", [System.Net.NetworkSecurityState]], 
		["CheckSecuritySettings$2", [System.IO.FileSecurityState]], 
		["CheckSecuritySettings$3", [MS.Internal.NavigationSecurityState]], 
		["CheckSecuritySettings$4", [System.Security.SecurityState]]
	]);
Object.defineProperty($asm05.System.Windows.Hosting.HostAppDomainManager, "Unlimited", {
		"value": 9223372036854775807}
);
$asm05.System.Windows.Hosting.HostAppDomainManager.s_groups = null;
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.m_MyDocumentsPath = null;
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.m_MyMusicPath = null;
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.m_MyPicturesPath = null;
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.m_MyVideosPath = null;
$asm05.System.Windows.Hosting.HostAppDomainManager.prototype.m_PathsLock = null;

$asm05.System.Windows.Hosting.ManagedHost.InitializeHost = function (runtimeHostHandle) {
	if (System.IntPtr.op_Equality(runtimeHostHandle, System.IntPtr.Zero)) {
		return -2147024809;
	}
	if (System.Windows.Hosting.NativeHost.Current === null) {
		return -2147418113;
	}
	try {
		var runtimeHost = new $asm05.System.Windows.Hosting.ManagedRuntimeHost(runtimeHostHandle);
		System.Windows.Hosting.NativeHost.Current.Initialize(runtimeHost);
		System.Runtime.Serialization.Globals.SetScriptObjectJsonSerializer(System.Windows.Browser.ScriptObject, JSIL.Delegate.New("System.Func`2[System.Object, System.String]", null, System.Windows.Browser.ScriptObject.ToJson), JSIL.Delegate.New("System.Func`2[System.String, System.Object]", null, System.Windows.Browser.ScriptObject.ToScriptObject));
		var result = 0;
	} catch ($exception) {
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.ManagedHost.InvokeDelegate = function (pHandle, nParamCount, pParams, /* ref */ pResult) {
	if (System.Windows.Hosting.NativeHost.Current.IsShuttingDown) {
		return 1;
	}
	if (nParamCount > 16777216) {
		return -2147024809;
	}
	var delegateWrapper = JSIL.Cast(System.Runtime.InteropServices.GCHandle.op_Explicit$0(pHandle).Target, System.Windows.Hosting.DelegateWrapper);
	if (delegateWrapper === null) {
		return -2147024809;
	}
	if (pParams === null) {
		pParams = JSIL.Array.New(System.Windows.Hosting.NativeMethods.ScriptParam, 0);
	}
	System.Windows.Hosting.NativeHost.EnterManagedCode();
	try {
		try {
			if (JSIL.TryCast(delegateWrapper, System.Windows.Hosting.CallbackCookie) === null) {
				$asm05.System.Windows.Hosting.ManagedHost.VerifyScriptableEnabled();
			}
			$asm05.System.Windows.Hosting.ScriptingInterface.InvokeDelegate(delegateWrapper, pParams, /* ref */ pResult);
			var result = 0;
		} catch ($exception) {
			result = -2147467259;
		}
	} finally {
		System.Windows.Hosting.NativeHost.LeaveManagedCode();
	}
	return result;
};
$asm05.System.Windows.Hosting.ManagedHost.ReleaseHandle = function (pHandle) {
	var gCHandle = System.Runtime.InteropServices.GCHandle.op_Explicit$0(pHandle).MemberwiseClone();
	JSIL.Cast(gCHandle.Target, System.Windows.Hosting.INativePeer).INativePeer_Disconnect();
	gCHandle.Free();
	return 0;
};
$asm05.System.Windows.Hosting.ManagedHost.GetScriptableMemberInfo = JSIL.UntranslatableFunction("System.Int32 System.Windows.Hosting.ManagedHost::GetScriptableMemberInfo(System.IntPtr,System.Int32,System.Int32&,System.Windows.Hosting.NativeMethods/MemberTypes&,System.Int32&,System.IntPtr)");
$asm05.System.Windows.Hosting.ManagedHost.InvokeScriptableMember = function (pHandle, nMemberID, nInvokeType, nArgCount, pArgs, /* ref */ pResult, /* ref */ pExcepInfo) {
	if (nArgCount > 16777216) {
		return -2147024809;
	}
	var obj = JSIL.Cast(System.Runtime.InteropServices.GCHandle.op_Explicit$0(pHandle).Target, $asm05.System.Windows.Browser.ManagedObject);
	System.Windows.Hosting.NativeHost.EnterManagedCode();
	try {
		try {
			System.Windows.Browser.HtmlPage.VerifyThread();
			$asm05.System.Windows.Hosting.ManagedHost.VerifyScriptableEnabled();
			$asm05.System.Windows.Hosting.ScriptingInterface.InvokeScriptableMember(
				obj, 
				nInvokeType, 
				nMemberID, 
				pArgs, 
				/* ref */ pResult
			);
			var result = 0;
		} catch ($exception) {
			var arg_41_0 = $exception;
			pExcepInfo.value.nCode = 1001;
			pExcepInfo.value.pszMessage = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_AllocMemory$0(arg_41_0.toString());
			result = -2147352567;
		}
	} finally {
		System.Windows.Hosting.NativeHost.LeaveManagedCode();
	}
	return result;
};
$asm05.System.Windows.Hosting.ManagedHost.SetHtmlAccessEnabled = function (isEnabled) {
	var result = -2147467259;
	try {
		result = 0;
	} catch ($exception) {
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.ManagedHost.RequestShutdown = function () {
	try {
		System.Windows.Hosting.NativeHost.Current.BeginShutdown();
		System.Windows.Browser.HtmlPage.Dispose();
		var result = 0;
	} catch ($exception) {
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.ManagedHost.DisposeHost = function () {
	try {
		System.Windows.Hosting.NativeHost.Current.Dispose();
		var result = 0;
	} catch ($exception) {
		result = -2147467259;
	}
	return result;
};
$asm05.System.Windows.Hosting.ManagedHost.VerifyScriptableEnabled = function () {
	if (!System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_ScriptableEnabled) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$2("ManagedHost_ScriptableNotEnabled")]);
	}
};

$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.get_ScriptableEnabled = function () {
	var flag = new JSIL.Variable(false);
	this.IsCrossDomainSource(/* ref */ flag);
	return (!flag.value || (System.Windows.Deployment.Current.ExternalCallersFromCrossDomain !== System.Windows.CrossDomainAccess.NoAccess));
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype._ctor = function (runtimeHostHandle) {
	System.Object.prototype._ctor.call(this);
	this._runtimeHostHandle = runtimeHostHandle;
	this.AddReference(runtimeHostHandle);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.Finalize = function () {
	try {
		this.Dispose();
	} finally {
		System.Object.prototype.Finalize.call(this);
	}
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.Dispose = function () {
	if (System.IntPtr.op_Inequality(this._runtimeHostHandle, System.IntPtr.Zero)) {
		this.ReleaseReference(this._runtimeHostHandle);
		this._runtimeHostHandle = System.IntPtr.Zero;
	}
	System.GC.SuppressFinalize(this);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.AddReference = function (pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostAddReference(pObject);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.ReleaseReference = function (pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostReleaseReference(pObject);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.ReleaseIUnknownReference = function (pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostReleaseIUnknownReference(pObject);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.AllocMemory$0 = function (pszValue) {
	var intPtr = System.IntPtr.Zero;
	if (pszValue !== null) {
		intPtr = $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostAllocMemory(((pszValue.length + 1) * System.Runtime.InteropServices.Marshal.SystemDefaultCharSize));
		System.Runtime.InteropServices.Marshal.Copy$1(pszValue.ToCharArray(), 0, intPtr, pszValue.length);
		System.Runtime.InteropServices.Marshal.WriteInt16$0(intPtr, (pszValue.length * System.Runtime.InteropServices.Marshal.SystemDefaultCharSize), 0);
	}
	return intPtr;
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.AllocMemory$1 = function (pszValue, cCount) {
	var intPtr = System.IntPtr.Zero;
	if (!((pszValue === null) || (cCount <= 0))) {
		intPtr = $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostAllocMemory(((cCount + 1) * System.Runtime.InteropServices.Marshal.SystemDefaultCharSize));
		if (pszValue.length > cCount) {
			pszValue = pszValue.Substring$1(0, cCount);
		}
		System.Runtime.InteropServices.Marshal.Copy$1(pszValue.ToCharArray(), 0, intPtr, pszValue.length);
		System.Runtime.InteropServices.Marshal.WriteInt16$0(intPtr, (pszValue.length * System.Runtime.InteropServices.Marshal.SystemDefaultCharSize), 0);
	}
	return intPtr;
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.FreeMemory = function (pBytes) {
	if (System.IntPtr.op_Inequality(pBytes, System.IntPtr.Zero)) {
		$asm05.System.Windows.Hosting.UnsafeNativeMethods.HostFreeMemory(pBytes);
		pBytes = System.IntPtr.Zero;
	}
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.PtrToStringUni$0 = function (ptr) {
	return System.Runtime.InteropServices.Marshal.PtrToStringUni$1(ptr);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.PtrToStringUni$1 = function (ptr, len) {
	return System.Runtime.InteropServices.Marshal.PtrToStringUni$0(ptr, len);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.CreateCallback = function (pDelegateHandle, /* ref */ ppCallback) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostCreateCallback(this._runtimeHostHandle, pDelegateHandle, /* ref */ ppCallback);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.NotifyError = function (pszMessage) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostNotifyError(this._runtimeHostHandle, pszMessage);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.RegisterScriptableObject = function (pszScriptKey, pObject) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostRegisterScriptableObject(this._runtimeHostHandle, pszScriptKey, pObject);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.UnregisterScriptableObject = function (pszScriptKey) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostUnregisterScriptableObject(this._runtimeHostHandle, pszScriptKey);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.GetBrowserService = function (/* ref */ browserService) {
	var intPtr = new JSIL.Variable(0), supportsBridge = new JSIL.Variable(false);
	if (System.IntPtr.op_Equality(this._runtimeHostHandle, System.IntPtr.Zero)) {
		browserService.value = null;
		return 1;
	}
	var num = $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostGetBrowserService(this._runtimeHostHandle, /* ref */ intPtr, /* ref */ supportsBridge);
	if (!((num !== 0) || !System.IntPtr.op_Inequality(intPtr.value, System.IntPtr.Zero))) {
		browserService.value = new $asm05.System.Windows.Hosting.BrowserService(intPtr.value, supportsBridge.value, this);
		$asm05.System.Windows.Hosting.UnsafeNativeMethods.HostReleaseReference(intPtr.value);
	} else {
		browserService.value = null;
	}
	return num;
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.IsCrossDomainSource = function (/* ref */ isCrossDomainSource) {
	var num = $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostIsCrossDomainSource(this._runtimeHostHandle, /* ref */ isCrossDomainSource);
	if (num !== 0) {
		isCrossDomainSource.value = false;
	}
	return num;
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.AllowHtmlPopupWindow = function (/* ref */ allowHtmlPopupWindow) {
	var num = $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostAllowHtmlPopupWindow(this._runtimeHostHandle, /* ref */ allowHtmlPopupWindow);
	if (num !== 0) {
		allowHtmlPopupWindow.value = false;
	}
	return num;
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.DisallowPopupWindow = function () {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostDisallowPopupWindow(this._runtimeHostHandle);
};
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.RaiseAsyncCallback = function (pDelegate, useFastPath) {
	return $asm05.System.Windows.Hosting.UnsafeNativeMethods.HostRaiseAsyncCallback(this._runtimeHostHandle, pDelegate, useFastPath);
};
JSIL.OverloadedMethod($asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype, "AllocMemory", [
		["AllocMemory$0", [System.String]], 
		["AllocMemory$1", [System.String, System.Int32]]
	]);
JSIL.OverloadedMethod($asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype, "PtrToStringUni", [
		["PtrToStringUni$0", [System.IntPtr]], 
		["PtrToStringUni$1", [System.IntPtr, System.Int32]]
	]);
JSIL.MakeProperty($asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype, "ScriptableEnabled", 
	$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype.get_ScriptableEnabled, null);
$asm05.System.Windows.Hosting.ManagedRuntimeHost.prototype._runtimeHostHandle = 0;

$asm05.System.Windows.Hosting.ScriptingInterface.VerifyScriptableObject = function (instance) {
	var type = (JSIL.GetType(instance));
	if (!type.IsVisible) {
		throw JSIL.New(System.InvalidOperationException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptingInterface_NonPublicType", [type.FullName])]);
	}
	if (type.IsDefined(System.Windows.Browser.ScriptableTypeAttribute, true)) {
		return;
	}
	var properties = type.GetProperties$1();
__loop0__: 
	for (var i = 0; i < properties.length; ++i) {
		var propertyInfo = properties[i];
		if (propertyInfo.IsDefined(System.Windows.Browser.ScriptableMemberAttribute, true)) {
			return;
		}
	}
	var events = type.GetEvents$0();
__loop1__: 
	for (var j = 0; j < events.length; ++j) {
		var eventInfo = events[j];
		if (eventInfo.IsDefined(System.Windows.Browser.ScriptableMemberAttribute, true)) {
			return;
		}
	}
	var methods = type.GetMethods$0();
__loop2__: 
	for (var k = 0; k < methods.length; ++k) {
		var methodInfo = methods[k];
		if (methodInfo.IsDefined(System.Windows.Browser.ScriptableMemberAttribute, true)) {
			return;
		}
	}
	throw JSIL.New(System.ArgumentException, "_ctor$1", [$asm05.System.Windows.Browser.Resx.GetString$0("ScriptingInterface_NoScriptableMembers", ["instance"])]);
};
$asm05.System.Windows.Hosting.ScriptingInterface.InvokeScriptableMember = function (obj, invokeType, memberID, args, /* ref */ pResult) {
	var value = obj.Invoke$2(invokeType, memberID, args);
	$asm05.System.Windows.Hosting.ScriptingInterface.InitializeScriptParam(/* ref */ pResult, value);
};
$asm05.System.Windows.Hosting.ScriptingInterface.InvokeDelegate = function (delegateWrapper, pParams, /* ref */ pResult) {
	var parameters = delegateWrapper.GetParameters();
	var args = $asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$0(parameters, pParams);
	var value = delegateWrapper.InternalInvoke(args);
	$asm05.System.Windows.Hosting.ScriptingInterface.InitializeScriptParam(/* ref */ pResult, value);
};
$asm05.System.Windows.Hosting.ScriptingInterface.GetDelegateForScriptObject = function (eventHandlerType, obj) {
	var delegate = JSIL.TryCast(obj.ManagedObject, System.Delegate);
	if (delegate === null) {
		delegate = System.Delegate.CreateDelegate$7(eventHandlerType, obj, System.Windows.Browser.ScriptObject.GetMethod$4("OnEvent", (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic)));
	}
	return delegate;
};
$asm05.System.Windows.Hosting.ScriptingInterface.IsCompatibleWithArgs = function (member, invokeType, args) {
	switch (Number(invokeType)) {
		case 2: 
			return (args.length === 0);
		case 4: 
			return (args.length === 1);
	}
	var methodInfo = JSIL.Cast(member, $asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod)._methodInfo;
	var parameters = methodInfo.GetParameters();
	if (parameters.length !== args.length) {
		return false;
	}
__loop0__: 
	for (var i = 0; i < args.length; ++i) {
		if (!$asm05.System.Windows.Hosting.ScriptingInterface.IsCompatibleWith(args[i].MemberwiseClone(), parameters[i].ParameterType)) {
			return false;
		}
	}
	return true;
};
$asm05.System.Windows.Hosting.ScriptingInterface.IsCompatibleWith = function (arg, paramType) {
	switch (Number(arg.type)) {
		case 0: 
		case 7: 
		case 8: 
		case 9: 
		case 10: 
			if (!(!paramType.IsPrimitive && !paramType.IsValueType)) {
				return false;
			}
			break;
		case 1: 
		case 2: 
		case 3: 
			if (!(paramType.IsPrimitive || (paramType === System.Object))) {
				return false;
			}
			break;
		case 4: 
			if (!((paramType === System.String) || 
					(paramType === System.Object) || 
					(paramType === System.Char) || 
					(paramType === System.Guid) || (paramType === System.Type))) {
				return false;
			}
			break;
		case 6: 
			if (paramType.IsPrimitive) {
				return false;
			}
			break;
	}
	return true;
};
$asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParams = function (args) {
	if (args.length > 16777216) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ScriptingInterface_InvalidArgs"), "args"]);
	}
	var array = JSIL.Array.New(System.Windows.Hosting.NativeMethods.ScriptParam, args.length);
__loop0__: 
	for (var i = 0; i < args.length; ++i) {
		$asm05.System.Windows.Hosting.ScriptingInterface.InitializeScriptParam(JSIL.UnmaterializedReference(), args[i]);
	}
	return array;
};
$asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$0 = function (parameters, args) {
	var num = parameters.length;
	if (!((num <= args.length) && (num <= 16777216))) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ScriptingInterface_InvalidArgs"), "args"]);
	}
	var array = JSIL.Array.New(System.Object, num);
	if (!((num >= args.length) || (num <= 0))) {
		var parameterInfo = parameters[(num - 1)];
		if (!(!parameterInfo.IsDefined(System.ParamArrayAttribute, false) || !parameterInfo.ParameterType.IsArray)) {
		__loop0__: 
			for (var i = 0; i < (num - 1); ++i) {
				var parameterType = parameters[i].ParameterType;
				array[i] = $asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValueForType(args[i].MemberwiseClone(), parameterType);
			}
			var elementType = parameterInfo.ParameterType.GetElementType();
			var num2 = (args.length - (num - 1));
			var array2 = (JSIL.Array.New(elementType, num2));
		__loop1__: 
			for (var j = 0; j < num2; ++j) {
				array2.SetValue($asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValueForType(args[((num - 1) + j)].MemberwiseClone(), elementType), j);
			}
			array[(num - 1)] = array2;
			return array;
		}
	}
__loop2__: 
	for (var k = 0; k < num; ++k) {
		var parameterType2 = parameters[k].ParameterType;
		array[k] = $asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValueForType(args[k].MemberwiseClone(), parameterType2);
	}
	return array;
};
$asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParams$1 = function (desiredTypes, args) {
	if (!((desiredTypes.length <= args.length) && (args.length <= 16777216))) {
		throw JSIL.New(System.ArgumentException, "_ctor$4", [$asm05.System.Windows.Browser.Resx.GetString$2("ScriptingInterface_InvalidArgs"), "args"]);
	}
	var array = JSIL.Array.New(System.Object, desiredTypes.length);
__loop0__: 
	for (var i = 0; i < desiredTypes.length; ++i) {
		array[i] = $asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValueForType(args[i].MemberwiseClone(), desiredTypes[i]);
	}
	return array;
};
$asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParam = function (scriptParam) {
	return $asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValue(scriptParam);
};
$asm05.System.Windows.Hosting.ScriptingInterface.ConvertFromScriptParamAndDispose = function ($scriptParam) {
	var scriptParam = new JSIL.Variable($scriptParam);
	try {
		var scriptParamValue = $asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValue(scriptParam.value.MemberwiseClone());
	} finally {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(/* ref */ scriptParam);
	}
	return scriptParamValue;
};
$asm05.System.Windows.Hosting.ScriptingInterface.ConvertToScriptParam = function (value) {
	var result = new JSIL.Variable(new System.Windows.Hosting.NativeMethods.ScriptParam());
	$asm05.System.Windows.Hosting.ScriptingInterface.InitializeScriptParam(/* ref */ result, value);
	return result.value;
};
$asm05.System.Windows.Hosting.ScriptingInterface.InitializeScriptParam = function (/* ref */ scriptParam, value) {
	if (value === null) {
		scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.VoidParam;
		return;
	}
	if (JSIL.TryCast(value, System.Boolean)) {
		scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.BooleanParam;
		scriptParam.value.boolData = JSIL.Cast(value, System.Boolean);
		return;
	}
	if (!((JSIL.TryCast(value, System.Int32) === 0) && 
			(JSIL.TryCast(value, System.Enum) === null) && 
			(JSIL.TryCast(value, System.Int16) === 0) && 
			(JSIL.TryCast(value, System.UInt16) === 0) && 
			(JSIL.TryCast(value, System.Byte) === 0) && 
			(JSIL.TryCast(value, System.SByte) === 0) && 
			(JSIL.TryCast(value, System.Double) === 0) && 
			(JSIL.TryCast(value, System.UInt32) === 0) && 
			(JSIL.TryCast(value, System.Int64) === 0) && 
			(JSIL.TryCast(value, System.UInt64) === 0) && 
			(JSIL.TryCast(value, System.Decimal) === null) && (JSIL.TryCast(value, System.Single) === 0))) {
		scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.DoubleParam;
		scriptParam.value.doubleData = System.Convert.ToDouble$1(value, System.Globalization.CultureInfo.InvariantCulture);
		return;
	}
	if (!((JSIL.TryCast(value, System.String) === null) && 
			(JSIL.TryCast(value, System.Char) === 0) && (JSIL.TryCast(value, System.Guid) === new System.Guid()))) {
		var text = value.toString();
		scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.StringParam;
		scriptParam.value.nLength = text.length;
		scriptParam.value.ptrData = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_AllocMemory$0(text);
		return;
	}
	if (JSIL.TryCast(value, System.DateTime) !== new System.DateTime()) {
		scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.ObjectParam;
		var num = Math.floor((JSIL.Cast(value, System.DateTime).ToUniversalTime().Ticks - $asm05.System.Windows.Hosting.ScriptingInterface.DatetimeMinTimeTicks) / 10000);
		var scriptObject = JSIL.Cast(System.Windows.Browser.HtmlPage.Window.Eval(JSIL.ConcatString("new Date(", num, ")")), System.Windows.Browser.ScriptObject);
		scriptParam.value.ptrData = scriptObject.GetObjectHandleAddRef();
		return;
	}
	if (JSIL.TryCast(value, System.Windows.Browser.ScriptObject) !== null) {
		if (JSIL.TryCast(value, System.Windows.Browser.HtmlDocument) !== null) {
			scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.HtmlDocumentParam;
		} else if (JSIL.TryCast(value, System.Windows.Browser.HtmlElement) !== null) {
			scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.HtmlElementParam;
		} else if (JSIL.TryCast(value, System.Windows.Browser.HtmlWindow) !== null) {
			scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.HtmlWindowParam;
		} else if (JSIL.TryCast(value, System.Windows.Browser.ScriptObjectCollection) !== null) {
			scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.HtmlElementCollectionParam;
		} else {
			scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.ObjectParam;
		}
		scriptParam.value.ptrData = JSIL.Cast(value, System.Windows.Browser.ScriptObject).GetObjectHandleAddRef();
		return;
	}
	if (JSIL.TryCast(value, System.ValueType) !== null) {
		value = $asm05.System.Windows.Browser.ManagedObject.CopyValueType(value);
	}
	var orCreateManagedObject = $asm05.System.Windows.Browser.ManagedObject.GetOrCreateManagedObject(value);
	scriptParam.value.type = System.Windows.Hosting.NativeMethods.ScriptParamType.ObjectParam;
	scriptParam.value.ptrData = orCreateManagedObject.GetObjectHandleAddRef();
};
$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParams = function (scriptParams) {
__loop0__: 
	for (var i = 0; i < scriptParams.length; ++i) {
		$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam(JSIL.UnmaterializedReference());
	}
};
$asm05.System.Windows.Hosting.ScriptingInterface.DisposeScriptParam = function (/* ref */ scriptParam) {
	switch (Number(scriptParam.value.type)) {
		case 4: 
			if (System.IntPtr.op_Inequality(scriptParam.value.ptrData, System.IntPtr.Zero)) {
				System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(scriptParam.value.ptrData);
				scriptParam.value.ptrData = System.IntPtr.Zero;
				return;
			}
			break;
		case 5: 
			break;
		case 6: 
		case 7: 
		case 8: 
		case 9: 
		case 10: 
			if (System.IntPtr.op_Inequality(scriptParam.value.ptrData, System.IntPtr.Zero)) {
				System.Windows.Hosting.NativeHost.Current.BrowserService.IBrowserService_ReleaseObject(scriptParam.value.ptrData);
				scriptParam.value.ptrData = System.IntPtr.Zero;
			}
			break;
		default: 
			return;
	}
};
$asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValue = function (scriptParam) {
	switch (Number(scriptParam.type)) {
		case 1: 
			return scriptParam.intData;
		case 2: 
			return scriptParam.boolData;
		case 3: 
			return scriptParam.doubleData;
		case 4: 
			if (System.IntPtr.op_Equality(scriptParam.ptrData, System.IntPtr.Zero)) {
				return null;
			}
			return System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$1(scriptParam.ptrData, scriptParam.nLength);
		case 6: 
			return System.Windows.Browser.ScriptObject.GetObject$1(scriptParam.ptrData, System.Windows.Browser.ScriptObject, false);
		case 7: 
			return System.Windows.Browser.ScriptObject.GetObject$1(scriptParam.ptrData, System.Windows.Browser.HtmlElement, false);
		case 8: 
			return System.Windows.Browser.ScriptObject.GetObject$1(scriptParam.ptrData, System.Windows.Browser.HtmlDocument, false);
		case 9: 
			return System.Windows.Browser.ScriptObject.GetObject$1(scriptParam.ptrData, System.Windows.Browser.ScriptObjectCollection, false);
		case 10: 
			return System.Windows.Browser.ScriptObject.GetObject$1(scriptParam.ptrData, System.Windows.Browser.HtmlWindow, false);
	}
	return null;
};
$asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValueForType = function (scriptParam, desiredType) {
	switch (Number(scriptParam.type)) {
		case 1: 
		case 2: 
		case 3: 
		case 4: 
			if (desiredType.IsEnum) {
				desiredType = System.Enum.GetUnderlyingType(desiredType);
			} else {
				if (desiredType === System.Guid) {
					return JSIL.New(System.Guid, "_ctor$4", [$asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValue(scriptParam.MemberwiseClone()).toString()]);
				}
				if (desiredType === System.Type) {
					return System.Type.GetType$1($asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValue(scriptParam.MemberwiseClone()).toString(), true);
				}
			}
			return System.Convert.ChangeType$1($asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValue(scriptParam.MemberwiseClone()), desiredType, System.Globalization.CultureInfo.InvariantCulture);
		case 6: 
			var object = System.Windows.Browser.ScriptObject.GetObject$1(scriptParam.ptrData, System.Windows.Browser.ScriptObject, false);
			return object.ConvertTo(desiredType, false);
	}
	return $asm05.System.Windows.Hosting.ScriptingInterface.GetScriptParamValue(scriptParam.MemberwiseClone());
};
$asm05.System.Windows.Hosting.ScriptingInterface.GetExceptionMessageAndDispose = function (/* ref */ excepInfo) {
	var text = null;
	if (System.IntPtr.op_Inequality(excepInfo.value.pszSource, System.IntPtr.Zero)) {
		text = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(excepInfo.value.pszSource);
	}
	if (System.IntPtr.op_Inequality(excepInfo.value.pszMessage, System.IntPtr.Zero)) {
		if (text !== null) {
			text = ((text + System.Environment.NewLine + System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(excepInfo.value.pszMessage)));
		} else {
			text = System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_PtrToStringUni$0(excepInfo.value.pszMessage);
		}
	}
	$asm05.System.Windows.Hosting.ScriptingInterface.DisposeExceptionInfo(/* ref */ excepInfo);
	return text;
};
$asm05.System.Windows.Hosting.ScriptingInterface.DisposeExceptionInfo = function (/* ref */ excepInfo) {
	if (System.IntPtr.op_Inequality(excepInfo.value.pszSource, System.IntPtr.Zero)) {
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(excepInfo.value.pszSource);
		excepInfo.value.pszSource = System.IntPtr.Zero;
	}
	if (System.IntPtr.op_Inequality(excepInfo.value.pszMessage, System.IntPtr.Zero)) {
		System.Windows.Hosting.NativeHost.Current.RuntimeHost.IManagedRuntimeHost_FreeMemory(excepInfo.value.pszMessage);
		excepInfo.value.pszMessage = System.IntPtr.Zero;
	}
};
JSIL.OverloadedMethod($asm05.System.Windows.Hosting.ScriptingInterface, "ConvertFromScriptParams", [
		["ConvertFromScriptParams$0", [System.Array.Of(System.Reflection.ParameterInfo), System.Array.Of(System.Windows.Hosting.NativeMethods.ScriptParam)]], 
		["ConvertFromScriptParams$1", [System.Array.Of(System.Type), System.Array.Of(System.Windows.Hosting.NativeMethods.ScriptParam)]]
	]);
$asm05.System.Windows.Hosting.ScriptingInterface.DatetimeMinTimeTicks = 0;
$asm05.System.Windows.Hosting.ScriptingInterface._cctor = function () {
	$asm05.System.Windows.Hosting.ScriptingInterface.DatetimeMinTimeTicks = JSIL.New(System.DateTime, "_ctor$7", [1970, 1, 1, 0, 0, 0, System.DateTimeKind.Utc]).Ticks;
};


JSIL.QueueInitializer(function () {
		System.Windows.Browser.BrowserInformation.prototype.__StructFields__ = [
			["_cookieEnabled", System.Nullable$b1.Of(System.Boolean)]
		];
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces(System.Windows.Browser.ScriptObject, [
				"System.Dynamic.IDynamicMetaObjectProvider"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObject, [
				"System.Windows.Hosting.INativePeer"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptProperty, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMethod, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptDelegate, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptMemberGroup, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ScriptEvent, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.CreateObjectMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.AddRemoveEventListenerMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.DictionaryGetSetMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexerMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ListPopOrShiftMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ListPushOrUnshiftMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ListIndexOfMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ListReverseMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ListSpliceMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ManagedObjectInfo.ApplyMember, [
				"System.Windows.Browser.ManagedObjectInfo/IScriptMember"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces(System.Windows.Browser.ScriptObjectCollection, [
				"System.Collections.Generic.IEnumerable$b1", "System.Collections.IEnumerable"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Browser.ScriptObjectCollection.ScriptObjectEnumerator, [
				"System.Collections.Generic.IEnumerator$b1", "System.IDisposable", "System.Collections.IEnumerator"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Hosting.BrowserService, [
				"System.Windows.Hosting.IBrowserService", "System.IDisposable"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ExternalMembers($asm05.System.Windows.Hosting.HostAppDomainManager, 
			"SHGetKnownFolderPath", "CoTaskMemFree"
		);
	});
JSIL.QueueInitializer(function () {
		JSIL.ImplementInterfaces($asm05.System.Windows.Hosting.ManagedRuntimeHost, [
				"System.Windows.Hosting.IManagedRuntimeHost", "System.IDisposable"
			]);
	});
JSIL.QueueInitializer(function () {
		JSIL.ExternalMembers($asm05.System.Windows.Hosting.UnsafeNativeMethods, 
			"HostAllocMemory", "HostFreeMemory", "HostAddReference", "HostReleaseReference", "HostReleaseIUnknownReference", "HostCreateCallback", "HostRegisterScriptableObject", "HostUnregisterScriptableObject", "HostNotifyError", "HostGetBrowserService", "HostIsCrossDomainSource", "HostAllowHtmlPopupWindow", "HostDisallowPopupWindow", "HostRaiseAsyncCallback", "DOM_GetIdentity", "DOM_ReferenceEquals", "DOM_GetWindow", "DOM_GetDocument", "DOM_GetDocumentUri", "DOM_CreateFunction", "DOM_CreateManagedObject", "DOM_ReferenceObject", "DOM_ReleaseObject", "DOM_Eval", "DOM_GetControlElement", "DOM_GetElementsByTagName", "DOM_CreateElement", "DOM_GetParent", "DOM_GetChildren", "DOM_InsertChild", "DOM_RemoveChild", "DOM_RemoveAttribute", "DOM_AttachEvent", "DOM_DetachEvent", "DOM_Focus", "DOM_Navigate", "DOM_Submit", "DOM_GetElementCollectionCount", "DOM_GetElementCollectionItem", "DOM_GetEventInfo", "DOM_CreateInstance", "DOM_InvokeBrowserFunction", "DOM_Invoke", "DOM_GetProperty", "DOM_SetProperty", "DOM_GetElementByID", "DOM_GetAttribute", "DOM_SetAttribute", "DOM_GetBrowserInfo", "DOM_GetCookiesEnabled", "DOM_StopPropagation", "DOM_PreventDefault", "DOM_TogglePopupBlocker", "DOM_InPrivateMode", "DOM_InCustomHost", "UI_GetOpenFileName", "UI_GetSaveFileName", "UI_CloseSavedFile", "UI_IsIEProtectedMode", "UI_RequestQuota", "UI_GetBrowserHandle", "GetIsolatedStorageInnerExceptionsAllowedNative"
		);
	});
JSIL.QueueInitializer(function () {
		JSIL.SealTypes($asm05, "System.Windows.Browser", 
			"Resx", "ScriptObject", "HtmlPage", "HttpUtility", "HtmlEntities", "ManagedObject", "ManagedObjectInfo", "MetaScriptObject"
		);
		JSIL.SealTypes($asm05, "System.Windows.Hosting", 
			"ScriptingInterface"
		);
	});
